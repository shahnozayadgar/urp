[
    {
        "example_number": 1,
        "table": "pets_1",
        "question": "Find the maximum weight for each type of pet. List the maximum weight and pet type.",
        "golden_query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
        "prediction": "SELECT pettype , MAX( weight ) , MAX( weight ) FROM pets GROUP BY pettype",
        "errors_detected": [
            "Duplicate Column Selection: max(weight)"
        ]
    },
    {
        "example_number": 2,
        "table": "flight_2",
        "question": "Give the airport code and airport name corresonding to the city Anthony.",
        "golden_query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
        "prediction": "SELECT airportcode , airportname FROM airports WHERE city LIKE '%Anthony%'",
        "errors_detected": [
            "Redundant LIKE Clause"
        ]
    },
    {
        "example_number": 3,
        "table": "cre_Doc_Template_Mgt",
        "question": "Return the lowest version number, along with its corresponding template type code.",
        "golden_query": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
        "prediction": "SELECT version_number , template_type_code FROM templates ORDER BY version_number ASC LIMIT 1",
        "errors_detected": [
            "Missing Aggregation Function in Prediction: min(version_number)",
            "Redundant ORDER BY Clause"
        ]
    },
    {
        "example_number": 4,
        "table": "cre_Doc_Template_Mgt",
        "question": "What are the details for the paragraph that includes the text 'Korea '",
        "golden_query": "select other_details from paragraphs where paragraph_text like 'korea'",
        "prediction": "SELECT other_details FROM paragraphs WHERE paragraph_text = 'Korea'",
        "errors_detected": [
            "Missing LIKE Clause"
        ]
    },
    {
        "example_number": 5,
        "table": "cre_Doc_Template_Mgt",
        "question": "Show all document ids and the number of paragraphs in each document. Order by document id.",
        "golden_query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
        "prediction": "SELECT document_id , COUNT( * ) FROM paragraphs GROUP BY document_id",
        "errors_detected": [
            "Missing ORDER BY Clause"
        ]
    },
    {
        "example_number": 6,
        "table": "cre_Doc_Template_Mgt",
        "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
        "golden_query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
        "prediction": "SELECT document_id FROM paragraphs WHERE paragraph_text LIKE '%Brazil%' INTERSECT SELECT document_id FROM paragraphs WHERE paragraph_text LIKE '%Ireland%'",
        "errors_detected": [
            "Redundant LIKE Clause"
        ]
    },
    {
        "example_number": 7,
        "table": "battle_death",
        "question": "List the name, date and result of each battle.",
        "golden_query": "SELECT name ,  date FROM battle",
        "prediction": "SELECT name , date , result FROM battle",
        "errors_detected": [
            "Duplicate Column Selection: result"
        ]
    },
    {
        "example_number": 8,
        "table": "battle_death",
        "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
        "golden_query": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
        "prediction": "SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'",
        "errors_detected": [
            "Redundant DISTINCT Keyword"
        ]
    },
    {
        "example_number": 9,
        "table": "tvshow",
        "question": "List the number of different series names and contents in the TV Channel table.",
        "golden_query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
        "prediction": "SELECT COUNT( DISTINCT series_name ) , content FROM tv_channel",
        "errors_detected": [
            "Missing Aggregation Function in Prediction: count(content)"
        ]
    },
    {
        "example_number": 10,
        "table": "tvshow",
        "question": "Find id of the tv channels that from the countries where have more than two tv channels.",
        "golden_query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
        "prediction": "SELECT id FROM tv_channel GROUP BY id HAVING COUNT( * ) > 2",
        "errors_detected": [
            "Wrong GROUP BY Condition"
        ]
    },
    {
        "example_number": 11,
        "table": "dog_kennels",
        "question": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",
        "golden_query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
        "prediction": "SELECT name , age , weight FROM dogs WHERE abandoned_yn = 'yes' OR abandoned_yn = 'no'",
        "errors_detected": [
            "Wrong Key Value"
        ]
    },
    {
        "example_number": 12,
        "table": "dog_kennels",
        "question": "How much does the most expensive charge type costs?",
        "golden_query": "SELECT max(charge_amount) FROM Charges",
        "prediction": "SELECT SUM( charge_amount ) FROM charges ORDER BY charge_type DESC LIMIT 1",
        "errors_detected": [
            "Aggregation Function Mismatch for Column 'charge_amount': Expected 'max', Found 'sum'",
            "Redundant ORDER BY Clause"
        ]
    }
]