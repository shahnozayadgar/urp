[
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE course_id = 301",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "course_id",
      "=",
      "301"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "value"
    ],
    "question": "Which student IDs are enrolled in the course with ID 301?",
    "question_toks": [
      "Which",
      "student",
      "IDs",
      "are",
      "enrolled",
      "in",
      "the",
      "course",
      "with",
      "ID",
      "301",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE course_id = 301",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "course_id",
      "=",
      "301"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "value"
    ],
    "question": "Can you provide the IDs of students attending the course numbered 301?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "IDs",
      "of",
      "students",
      "attending",
      "the",
      "course",
      "numbered",
      "301",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE course_id = 301",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "course_id",
      "=",
      "301"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "value"
    ],
    "question": "List the student IDs for those who are registered in course 301.",
    "question_toks": [
      "List",
      "the",
      "student",
      "IDs",
      "for",
      "those",
      "who",
      "are",
      "registered",
      "in",
      "course",
      "301",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE registration_date > '2008-11-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "registration_date",
      ">",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "registration_date",
      ">",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "What are the student IDs of those who registered after November 1, 2008?",
    "question_toks": [
      "What",
      "are",
      "the",
      "student",
      "IDs",
      "of",
      "those",
      "who",
      "registered",
      "after",
      "November",
      "1",
      ",",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE registration_date > '2008-11-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "registration_date",
      ">",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "registration_date",
      ">",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Can you show me the IDs of students who registered for courses post November 1, 2008?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "IDs",
      "of",
      "students",
      "who",
      "registered",
      "for",
      "courses",
      "post",
      "November",
      "1",
      ",",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE registration_date > '2008-11-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "registration_date",
      ">",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "registration_date",
      ">",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "List the student IDs for registrations made after the date of November 1, 2008.",
    "question_toks": [
      "List",
      "the",
      "student",
      "IDs",
      "for",
      "registrations",
      "made",
      "after",
      "the",
      "date",
      "of",
      "November",
      "1",
      ",",
      "2008",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE date_of_attendance BETWEEN '2008-11-01' AND '2008-11-30'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "date_of_attendance",
      "BETWEEN",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'",
      "AND",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "30",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "date_of_attendance",
      "between",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'",
      "and",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Which student IDs attended classes between November 1 and November 30, 2008?",
    "question_toks": [
      "Which",
      "student",
      "IDs",
      "attended",
      "classes",
      "between",
      "November",
      "1",
      "and",
      "November",
      "30",
      ",",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE date_of_attendance BETWEEN '2008-11-01' AND '2008-11-30'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "date_of_attendance",
      "BETWEEN",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'",
      "AND",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "30",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "date_of_attendance",
      "between",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'",
      "and",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Can you provide the IDs of students who were present in class during November 2008?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "IDs",
      "of",
      "students",
      "who",
      "were",
      "present",
      "in",
      "class",
      "during",
      "November",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE date_of_attendance BETWEEN '2008-11-01' AND '2008-11-30'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "date_of_attendance",
      "BETWEEN",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'",
      "AND",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "30",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "date_of_attendance",
      "between",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'",
      "and",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "List the student IDs for those who attended courses in the month of November 2008.",
    "question_toks": [
      "List",
      "the",
      "student",
      "IDs",
      "for",
      "those",
      "who",
      "attended",
      "courses",
      "in",
      "the",
      "month",
      "of",
      "November",
      "2008",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE course_id = '301'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "course_id",
      "=",
      "'",
      "301",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "'",
      "value",
      "'"
    ],
    "question": "Which student IDs are present in the attendance for course 301?",
    "question_toks": [
      "Which",
      "student",
      "IDs",
      "are",
      "present",
      "in",
      "the",
      "attendance",
      "for",
      "course",
      "301",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE course_id = '301'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "course_id",
      "=",
      "'",
      "301",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "'",
      "value",
      "'"
    ],
    "question": "Can you list the student IDs that attended course 301?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "student",
      "IDs",
      "that",
      "attended",
      "course",
      "301",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE course_id = '301'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "course_id",
      "=",
      "'",
      "301",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "'",
      "value",
      "'"
    ],
    "question": "What are the student IDs recorded for course 301 attendance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "student",
      "IDs",
      "recorded",
      "for",
      "course",
      "301",
      "attendance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE registration_date > '2008-11-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "registration_date",
      ">",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "registration_date",
      ">",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Which student IDs registered for courses after November 1, 2008?",
    "question_toks": [
      "Which",
      "student",
      "IDs",
      "registered",
      "for",
      "courses",
      "after",
      "November",
      "1",
      ",",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE registration_date > '2008-11-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "registration_date",
      ">",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "registration_date",
      ">",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Can you provide the student IDs that have registration dates later than November 1, 2008?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "student",
      "IDs",
      "that",
      "have",
      "registration",
      "dates",
      "later",
      "than",
      "November",
      "1",
      ",",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE registration_date > '2008-11-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "registration_date",
      ">",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "registration_date",
      ">",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "What student IDs are associated with course registrations after November 1, 2008?",
    "question_toks": [
      "What",
      "student",
      "IDs",
      "are",
      "associated",
      "with",
      "course",
      "registrations",
      "after",
      "November",
      "1",
      ",",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Students WHERE student_details LIKE '%a%'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Students",
      "WHERE",
      "student_details",
      "LIKE",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "students",
      "where",
      "student_details",
      "like",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "question": "Which student IDs correspond to students whose details contain the letter 'a'?",
    "question_toks": [
      "Which",
      "student",
      "IDs",
      "correspond",
      "to",
      "students",
      "whose",
      "details",
      "contain",
      "the",
      "letter",
      "'",
      "a",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Students WHERE student_details LIKE '%a%'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Students",
      "WHERE",
      "student_details",
      "LIKE",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "students",
      "where",
      "student_details",
      "like",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "question": "Can you list the student IDs for students with 'a' in their details?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "student",
      "IDs",
      "for",
      "students",
      "with",
      "'",
      "a",
      "'",
      "in",
      "their",
      "details",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Students WHERE student_details LIKE '%a%'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Students",
      "WHERE",
      "student_details",
      "LIKE",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "students",
      "where",
      "student_details",
      "like",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "question": "What are the student IDs of those students whose details include the letter 'a'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "student",
      "IDs",
      "of",
      "those",
      "students",
      "whose",
      "details",
      "include",
      "the",
      "letter",
      "'",
      "a",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE course_id = 301",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "course_id",
      "=",
      "301"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "course_id",
      "=",
      "value"
    ],
    "question": "Which student IDs are registered for course ID 301?",
    "question_toks": [
      "Which",
      "student",
      "IDs",
      "are",
      "registered",
      "for",
      "course",
      "ID",
      "301",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE course_id = 301",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "course_id",
      "=",
      "301"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "course_id",
      "=",
      "value"
    ],
    "question": "Can you list the student IDs that have enrolled in course 301?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "student",
      "IDs",
      "that",
      "have",
      "enrolled",
      "in",
      "course",
      "301",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE course_id = 301",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "course_id",
      "=",
      "301"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "course_id",
      "=",
      "value"
    ],
    "question": "What are the student IDs associated with course ID 301?",
    "question_toks": [
      "What",
      "are",
      "the",
      "student",
      "IDs",
      "associated",
      "with",
      "course",
      "ID",
      "301",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE date_of_attendance > '2010-01-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "date_of_attendance",
      ">",
      "'",
      "2010",
      "-",
      "01",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "date_of_attendance",
      ">",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Which student IDs attended classes after January 1, 2010?",
    "question_toks": [
      "Which",
      "student",
      "IDs",
      "attended",
      "classes",
      "after",
      "January",
      "1",
      ",",
      "2010",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE date_of_attendance > '2010-01-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "date_of_attendance",
      ">",
      "'",
      "2010",
      "-",
      "01",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "date_of_attendance",
      ">",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Can you provide the student IDs for those who were present in class after the start of 2010?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "student",
      "IDs",
      "for",
      "those",
      "who",
      "were",
      "present",
      "in",
      "class",
      "after",
      "the",
      "start",
      "of",
      "2010",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE date_of_attendance > '2010-01-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "date_of_attendance",
      ">",
      "'",
      "2010",
      "-",
      "01",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "date_of_attendance",
      ">",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "What student IDs correspond to attendance records from 2010 onwards?",
    "question_toks": [
      "What",
      "student",
      "IDs",
      "correspond",
      "to",
      "attendance",
      "records",
      "from",
      "2010",
      "onwards",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Students WHERE student_details LIKE '%a%'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Students",
      "WHERE",
      "student_details",
      "LIKE",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "students",
      "where",
      "student_details",
      "like",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "question": "Which student IDs have details that include the letter 'a'?",
    "question_toks": [
      "Which",
      "student",
      "IDs",
      "have",
      "details",
      "that",
      "include",
      "the",
      "letter",
      "'",
      "a",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Students WHERE student_details LIKE '%a%'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Students",
      "WHERE",
      "student_details",
      "LIKE",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "students",
      "where",
      "student_details",
      "like",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "question": "Can you identify the student IDs whose details contain the character 'a'?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "student",
      "IDs",
      "whose",
      "details",
      "contain",
      "the",
      "character",
      "'",
      "a",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Students WHERE student_details LIKE '%a%'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Students",
      "WHERE",
      "student_details",
      "LIKE",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "students",
      "where",
      "student_details",
      "like",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "question": "What student IDs are associated with student details that have an 'a' in them?",
    "question_toks": [
      "What",
      "student",
      "IDs",
      "are",
      "associated",
      "with",
      "student",
      "details",
      "that",
      "have",
      "an",
      "'",
      "a",
      "'",
      "in",
      "them",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE course_id = '301'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "course_id",
      "=",
      "'",
      "301",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "'",
      "value",
      "'"
    ],
    "question": "Which student IDs are recorded for course ID 301?",
    "question_toks": [
      "Which",
      "student",
      "IDs",
      "are",
      "recorded",
      "for",
      "course",
      "ID",
      "301",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE course_id = '301'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "course_id",
      "=",
      "'",
      "301",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "'",
      "value",
      "'"
    ],
    "question": "Can you list the student IDs associated with course 301?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "student",
      "IDs",
      "associated",
      "with",
      "course",
      "301",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE course_id = '301'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "course_id",
      "=",
      "'",
      "301",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "'",
      "value",
      "'"
    ],
    "question": "What are the student IDs that attended the course with ID 301?",
    "question_toks": [
      "What",
      "are",
      "the",
      "student",
      "IDs",
      "that",
      "attended",
      "the",
      "course",
      "with",
      "ID",
      "301",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE registration_date > '2008-11-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "registration_date",
      ">",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "registration_date",
      ">",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Which student IDs have registered for courses after November 1, 2008?",
    "question_toks": [
      "Which",
      "student",
      "IDs",
      "have",
      "registered",
      "for",
      "courses",
      "after",
      "November",
      "1",
      ",",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE registration_date > '2008-11-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "registration_date",
      ">",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "registration_date",
      ">",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Can you provide the student IDs that signed up for courses post November 1, 2008?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "student",
      "IDs",
      "that",
      "signed",
      "up",
      "for",
      "courses",
      "post",
      "November",
      "1",
      ",",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE registration_date > '2008-11-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "registration_date",
      ">",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "registration_date",
      ">",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "What student IDs correspond to registrations made after November 1, 2008?",
    "question_toks": [
      "What",
      "student",
      "IDs",
      "correspond",
      "to",
      "registrations",
      "made",
      "after",
      "November",
      "1",
      ",",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Students WHERE student_details LIKE '%Marry%'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Students",
      "WHERE",
      "student_details",
      "LIKE",
      "'",
      "%",
      "Marry",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "students",
      "where",
      "student_details",
      "like",
      "'",
      "%",
      "marry",
      "%",
      "'"
    ],
    "question": "Which student IDs are linked to details that mention 'Marry'?",
    "question_toks": [
      "Which",
      "student",
      "IDs",
      "are",
      "linked",
      "to",
      "details",
      "that",
      "mention",
      "'",
      "Marry",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Students WHERE student_details LIKE '%Marry%'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Students",
      "WHERE",
      "student_details",
      "LIKE",
      "'",
      "%",
      "Marry",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "students",
      "where",
      "student_details",
      "like",
      "'",
      "%",
      "marry",
      "%",
      "'"
    ],
    "question": "Can you identify the student IDs associated with the name 'Marry' in their details?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "student",
      "IDs",
      "associated",
      "with",
      "the",
      "name",
      "'",
      "Marry",
      "'",
      "in",
      "their",
      "details",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Students WHERE student_details LIKE '%Marry%'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Students",
      "WHERE",
      "student_details",
      "LIKE",
      "'",
      "%",
      "Marry",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "students",
      "where",
      "student_details",
      "like",
      "'",
      "%",
      "marry",
      "%",
      "'"
    ],
    "question": "What student IDs have 'Marry' included in their details?",
    "question_toks": [
      "What",
      "student",
      "IDs",
      "have",
      "'",
      "Marry",
      "'",
      "included",
      "in",
      "their",
      "details",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE course_id = '301'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "course_id",
      "=",
      "'",
      "301",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "'",
      "value",
      "'"
    ],
    "question": "Which student IDs are enrolled in the course with ID 301?",
    "question_toks": [
      "Which",
      "student",
      "IDs",
      "are",
      "enrolled",
      "in",
      "the",
      "course",
      "with",
      "ID",
      "301",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE course_id = '301'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "course_id",
      "=",
      "'",
      "301",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "'",
      "value",
      "'"
    ],
    "question": "Can you provide the IDs of students attending the course numbered 301?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "IDs",
      "of",
      "students",
      "attending",
      "the",
      "course",
      "numbered",
      "301",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE course_id = '301'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "course_id",
      "=",
      "'",
      "301",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "'",
      "value",
      "'"
    ],
    "question": "List the student IDs that are registered for the course identified as 301.",
    "question_toks": [
      "List",
      "the",
      "student",
      "IDs",
      "that",
      "are",
      "registered",
      "for",
      "the",
      "course",
      "identified",
      "as",
      "301",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE registration_date > '2008-11-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "registration_date",
      ">",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "registration_date",
      ">",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "What are the student IDs for those who registered for courses after November 1, 2008?",
    "question_toks": [
      "What",
      "are",
      "the",
      "student",
      "IDs",
      "for",
      "those",
      "who",
      "registered",
      "for",
      "courses",
      "after",
      "November",
      "1",
      ",",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE registration_date > '2008-11-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "registration_date",
      ">",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "registration_date",
      ">",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Can you tell me the IDs of students who signed up for courses post November 1, 2008?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "IDs",
      "of",
      "students",
      "who",
      "signed",
      "up",
      "for",
      "courses",
      "post",
      "November",
      "1",
      ",",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE registration_date > '2008-11-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "registration_date",
      ">",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "registration_date",
      ">",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Which student IDs correspond to registrations made after the date of November 1, 2008?",
    "question_toks": [
      "Which",
      "student",
      "IDs",
      "correspond",
      "to",
      "registrations",
      "made",
      "after",
      "the",
      "date",
      "of",
      "November",
      "1",
      ",",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE date_of_attendance = '2008-11-04 10:35:13'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "date_of_attendance",
      "=",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "04",
      "10",
      ":",
      "35",
      ":",
      "13",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "date_of_attendance",
      "=",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "value",
      ":",
      "value",
      ":",
      "value",
      "'"
    ],
    "question": "Which student IDs were present on November 4, 2008, at 10:35 AM?",
    "question_toks": [
      "Which",
      "student",
      "IDs",
      "were",
      "present",
      "on",
      "November",
      "4",
      ",",
      "2008",
      ",",
      "at",
      "10",
      ":",
      "35",
      "AM",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE date_of_attendance = '2008-11-04 10:35:13'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "date_of_attendance",
      "=",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "04",
      "10",
      ":",
      "35",
      ":",
      "13",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "date_of_attendance",
      "=",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "value",
      ":",
      "value",
      ":",
      "value",
      "'"
    ],
    "question": "Can you provide the IDs of students who attended the class at 10:35 AM on November 4, 2008?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "IDs",
      "of",
      "students",
      "who",
      "attended",
      "the",
      "class",
      "at",
      "10",
      ":",
      "35",
      "AM",
      "on",
      "November",
      "4",
      ",",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE date_of_attendance = '2008-11-04 10:35:13'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "date_of_attendance",
      "=",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "04",
      "10",
      ":",
      "35",
      ":",
      "13",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "date_of_attendance",
      "=",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "value",
      ":",
      "value",
      ":",
      "value",
      "'"
    ],
    "question": "List the student IDs that attended the session on the 4th of November, 2008, at 10:35 AM.",
    "question_toks": [
      "List",
      "the",
      "student",
      "IDs",
      "that",
      "attended",
      "the",
      "session",
      "on",
      "the",
      "4th",
      "of",
      "November",
      ",",
      "2008",
      ",",
      "at",
      "10",
      ":",
      "35",
      "AM",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE course_id = 301",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "course_id",
      "=",
      "301"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "value"
    ],
    "question": "Which student IDs are recorded for the course with ID 301?",
    "question_toks": [
      "Which",
      "student",
      "IDs",
      "are",
      "recorded",
      "for",
      "the",
      "course",
      "with",
      "ID",
      "301",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE course_id = 301",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "course_id",
      "=",
      "301"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "value"
    ],
    "question": "Can you list the student IDs that attended the course numbered 301?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "student",
      "IDs",
      "that",
      "attended",
      "the",
      "course",
      "numbered",
      "301",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Attendance WHERE course_id = 301",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "course_id",
      "=",
      "301"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "value"
    ],
    "question": "What are the student IDs associated with course ID 301?",
    "question_toks": [
      "What",
      "are",
      "the",
      "student",
      "IDs",
      "associated",
      "with",
      "course",
      "ID",
      "301",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE registration_date >= '2008-11-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "registration_date",
      ">",
      "=",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "registration_date",
      ">",
      "=",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "What student IDs have registered for courses on or after November 1, 2008?",
    "question_toks": [
      "What",
      "student",
      "IDs",
      "have",
      "registered",
      "for",
      "courses",
      "on",
      "or",
      "after",
      "November",
      "1",
      ",",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE registration_date >= '2008-11-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "registration_date",
      ">",
      "=",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "registration_date",
      ">",
      "=",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Can you provide the student IDs that have course registrations from November 1, 2008, onwards?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "student",
      "IDs",
      "that",
      "have",
      "course",
      "registrations",
      "from",
      "November",
      "1",
      ",",
      "2008",
      ",",
      "onwards",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM Student_Course_Registrations WHERE registration_date >= '2008-11-01'",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "Student_Course_Registrations",
      "WHERE",
      "registration_date",
      ">",
      "=",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_registrations",
      "where",
      "registration_date",
      ">",
      "=",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Which student IDs are linked to course registrations that occurred on or after November 1, 2008?",
    "question_toks": [
      "Which",
      "student",
      "IDs",
      "are",
      "linked",
      "to",
      "course",
      "registrations",
      "that",
      "occurred",
      "on",
      "or",
      "after",
      "November",
      "1",
      ",",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT DISTINCT student_id FROM Student_Course_Attendance WHERE date_of_attendance BETWEEN '2008-11-01' AND '2008-11-30'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "date_of_attendance",
      "BETWEEN",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'",
      "AND",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "30",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "date_of_attendance",
      "between",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'",
      "and",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Which unique student IDs attended classes during November 2008?",
    "question_toks": [
      "Which",
      "unique",
      "student",
      "IDs",
      "attended",
      "classes",
      "during",
      "November",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT DISTINCT student_id FROM Student_Course_Attendance WHERE date_of_attendance BETWEEN '2008-11-01' AND '2008-11-30'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "date_of_attendance",
      "BETWEEN",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'",
      "AND",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "30",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "date_of_attendance",
      "between",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'",
      "and",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Can you identify the distinct student IDs that were present in class throughout November 2008?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "distinct",
      "student",
      "IDs",
      "that",
      "were",
      "present",
      "in",
      "class",
      "throughout",
      "November",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT DISTINCT student_id FROM Student_Course_Attendance WHERE date_of_attendance BETWEEN '2008-11-01' AND '2008-11-30'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "student_id",
      "FROM",
      "Student_Course_Attendance",
      "WHERE",
      "date_of_attendance",
      "BETWEEN",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "01",
      "'",
      "AND",
      "'",
      "2008",
      "-",
      "11",
      "-",
      "30",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "date_of_attendance",
      "between",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'",
      "and",
      "'",
      "value",
      "-",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "What are the unique student IDs recorded for attendance in the month of November 2008?",
    "question_toks": [
      "What",
      "are",
      "the",
      "unique",
      "student",
      "IDs",
      "recorded",
      "for",
      "attendance",
      "in",
      "the",
      "month",
      "of",
      "November",
      "2008",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) FROM invoices GROUP BY billing_country ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the top 5 billing countries based on the number of invoices?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "5",
      "billing",
      "countries",
      "based",
      "on",
      "the",
      "number",
      "of",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) FROM invoices GROUP BY billing_country ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you list the five countries with the highest invoice counts?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "five",
      "countries",
      "with",
      "the",
      "highest",
      "invoice",
      "counts",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) FROM invoices GROUP BY billing_country ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which billing countries have the most invoices, limited to the top five?",
    "question_toks": [
      "Which",
      "billing",
      "countries",
      "have",
      "the",
      "most",
      "invoices",
      ",",
      "limited",
      "to",
      "the",
      "top",
      "five",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country, COUNT(*) FROM customers GROUP BY country ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "country",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "group",
      "by",
      "country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the top 5 countries where customers are located based on their count?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "5",
      "countries",
      "where",
      "customers",
      "are",
      "located",
      "based",
      "on",
      "their",
      "count",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country, COUNT(*) FROM customers GROUP BY country ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "country",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "group",
      "by",
      "country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you identify the five countries with the most customers?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "five",
      "countries",
      "with",
      "the",
      "most",
      "customers",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country, COUNT(*) FROM customers GROUP BY country ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "country",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "group",
      "by",
      "country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries have the highest number of customers, limited to the top five?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "the",
      "highest",
      "number",
      "of",
      "customers",
      ",",
      "limited",
      "to",
      "the",
      "top",
      "five",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the top 5 billing states based on the number of invoices?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "5",
      "billing",
      "states",
      "based",
      "on",
      "the",
      "number",
      "of",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide a list of the five states with the most invoices?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "list",
      "of",
      "the",
      "five",
      "states",
      "with",
      "the",
      "most",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which billing states have the highest invoice counts, limited to the top five?",
    "question_toks": [
      "Which",
      "billing",
      "states",
      "have",
      "the",
      "highest",
      "invoice",
      "counts",
      ",",
      "limited",
      "to",
      "the",
      "top",
      "five",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(customer_id) AS customer_count FROM invoices GROUP BY billing_country ORDER BY customer_count DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "AS",
      "customer_count",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "customer_count",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "customer_id",
      ")",
      "as",
      "customer_count",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "customer_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the top 8 countries with the highest number of customers based on invoice records?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "8",
      "countries",
      "with",
      "the",
      "highest",
      "number",
      "of",
      "customers",
      "based",
      "on",
      "invoice",
      "records",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(customer_id) AS customer_count FROM invoices GROUP BY billing_country ORDER BY customer_count DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "AS",
      "customer_count",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "customer_count",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "customer_id",
      ")",
      "as",
      "customer_count",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "customer_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you list the eight countries that have the most customers according to the invoices?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "eight",
      "countries",
      "that",
      "have",
      "the",
      "most",
      "customers",
      "according",
      "to",
      "the",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(customer_id) AS customer_count FROM invoices GROUP BY billing_country ORDER BY customer_count DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "AS",
      "customer_count",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "customer_count",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "customer_id",
      ")",
      "as",
      "customer_count",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "customer_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries rank in the top eight for customer count derived from invoice data?",
    "question_toks": [
      "Which",
      "countries",
      "rank",
      "in",
      "the",
      "top",
      "eight",
      "for",
      "customer",
      "count",
      "derived",
      "from",
      "invoice",
      "data",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(invoice_id) AS invoice_count FROM invoices GROUP BY billing_country ORDER BY invoice_count DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "invoice_id",
      ")",
      "AS",
      "invoice_count",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "invoice_count",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "invoice_id",
      ")",
      "as",
      "invoice_count",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "invoice_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which are the eight countries with the most invoices issued?",
    "question_toks": [
      "Which",
      "are",
      "the",
      "eight",
      "countries",
      "with",
      "the",
      "most",
      "invoices",
      "issued",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(invoice_id) AS invoice_count FROM invoices GROUP BY billing_country ORDER BY invoice_count DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "invoice_id",
      ")",
      "AS",
      "invoice_count",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "invoice_count",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "invoice_id",
      ")",
      "as",
      "invoice_count",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "invoice_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you identify the top 8 countries based on the number of invoices?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "top",
      "8",
      "countries",
      "based",
      "on",
      "the",
      "number",
      "of",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(invoice_id) AS invoice_count FROM invoices GROUP BY billing_country ORDER BY invoice_count DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "invoice_id",
      ")",
      "AS",
      "invoice_count",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "invoice_count",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "invoice_id",
      ")",
      "as",
      "invoice_count",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "invoice_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "What countries are in the top eight for invoice totals according to the billing information?",
    "question_toks": [
      "What",
      "countries",
      "are",
      "in",
      "the",
      "top",
      "eight",
      "for",
      "invoice",
      "totals",
      "according",
      "to",
      "the",
      "billing",
      "information",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(total) AS total_revenue FROM invoices GROUP BY billing_country ORDER BY total_revenue DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "total",
      ")",
      "AS",
      "total_revenue",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_revenue",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "total",
      ")",
      "as",
      "total_revenue",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_revenue",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries generate the highest revenue according to invoice totals, in the top 8?",
    "question_toks": [
      "Which",
      "countries",
      "generate",
      "the",
      "highest",
      "revenue",
      "according",
      "to",
      "invoice",
      "totals",
      ",",
      "in",
      "the",
      "top",
      "8",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(total) AS total_revenue FROM invoices GROUP BY billing_country ORDER BY total_revenue DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "total",
      ")",
      "AS",
      "total_revenue",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_revenue",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "total",
      ")",
      "as",
      "total_revenue",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_revenue",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide a list of the top eight countries ranked by total revenue from invoices?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "list",
      "of",
      "the",
      "top",
      "eight",
      "countries",
      "ranked",
      "by",
      "total",
      "revenue",
      "from",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(total) AS total_revenue FROM invoices GROUP BY billing_country ORDER BY total_revenue DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "total",
      ")",
      "AS",
      "total_revenue",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_revenue",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "total",
      ")",
      "as",
      "total_revenue",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_revenue",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the eight countries that contribute the most to total revenue based on invoice data?",
    "question_toks": [
      "What",
      "are",
      "the",
      "eight",
      "countries",
      "that",
      "contribute",
      "the",
      "most",
      "to",
      "total",
      "revenue",
      "based",
      "on",
      "invoice",
      "data",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(customer_id) FROM invoices GROUP BY billing_country ORDER BY COUNT(customer_id) DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "count",
      "(",
      "customer_id",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries have the highest number of customers based on invoice data?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "the",
      "highest",
      "number",
      "of",
      "customers",
      "based",
      "on",
      "invoice",
      "data",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(customer_id) FROM invoices GROUP BY billing_country ORDER BY COUNT(customer_id) DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "count",
      "(",
      "customer_id",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you show me the top 10 countries sorted by the number of customers from invoices?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "top",
      "10",
      "countries",
      "sorted",
      "by",
      "the",
      "number",
      "of",
      "customers",
      "from",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(customer_id) FROM invoices GROUP BY billing_country ORDER BY COUNT(customer_id) DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "count",
      "(",
      "customer_id",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the leading countries in terms of customer count from invoices?",
    "question_toks": [
      "What",
      "are",
      "the",
      "leading",
      "countries",
      "in",
      "terms",
      "of",
      "customer",
      "count",
      "from",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "total",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "SUM",
      "(",
      "total",
      ")",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "total",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "sum",
      "(",
      "total",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries generate the most revenue according to the invoice totals?",
    "question_toks": [
      "Which",
      "countries",
      "generate",
      "the",
      "most",
      "revenue",
      "according",
      "to",
      "the",
      "invoice",
      "totals",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "total",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "SUM",
      "(",
      "total",
      ")",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "total",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "sum",
      "(",
      "total",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide a list of the top 10 countries ranked by total invoice amounts?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "list",
      "of",
      "the",
      "top",
      "10",
      "countries",
      "ranked",
      "by",
      "total",
      "invoice",
      "amounts",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "total",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "SUM",
      "(",
      "total",
      ")",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "total",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "sum",
      "(",
      "total",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the countries with the highest total sales from invoices?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "with",
      "the",
      "highest",
      "total",
      "sales",
      "from",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(DISTINCT customer_id) FROM invoices GROUP BY billing_country ORDER BY COUNT(DISTINCT customer_id) DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries have the most unique customers based on invoice records?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "the",
      "most",
      "unique",
      "customers",
      "based",
      "on",
      "invoice",
      "records",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(DISTINCT customer_id) FROM invoices GROUP BY billing_country ORDER BY COUNT(DISTINCT customer_id) DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you list the top 10 countries with the highest number of distinct customers from invoices?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "top",
      "10",
      "countries",
      "with",
      "the",
      "highest",
      "number",
      "of",
      "distinct",
      "customers",
      "from",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(DISTINCT customer_id) FROM invoices GROUP BY billing_country ORDER BY COUNT(DISTINCT customer_id) DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the countries with the greatest diversity of customers according to invoice data?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "with",
      "the",
      "greatest",
      "diversity",
      "of",
      "customers",
      "according",
      "to",
      "invoice",
      "data",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(customer_id) AS total_customers FROM invoices GROUP BY billing_country ORDER BY total_customers DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "AS",
      "total_customers",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_customers",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "customer_id",
      ")",
      "as",
      "total_customers",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_customers",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries have the highest number of customers based on invoice data?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "the",
      "highest",
      "number",
      "of",
      "customers",
      "based",
      "on",
      "invoice",
      "data",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(customer_id) AS total_customers FROM invoices GROUP BY billing_country ORDER BY total_customers DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "AS",
      "total_customers",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_customers",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "customer_id",
      ")",
      "as",
      "total_customers",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_customers",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide a count of customers grouped by billing country, sorted in descending order?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "count",
      "of",
      "customers",
      "grouped",
      "by",
      "billing",
      "country",
      ",",
      "sorted",
      "in",
      "descending",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(customer_id) AS total_customers FROM invoices GROUP BY billing_country ORDER BY total_customers DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "AS",
      "total_customers",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_customers",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "customer_id",
      ")",
      "as",
      "total_customers",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_customers",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the top 10 countries with the most customers according to the invoices?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "10",
      "countries",
      "with",
      "the",
      "most",
      "customers",
      "according",
      "to",
      "the",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(invoice_id) AS total_invoices FROM invoices GROUP BY billing_country ORDER BY total_invoices DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "invoice_id",
      ")",
      "AS",
      "total_invoices",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_invoices",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "invoice_id",
      ")",
      "as",
      "total_invoices",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_invoices",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the countries with the highest total of invoices?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "with",
      "the",
      "highest",
      "total",
      "of",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(invoice_id) AS total_invoices FROM invoices GROUP BY billing_country ORDER BY total_invoices DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "invoice_id",
      ")",
      "AS",
      "total_invoices",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_invoices",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "invoice_id",
      ")",
      "as",
      "total_invoices",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_invoices",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you list the top 10 countries by the total number of invoices issued?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "top",
      "10",
      "countries",
      "by",
      "the",
      "total",
      "number",
      "of",
      "invoices",
      "issued",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(invoice_id) AS total_invoices FROM invoices GROUP BY billing_country ORDER BY total_invoices DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "invoice_id",
      ")",
      "AS",
      "total_invoices",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_invoices",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "invoice_id",
      ")",
      "as",
      "total_invoices",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_invoices",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which billing countries have the largest sum of invoice IDs?",
    "question_toks": [
      "Which",
      "billing",
      "countries",
      "have",
      "the",
      "largest",
      "sum",
      "of",
      "invoice",
      "IDs",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, AVG(billing_postal_code) AS average_postal_code FROM invoices GROUP BY billing_country ORDER BY average_postal_code DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "AVG",
      "(",
      "billing_postal_code",
      ")",
      "AS",
      "average_postal_code",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "average_postal_code",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "avg",
      "(",
      "billing_postal_code",
      ")",
      "as",
      "average_postal_code",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "average_postal_code",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries have the highest average postal codes based on billing information?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "the",
      "highest",
      "average",
      "postal",
      "codes",
      "based",
      "on",
      "billing",
      "information",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, AVG(billing_postal_code) AS average_postal_code FROM invoices GROUP BY billing_country ORDER BY average_postal_code DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "AVG",
      "(",
      "billing_postal_code",
      ")",
      "AS",
      "average_postal_code",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "average_postal_code",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "avg",
      "(",
      "billing_postal_code",
      ")",
      "as",
      "average_postal_code",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "average_postal_code",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide the average postal code grouped by country from the invoices?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "postal",
      "code",
      "grouped",
      "by",
      "country",
      "from",
      "the",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, AVG(billing_postal_code) AS average_postal_code FROM invoices GROUP BY billing_country ORDER BY average_postal_code DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "AVG",
      "(",
      "billing_postal_code",
      ")",
      "AS",
      "average_postal_code",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "average_postal_code",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "avg",
      "(",
      "billing_postal_code",
      ")",
      "as",
      "average_postal_code",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "average_postal_code",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the top 10 billing countries with the highest average postal codes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "10",
      "billing",
      "countries",
      "with",
      "the",
      "highest",
      "average",
      "postal",
      "codes",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'B%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "B",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "b",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Can you list the album titles that start with the letter 'B'?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "album",
      "titles",
      "that",
      "start",
      "with",
      "the",
      "letter",
      "'",
      "B",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'B%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "B",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "b",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "What are the titles of albums that begin with 'B'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "albums",
      "that",
      "begin",
      "with",
      "'",
      "B",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'B%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "B",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "b",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Show me all album titles that start with the letter 'B', sorted alphabetically.",
    "question_toks": [
      "Show",
      "me",
      "all",
      "album",
      "titles",
      "that",
      "start",
      "with",
      "the",
      "letter",
      "'",
      "B",
      "'",
      ",",
      "sorted",
      "alphabetically",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'F%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "F",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "f",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "What are the album titles that start with the letter 'F'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "album",
      "titles",
      "that",
      "start",
      "with",
      "the",
      "letter",
      "'",
      "F",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'F%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "F",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "f",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Can you provide a list of album titles beginning with 'F'?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "list",
      "of",
      "album",
      "titles",
      "beginning",
      "with",
      "'",
      "F",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'F%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "F",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "f",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "List all albums whose titles start with 'F', sorted in order.",
    "question_toks": [
      "List",
      "all",
      "albums",
      "whose",
      "titles",
      "start",
      "with",
      "'",
      "F",
      "'",
      ",",
      "sorted",
      "in",
      "order",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'L%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "L",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "l",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "What titles of albums begin with the letter 'L'?",
    "question_toks": [
      "What",
      "titles",
      "of",
      "albums",
      "begin",
      "with",
      "the",
      "letter",
      "'",
      "L",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'L%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "L",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "l",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Please provide a list of album titles starting with 'L'.",
    "question_toks": [
      "Please",
      "provide",
      "a",
      "list",
      "of",
      "album",
      "titles",
      "starting",
      "with",
      "'",
      "L",
      "'",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'L%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "L",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "l",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Can you show me all the albums whose titles start with 'L', sorted alphabetically?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "all",
      "the",
      "albums",
      "whose",
      "titles",
      "start",
      "with",
      "'",
      "L",
      "'",
      ",",
      "sorted",
      "alphabetically",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'B%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "B",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "b",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Which album titles start with the letter B?",
    "question_toks": [
      "Which",
      "album",
      "titles",
      "start",
      "with",
      "the",
      "letter",
      "B",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'B%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "B",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "b",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Can you list the album titles that begin with B?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "album",
      "titles",
      "that",
      "begin",
      "with",
      "B",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'B%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "B",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "b",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Show me the titles of albums that start with the letter B, sorted alphabetically.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "titles",
      "of",
      "albums",
      "that",
      "start",
      "with",
      "the",
      "letter",
      "B",
      ",",
      "sorted",
      "alphabetically",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'F%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "F",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "f",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "What are the album titles that begin with the letter F?",
    "question_toks": [
      "What",
      "are",
      "the",
      "album",
      "titles",
      "that",
      "begin",
      "with",
      "the",
      "letter",
      "F",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'F%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "F",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "f",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "List all the albums whose titles start with F.",
    "question_toks": [
      "List",
      "all",
      "the",
      "albums",
      "whose",
      "titles",
      "start",
      "with",
      "F",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'F%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "F",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "f",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Can you provide the titles of albums that start with the letter F, in alphabetical order?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "titles",
      "of",
      "albums",
      "that",
      "start",
      "with",
      "the",
      "letter",
      "F",
      ",",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'A%' OR title LIKE 'B%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "A",
      "%",
      "'",
      "OR",
      "title",
      "LIKE",
      "'",
      "B",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "a",
      "%",
      "'",
      "or",
      "title",
      "like",
      "'",
      "b",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Can you find album titles that start with either A or B?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "album",
      "titles",
      "that",
      "start",
      "with",
      "either",
      "A",
      "or",
      "B",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'A%' OR title LIKE 'B%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "A",
      "%",
      "'",
      "OR",
      "title",
      "LIKE",
      "'",
      "B",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "a",
      "%",
      "'",
      "or",
      "title",
      "like",
      "'",
      "b",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "List the titles of albums that begin with A or B, sorted alphabetically.",
    "question_toks": [
      "List",
      "the",
      "titles",
      "of",
      "albums",
      "that",
      "begin",
      "with",
      "A",
      "or",
      "B",
      ",",
      "sorted",
      "alphabetically",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'A%' OR title LIKE 'B%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "A",
      "%",
      "'",
      "OR",
      "title",
      "LIKE",
      "'",
      "B",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "a",
      "%",
      "'",
      "or",
      "title",
      "like",
      "'",
      "b",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Which album titles start with the letters A or B?",
    "question_toks": [
      "Which",
      "album",
      "titles",
      "start",
      "with",
      "the",
      "letters",
      "A",
      "or",
      "B",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(total) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "total",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "total",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "What is the total amount from invoices where the billing city is Stuttgart and the state is MA?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "amount",
      "from",
      "invoices",
      "where",
      "the",
      "billing",
      "city",
      "is",
      "Stuttgart",
      "and",
      "the",
      "state",
      "is",
      "MA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(total) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "total",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "total",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "Can you provide the sum of totals from invoices for Stuttgart in the state of MA?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "sum",
      "of",
      "totals",
      "from",
      "invoices",
      "for",
      "Stuttgart",
      "in",
      "the",
      "state",
      "of",
      "MA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(total) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "total",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "total",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "How much do the invoices total for Stuttgart in the state of MA?",
    "question_toks": [
      "How",
      "much",
      "do",
      "the",
      "invoices",
      "total",
      "for",
      "Stuttgart",
      "in",
      "the",
      "state",
      "of",
      "MA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(total) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "total",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "total",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "What is the total from invoices where the billing city is Oslo and the state is SP?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "from",
      "invoices",
      "where",
      "the",
      "billing",
      "city",
      "is",
      "Oslo",
      "and",
      "the",
      "state",
      "is",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(total) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "total",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "total",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "Can you tell me the sum of totals from invoices for Oslo in the state of SP?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "sum",
      "of",
      "totals",
      "from",
      "invoices",
      "for",
      "Oslo",
      "in",
      "the",
      "state",
      "of",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(total) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "total",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "total",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "How much do the invoices amount to for Oslo in the state of SP?",
    "question_toks": [
      "How",
      "much",
      "do",
      "the",
      "invoices",
      "amount",
      "to",
      "for",
      "Oslo",
      "in",
      "the",
      "state",
      "of",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(total) FROM invoices WHERE billing_city = 'Edmonton' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "total",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Edmonton",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "total",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "edmonton",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "What is the total amount for invoices where the billing city is Edmonton and the state is AB?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "amount",
      "for",
      "invoices",
      "where",
      "the",
      "billing",
      "city",
      "is",
      "Edmonton",
      "and",
      "the",
      "state",
      "is",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(total) FROM invoices WHERE billing_city = 'Edmonton' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "total",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Edmonton",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "total",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "edmonton",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "Can you provide the sum of totals from invoices for Edmonton in the state of AB?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "sum",
      "of",
      "totals",
      "from",
      "invoices",
      "for",
      "Edmonton",
      "in",
      "the",
      "state",
      "of",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(total) FROM invoices WHERE billing_city = 'Edmonton' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "total",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Edmonton",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "total",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "edmonton",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "How much do the invoices total for Edmonton in the province of AB?",
    "question_toks": [
      "How",
      "much",
      "do",
      "the",
      "invoices",
      "total",
      "for",
      "Edmonton",
      "in",
      "the",
      "province",
      "of",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(invoice_lines.quantity) FROM invoices JOIN invoice_lines ON invoices.customer_id = invoice_lines.invoice_id WHERE invoices.billing_city = 'Stuttgart' AND invoices.billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "invoice_lines",
      ".",
      "quantity",
      ")",
      "FROM",
      "invoices",
      "JOIN",
      "invoice_lines",
      "ON",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "WHERE",
      "invoices",
      ".",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "invoices",
      ".",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "invoice_lines",
      ".",
      "quantity",
      ")",
      "from",
      "invoices",
      "join",
      "invoice_lines",
      "on",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "where",
      "invoices",
      ".",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "invoices",
      ".",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "What is the total quantity from invoice lines for invoices billed in Stuttgart, Massachusetts?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "quantity",
      "from",
      "invoice",
      "lines",
      "for",
      "invoices",
      "billed",
      "in",
      "Stuttgart",
      ",",
      "Massachusetts",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(invoice_lines.quantity) FROM invoices JOIN invoice_lines ON invoices.customer_id = invoice_lines.invoice_id WHERE invoices.billing_city = 'Stuttgart' AND invoices.billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "invoice_lines",
      ".",
      "quantity",
      ")",
      "FROM",
      "invoices",
      "JOIN",
      "invoice_lines",
      "ON",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "WHERE",
      "invoices",
      ".",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "invoices",
      ".",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "invoice_lines",
      ".",
      "quantity",
      ")",
      "from",
      "invoices",
      "join",
      "invoice_lines",
      "on",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "where",
      "invoices",
      ".",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "invoices",
      ".",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "Can you provide the sum of quantities from the invoice lines where the billing city is Stuttgart and the billing state is MA?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "sum",
      "of",
      "quantities",
      "from",
      "the",
      "invoice",
      "lines",
      "where",
      "the",
      "billing",
      "city",
      "is",
      "Stuttgart",
      "and",
      "the",
      "billing",
      "state",
      "is",
      "MA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(invoice_lines.quantity) FROM invoices JOIN invoice_lines ON invoices.customer_id = invoice_lines.invoice_id WHERE invoices.billing_city = 'Stuttgart' AND invoices.billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "invoice_lines",
      ".",
      "quantity",
      ")",
      "FROM",
      "invoices",
      "JOIN",
      "invoice_lines",
      "ON",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "WHERE",
      "invoices",
      ".",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "invoices",
      ".",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "invoice_lines",
      ".",
      "quantity",
      ")",
      "from",
      "invoices",
      "join",
      "invoice_lines",
      "on",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "where",
      "invoices",
      ".",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "invoices",
      ".",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "How much total quantity is recorded in invoice lines for invoices that have Stuttgart as the billing city and MA as the billing state?",
    "question_toks": [
      "How",
      "much",
      "total",
      "quantity",
      "is",
      "recorded",
      "in",
      "invoice",
      "lines",
      "for",
      "invoices",
      "that",
      "have",
      "Stuttgart",
      "as",
      "the",
      "billing",
      "city",
      "and",
      "MA",
      "as",
      "the",
      "billing",
      "state",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "How many invoices are there for the city of Oslo in the state of SP?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "for",
      "the",
      "city",
      "of",
      "Oslo",
      "in",
      "the",
      "state",
      "of",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "Can you tell me the number of invoices that have Oslo as the billing city and SP as the state?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "number",
      "of",
      "invoices",
      "that",
      "have",
      "Oslo",
      "as",
      "the",
      "billing",
      "city",
      "and",
      "SP",
      "as",
      "the",
      "state",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "What is the count of invoices issued for the billing city of Oslo and state SP?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "invoices",
      "issued",
      "for",
      "the",
      "billing",
      "city",
      "of",
      "Oslo",
      "and",
      "state",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT AVG(invoice_lines.quantity) FROM invoices JOIN invoice_lines ON invoices.customer_id = invoice_lines.invoice_id WHERE invoices.billing_country = 'Germany'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "invoice_lines",
      ".",
      "quantity",
      ")",
      "FROM",
      "invoices",
      "JOIN",
      "invoice_lines",
      "ON",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "WHERE",
      "invoices",
      ".",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "invoice_lines",
      ".",
      "quantity",
      ")",
      "from",
      "invoices",
      "join",
      "invoice_lines",
      "on",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "where",
      "invoices",
      ".",
      "billing_country",
      "=",
      "'",
      "germany",
      "'"
    ],
    "question": "What is the average quantity from invoice lines for invoices billed in Germany?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "quantity",
      "from",
      "invoice",
      "lines",
      "for",
      "invoices",
      "billed",
      "in",
      "Germany",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT AVG(invoice_lines.quantity) FROM invoices JOIN invoice_lines ON invoices.customer_id = invoice_lines.invoice_id WHERE invoices.billing_country = 'Germany'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "invoice_lines",
      ".",
      "quantity",
      ")",
      "FROM",
      "invoices",
      "JOIN",
      "invoice_lines",
      "ON",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "WHERE",
      "invoices",
      ".",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "invoice_lines",
      ".",
      "quantity",
      ")",
      "from",
      "invoices",
      "join",
      "invoice_lines",
      "on",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "where",
      "invoices",
      ".",
      "billing_country",
      "=",
      "'",
      "germany",
      "'"
    ],
    "question": "Can you provide the average quantity of items from invoice lines for invoices with a billing country of Germany?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "quantity",
      "of",
      "items",
      "from",
      "invoice",
      "lines",
      "for",
      "invoices",
      "with",
      "a",
      "billing",
      "country",
      "of",
      "Germany",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT AVG(invoice_lines.quantity) FROM invoices JOIN invoice_lines ON invoices.customer_id = invoice_lines.invoice_id WHERE invoices.billing_country = 'Germany'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "invoice_lines",
      ".",
      "quantity",
      ")",
      "FROM",
      "invoices",
      "JOIN",
      "invoice_lines",
      "ON",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "WHERE",
      "invoices",
      ".",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "invoice_lines",
      ".",
      "quantity",
      ")",
      "from",
      "invoices",
      "join",
      "invoice_lines",
      "on",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "where",
      "invoices",
      ".",
      "billing_country",
      "=",
      "'",
      "germany",
      "'"
    ],
    "question": "How much is the average quantity recorded in invoice lines for invoices that are billed in Germany?",
    "question_toks": [
      "How",
      "much",
      "is",
      "the",
      "average",
      "quantity",
      "recorded",
      "in",
      "invoice",
      "lines",
      "for",
      "invoices",
      "that",
      "are",
      "billed",
      "in",
      "Germany",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Edmonton' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Edmonton",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "edmonton",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "How many invoices are there for the city of Edmonton in the province of AB?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "for",
      "the",
      "city",
      "of",
      "Edmonton",
      "in",
      "the",
      "province",
      "of",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Edmonton' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Edmonton",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "edmonton",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "Can you tell me the count of invoices issued in Edmonton, AB?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "count",
      "of",
      "invoices",
      "issued",
      "in",
      "Edmonton",
      ",",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Edmonton' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Edmonton",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "edmonton",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "What is the number of invoices that have Edmonton as the billing city and AB as the billing state?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "invoices",
      "that",
      "have",
      "Edmonton",
      "as",
      "the",
      "billing",
      "city",
      "and",
      "AB",
      "as",
      "the",
      "billing",
      "state",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "What is the total number of invoices for Stuttgart in the state of SP?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "invoices",
      "for",
      "Stuttgart",
      "in",
      "the",
      "state",
      "of",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "How many invoices have been recorded for Stuttgart, SP?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "have",
      "been",
      "recorded",
      "for",
      "Stuttgart",
      ",",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "Can you provide the count of invoices that list Stuttgart as the billing city and SP as the billing state?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "count",
      "of",
      "invoices",
      "that",
      "list",
      "Stuttgart",
      "as",
      "the",
      "billing",
      "city",
      "and",
      "SP",
      "as",
      "the",
      "billing",
      "state",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "How many invoices are there for Oslo in the state of SP?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "for",
      "Oslo",
      "in",
      "the",
      "state",
      "of",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "Can you tell me the total count of invoices for the city of Oslo in SP?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "total",
      "count",
      "of",
      "invoices",
      "for",
      "the",
      "city",
      "of",
      "Oslo",
      "in",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "What is the number of invoices issued for Oslo with billing state SP?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "invoices",
      "issued",
      "for",
      "Oslo",
      "with",
      "billing",
      "state",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "How many invoices are there for the city Stuttgart in the state AB?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "for",
      "the",
      "city",
      "Stuttgart",
      "in",
      "the",
      "state",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "What is the total count of invoices issued in Stuttgart, Alberta?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "count",
      "of",
      "invoices",
      "issued",
      "in",
      "Stuttgart",
      ",",
      "Alberta",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "Can you tell me the number of invoices for Stuttgart in the province of AB?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "number",
      "of",
      "invoices",
      "for",
      "Stuttgart",
      "in",
      "the",
      "province",
      "of",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "What is the invoice count for the city of Oslo in the state SP?",
    "question_toks": [
      "What",
      "is",
      "the",
      "invoice",
      "count",
      "for",
      "the",
      "city",
      "of",
      "Oslo",
      "in",
      "the",
      "state",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "How many invoices were generated for Oslo in the SP region?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "were",
      "generated",
      "for",
      "Oslo",
      "in",
      "the",
      "SP",
      "region",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "Can you provide the total number of invoices for Oslo, SP?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "total",
      "number",
      "of",
      "invoices",
      "for",
      "Oslo",
      ",",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Edmonton' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Edmonton",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "edmonton",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "How many invoices exist for Edmonton in the state of AB?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "exist",
      "for",
      "Edmonton",
      "in",
      "the",
      "state",
      "of",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Edmonton' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Edmonton",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "edmonton",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "What is the total number of invoices for the city of Edmonton in Alberta?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "invoices",
      "for",
      "the",
      "city",
      "of",
      "Edmonton",
      "in",
      "Alberta",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Edmonton' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Edmonton",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "edmonton",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "Can you tell me how many invoices were issued in Edmonton, AB?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "how",
      "many",
      "invoices",
      "were",
      "issued",
      "in",
      "Edmonton",
      ",",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state"
    ],
    "question": "How many invoices are there for each billing state in Canada?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "for",
      "each",
      "billing",
      "state",
      "in",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state"
    ],
    "question": "Can you count the number of invoices grouped by state for customers in Canada?",
    "question_toks": [
      "Can",
      "you",
      "count",
      "the",
      "number",
      "of",
      "invoices",
      "grouped",
      "by",
      "state",
      "for",
      "customers",
      "in",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state"
    ],
    "question": "What is the count of invoices categorized by billing state for the country Canada?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "invoices",
      "categorized",
      "by",
      "billing",
      "state",
      "for",
      "the",
      "country",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city"
    ],
    "question": "How many invoices are there for each billing city in Germany?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "for",
      "each",
      "billing",
      "city",
      "in",
      "Germany",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city"
    ],
    "question": "Can you count the number of invoices grouped by city for customers in Germany?",
    "question_toks": [
      "Can",
      "you",
      "count",
      "the",
      "number",
      "of",
      "invoices",
      "grouped",
      "by",
      "city",
      "for",
      "customers",
      "in",
      "Germany",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city"
    ],
    "question": "What is the count of invoices categorized by billing city for the country Germany?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "invoices",
      "categorized",
      "by",
      "billing",
      "city",
      "for",
      "the",
      "country",
      "Germany",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_postal_code, COUNT(*) FROM invoices WHERE billing_country = 'Norway' GROUP BY billing_postal_code",
    "query_toks": [
      "SELECT",
      "billing_postal_code",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Norway",
      "'",
      "GROUP",
      "BY",
      "billing_postal_code"
    ],
    "query_toks_no_value": [
      "select",
      "billing_postal_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "norway",
      "'",
      "group",
      "by",
      "billing_postal_code"
    ],
    "question": "How many invoices are there for each billing postal code in Norway?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "for",
      "each",
      "billing",
      "postal",
      "code",
      "in",
      "Norway",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_postal_code, COUNT(*) FROM invoices WHERE billing_country = 'Norway' GROUP BY billing_postal_code",
    "query_toks": [
      "SELECT",
      "billing_postal_code",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Norway",
      "'",
      "GROUP",
      "BY",
      "billing_postal_code"
    ],
    "query_toks_no_value": [
      "select",
      "billing_postal_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "norway",
      "'",
      "group",
      "by",
      "billing_postal_code"
    ],
    "question": "Can you count the number of invoices grouped by postal code for customers in Norway?",
    "question_toks": [
      "Can",
      "you",
      "count",
      "the",
      "number",
      "of",
      "invoices",
      "grouped",
      "by",
      "postal",
      "code",
      "for",
      "customers",
      "in",
      "Norway",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_postal_code, COUNT(*) FROM invoices WHERE billing_country = 'Norway' GROUP BY billing_postal_code",
    "query_toks": [
      "SELECT",
      "billing_postal_code",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Norway",
      "'",
      "GROUP",
      "BY",
      "billing_postal_code"
    ],
    "query_toks_no_value": [
      "select",
      "billing_postal_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "norway",
      "'",
      "group",
      "by",
      "billing_postal_code"
    ],
    "question": "What is the count of invoices categorized by billing postal code for the country Norway?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "invoices",
      "categorized",
      "by",
      "billing",
      "postal",
      "code",
      "for",
      "the",
      "country",
      "Norway",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state"
    ],
    "question": "What is the count of invoices grouped by billing state for customers in Canada?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "invoices",
      "grouped",
      "by",
      "billing",
      "state",
      "for",
      "customers",
      "in",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state"
    ],
    "question": "Can you provide the number of invoices categorized by billing state for the Canadian customers?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "number",
      "of",
      "invoices",
      "categorized",
      "by",
      "billing",
      "state",
      "for",
      "the",
      "Canadian",
      "customers",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state"
    ],
    "question": "How many invoices are there for each billing state when the billing country is Canada?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "for",
      "each",
      "billing",
      "state",
      "when",
      "the",
      "billing",
      "country",
      "is",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city"
    ],
    "question": "How many invoices are there per billing city for customers located in Germany?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "per",
      "billing",
      "city",
      "for",
      "customers",
      "located",
      "in",
      "Germany",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city"
    ],
    "question": "Can you tell me the count of invoices grouped by billing city for those in Germany?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "count",
      "of",
      "invoices",
      "grouped",
      "by",
      "billing",
      "city",
      "for",
      "those",
      "in",
      "Germany",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city"
    ],
    "question": "What is the total number of invoices for each billing city in Germany?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "invoices",
      "for",
      "each",
      "billing",
      "city",
      "in",
      "Germany",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) FROM invoices GROUP BY billing_country",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country"
    ],
    "question": "What is the number of invoices grouped by billing country?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "invoices",
      "grouped",
      "by",
      "billing",
      "country",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) FROM invoices GROUP BY billing_country",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country"
    ],
    "question": "Can you provide the total count of invoices for each billing country?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "total",
      "count",
      "of",
      "invoices",
      "for",
      "each",
      "billing",
      "country",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) FROM invoices GROUP BY billing_country",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country"
    ],
    "question": "How many invoices exist for each country in the billing records?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "exist",
      "for",
      "each",
      "country",
      "in",
      "the",
      "billing",
      "records",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_city ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_city",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which city in Canada has the highest number of invoices?",
    "question_toks": [
      "Which",
      "city",
      "in",
      "Canada",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_city ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_city",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the Canadian city with the most invoice records?",
    "question_toks": [
      "What",
      "is",
      "the",
      "Canadian",
      "city",
      "with",
      "the",
      "most",
      "invoice",
      "records",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_city ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_city",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Identify the city in Canada that has the greatest count of invoices.",
    "question_toks": [
      "Identify",
      "the",
      "city",
      "in",
      "Canada",
      "that",
      "has",
      "the",
      "greatest",
      "count",
      "of",
      "invoices",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which state in Germany has the most invoices?",
    "question_toks": [
      "Which",
      "state",
      "in",
      "Germany",
      "has",
      "the",
      "most",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the German state with the highest invoice count?",
    "question_toks": [
      "What",
      "is",
      "the",
      "German",
      "state",
      "with",
      "the",
      "highest",
      "invoice",
      "count",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the state in Germany that has recorded the largest number of invoices.",
    "question_toks": [
      "Find",
      "the",
      "state",
      "in",
      "Germany",
      "that",
      "has",
      "recorded",
      "the",
      "largest",
      "number",
      "of",
      "invoices",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT customer_id, COUNT(*) FROM invoices WHERE billing_country = 'Norway' GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Norway",
      "'",
      "GROUP",
      "BY",
      "customer_id",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "norway",
      "'",
      "group",
      "by",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which customer in Norway has the highest number of invoices?",
    "question_toks": [
      "Which",
      "customer",
      "in",
      "Norway",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT customer_id, COUNT(*) FROM invoices WHERE billing_country = 'Norway' GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Norway",
      "'",
      "GROUP",
      "BY",
      "customer_id",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "norway",
      "'",
      "group",
      "by",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Identify the customer in Norway with the most invoice records.",
    "question_toks": [
      "Identify",
      "the",
      "customer",
      "in",
      "Norway",
      "with",
      "the",
      "most",
      "invoice",
      "records",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT customer_id, COUNT(*) FROM invoices WHERE billing_country = 'Norway' GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Norway",
      "'",
      "GROUP",
      "BY",
      "customer_id",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "norway",
      "'",
      "group",
      "by",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the customer ID for the individual in Norway who has the greatest count of invoices?",
    "question_toks": [
      "What",
      "is",
      "the",
      "customer",
      "ID",
      "for",
      "the",
      "individual",
      "in",
      "Norway",
      "who",
      "has",
      "the",
      "greatest",
      "count",
      "of",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which billing state in Canada has the highest number of invoices?",
    "question_toks": [
      "Which",
      "billing",
      "state",
      "in",
      "Canada",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the billing state with the most invoices from Canada?",
    "question_toks": [
      "What",
      "is",
      "the",
      "billing",
      "state",
      "with",
      "the",
      "most",
      "invoices",
      "from",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the Canadian billing state that has the most invoices?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "Canadian",
      "billing",
      "state",
      "that",
      "has",
      "the",
      "most",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which city in Germany has the most invoices?",
    "question_toks": [
      "Which",
      "city",
      "in",
      "Germany",
      "has",
      "the",
      "most",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the city in Germany with the highest invoice count?",
    "question_toks": [
      "What",
      "is",
      "the",
      "city",
      "in",
      "Germany",
      "with",
      "the",
      "highest",
      "invoice",
      "count",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you identify the German city that has the greatest number of invoices?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "German",
      "city",
      "that",
      "has",
      "the",
      "greatest",
      "number",
      "of",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT customer_id, COUNT(*) FROM invoices WHERE billing_state = 'MA' GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "MA",
      "'",
      "GROUP",
      "BY",
      "customer_id",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ma",
      "'",
      "group",
      "by",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which customer has the most invoices in the state of Massachusetts?",
    "question_toks": [
      "Which",
      "customer",
      "has",
      "the",
      "most",
      "invoices",
      "in",
      "the",
      "state",
      "of",
      "Massachusetts",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT customer_id, COUNT(*) FROM invoices WHERE billing_state = 'MA' GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "MA",
      "'",
      "GROUP",
      "BY",
      "customer_id",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ma",
      "'",
      "group",
      "by",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the customer ID with the highest invoice count in MA?",
    "question_toks": [
      "What",
      "is",
      "the",
      "customer",
      "ID",
      "with",
      "the",
      "highest",
      "invoice",
      "count",
      "in",
      "MA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT customer_id, COUNT(*) FROM invoices WHERE billing_state = 'MA' GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "MA",
      "'",
      "GROUP",
      "BY",
      "customer_id",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ma",
      "'",
      "group",
      "by",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you find out which customer in Massachusetts has the most invoices?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "out",
      "which",
      "customer",
      "in",
      "Massachusetts",
      "has",
      "the",
      "most",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "What is the count of invoices and the sum of customer IDs for each billing city in California?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "invoices",
      "and",
      "the",
      "sum",
      "of",
      "customer",
      "IDs",
      "for",
      "each",
      "billing",
      "city",
      "in",
      "California",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "Can you tell me how many invoices there are and the total customer IDs by billing city in CA?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "how",
      "many",
      "invoices",
      "there",
      "are",
      "and",
      "the",
      "total",
      "customer",
      "IDs",
      "by",
      "billing",
      "city",
      "in",
      "CA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "How many invoices exist and what is the total of customer IDs for each city in California?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "exist",
      "and",
      "what",
      "is",
      "the",
      "total",
      "of",
      "customer",
      "IDs",
      "for",
      "each",
      "city",
      "in",
      "California",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "How many invoices are there and what is the total of customer IDs for each billing country in California?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "and",
      "what",
      "is",
      "the",
      "total",
      "of",
      "customer",
      "IDs",
      "for",
      "each",
      "billing",
      "country",
      "in",
      "California",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "What is the count of invoices and the sum of customer IDs grouped by billing country in CA?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "invoices",
      "and",
      "the",
      "sum",
      "of",
      "customer",
      "IDs",
      "grouped",
      "by",
      "billing",
      "country",
      "in",
      "CA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "Can you provide the number of invoices and the total customer IDs for each country in California?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "number",
      "of",
      "invoices",
      "and",
      "the",
      "total",
      "customer",
      "IDs",
      "for",
      "each",
      "country",
      "in",
      "California",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_postal_code, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_postal_code",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_postal_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "What is the total count of invoices and the sum of customer IDs for each billing postal code in California?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "count",
      "of",
      "invoices",
      "and",
      "the",
      "sum",
      "of",
      "customer",
      "IDs",
      "for",
      "each",
      "billing",
      "postal",
      "code",
      "in",
      "California",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_postal_code, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_postal_code",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_postal_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "Can you tell me how many invoices there are and the total of customer IDs for each postal code in CA?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "how",
      "many",
      "invoices",
      "there",
      "are",
      "and",
      "the",
      "total",
      "of",
      "customer",
      "IDs",
      "for",
      "each",
      "postal",
      "code",
      "in",
      "CA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_postal_code, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_postal_code",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_postal_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "How many invoices exist and what is the total of customer IDs for each postal code in California?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "exist",
      "and",
      "what",
      "is",
      "the",
      "total",
      "of",
      "customer",
      "IDs",
      "for",
      "each",
      "postal",
      "code",
      "in",
      "California",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Franti\u0161ek' AND last_name = 'Wichterlov\u00e1'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Franti\u0161ek",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Wichterlov\u00e1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "franti\u0161ek",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "wichterlov\u00e1",
      "'"
    ],
    "question": "What company does Franti\u0161ek Wichterlov\u00e1 work for?",
    "question_toks": [
      "What",
      "company",
      "does",
      "Franti\u0161ek",
      "Wichterlov\u00e1",
      "work",
      "for",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Franti\u0161ek' AND last_name = 'Wichterlov\u00e1'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Franti\u0161ek",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Wichterlov\u00e1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "franti\u0161ek",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "wichterlov\u00e1",
      "'"
    ],
    "question": "Can you tell me the company associated with Franti\u0161ek Wichterlov\u00e1?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "company",
      "associated",
      "with",
      "Franti\u0161ek",
      "Wichterlov\u00e1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Franti\u0161ek' AND last_name = 'Wichterlov\u00e1'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Franti\u0161ek",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Wichterlov\u00e1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "franti\u0161ek",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "wichterlov\u00e1",
      "'"
    ],
    "question": "Which company is linked to the individual named Franti\u0161ek Wichterlov\u00e1?",
    "question_toks": [
      "Which",
      "company",
      "is",
      "linked",
      "to",
      "the",
      "individual",
      "named",
      "Franti\u0161ek",
      "Wichterlov\u00e1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "What is the company name for Lu\u00eds Gon\u00e7alves?",
    "question_toks": [
      "What",
      "is",
      "the",
      "company",
      "name",
      "for",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Could you provide the company that Lu\u00eds Gon\u00e7alves is connected to?",
    "question_toks": [
      "Could",
      "you",
      "provide",
      "the",
      "company",
      "that",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "is",
      "connected",
      "to",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Which company does Lu\u00eds Gon\u00e7alves belong to?",
    "question_toks": [
      "Which",
      "company",
      "does",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "belong",
      "to",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "What company is Fran\u00e7ois Tremblay affiliated with?",
    "question_toks": [
      "What",
      "company",
      "is",
      "Fran\u00e7ois",
      "Tremblay",
      "affiliated",
      "with",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "Can you identify the company linked to Fran\u00e7ois Tremblay?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "company",
      "linked",
      "to",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "Which company does Fran\u00e7ois Tremblay represent?",
    "question_toks": [
      "Which",
      "company",
      "does",
      "Fran\u00e7ois",
      "Tremblay",
      "represent",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "What company is associated with Lu\u00eds Gon\u00e7alves?",
    "question_toks": [
      "What",
      "company",
      "is",
      "associated",
      "with",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Can you tell me the company name for the customer Lu\u00eds Gon\u00e7alves?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "company",
      "name",
      "for",
      "the",
      "customer",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Which company does Lu\u00eds Gon\u00e7alves belong to?",
    "question_toks": [
      "Which",
      "company",
      "does",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "belong",
      "to",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "What is the company name for Fran\u00e7ois Tremblay?",
    "question_toks": [
      "What",
      "is",
      "the",
      "company",
      "name",
      "for",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "Could you provide the company associated with Fran\u00e7ois Tremblay?",
    "question_toks": [
      "Could",
      "you",
      "provide",
      "the",
      "company",
      "associated",
      "with",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "Which company is linked to the customer Fran\u00e7ois Tremblay?",
    "question_toks": [
      "Which",
      "company",
      "is",
      "linked",
      "to",
      "the",
      "customer",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Franti\u0161ek' AND last_name = 'Wichterlov\u00e1'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Franti\u0161ek",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Wichterlov\u00e1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "franti\u0161ek",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "wichterlov\u00e1",
      "'"
    ],
    "question": "What company does Franti\u0161ek Wichterlov\u00e1 work for?",
    "question_toks": [
      "What",
      "company",
      "does",
      "Franti\u0161ek",
      "Wichterlov\u00e1",
      "work",
      "for",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Franti\u0161ek' AND last_name = 'Wichterlov\u00e1'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Franti\u0161ek",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Wichterlov\u00e1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "franti\u0161ek",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "wichterlov\u00e1",
      "'"
    ],
    "question": "Can you identify the company associated with Franti\u0161ek Wichterlov\u00e1?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "company",
      "associated",
      "with",
      "Franti\u0161ek",
      "Wichterlov\u00e1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Franti\u0161ek' AND last_name = 'Wichterlov\u00e1'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Franti\u0161ek",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Wichterlov\u00e1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "franti\u0161ek",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "wichterlov\u00e1",
      "'"
    ],
    "question": "Which company is Franti\u0161ek Wichterlov\u00e1 connected to?",
    "question_toks": [
      "Which",
      "company",
      "is",
      "Franti\u0161ek",
      "Wichterlov\u00e1",
      "connected",
      "to",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Can you show me the email and phone number of the customer named Lu\u00eds Gon\u00e7alves?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "email",
      "and",
      "phone",
      "number",
      "of",
      "the",
      "customer",
      "named",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "I would like to find the contact details for Lu\u00eds Gon\u00e7alves, specifically his email and phone.",
    "question_toks": [
      "I",
      "would",
      "like",
      "to",
      "find",
      "the",
      "contact",
      "details",
      "for",
      "Lu\u00eds",
      "Gon\u00e7alves",
      ",",
      "specifically",
      "his",
      "email",
      "and",
      "phone",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "What are the email and phone information for the customer with the name Lu\u00eds Gon\u00e7alves?",
    "question_toks": [
      "What",
      "are",
      "the",
      "email",
      "and",
      "phone",
      "information",
      "for",
      "the",
      "customer",
      "with",
      "the",
      "name",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "Could you provide the email and phone number for Fran\u00e7ois Tremblay?",
    "question_toks": [
      "Could",
      "you",
      "provide",
      "the",
      "email",
      "and",
      "phone",
      "number",
      "for",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "I'm looking for the contact details of Fran\u00e7ois Tremblay, particularly his email and phone.",
    "question_toks": [
      "I",
      "'",
      "m",
      "looking",
      "for",
      "the",
      "contact",
      "details",
      "of",
      "Fran\u00e7ois",
      "Tremblay",
      ",",
      "particularly",
      "his",
      "email",
      "and",
      "phone",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "What is the email and phone number associated with the customer named Fran\u00e7ois Tremblay?",
    "question_toks": [
      "What",
      "is",
      "the",
      "email",
      "and",
      "phone",
      "number",
      "associated",
      "with",
      "the",
      "customer",
      "named",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Bj\u00f8rn' AND last_name = 'Hansen'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Bj\u00f8rn",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hansen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "bj\u00f8rn",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hansen",
      "'"
    ],
    "question": "Can you tell me the email and phone number for the customer named Bj\u00f8rn Hansen?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "email",
      "and",
      "phone",
      "number",
      "for",
      "the",
      "customer",
      "named",
      "Bj\u00f8rn",
      "Hansen",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Bj\u00f8rn' AND last_name = 'Hansen'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Bj\u00f8rn",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hansen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "bj\u00f8rn",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hansen",
      "'"
    ],
    "question": "I need to find the contact details for Bj\u00f8rn Hansen, specifically his email and phone.",
    "question_toks": [
      "I",
      "need",
      "to",
      "find",
      "the",
      "contact",
      "details",
      "for",
      "Bj\u00f8rn",
      "Hansen",
      ",",
      "specifically",
      "his",
      "email",
      "and",
      "phone",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Bj\u00f8rn' AND last_name = 'Hansen'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Bj\u00f8rn",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hansen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "bj\u00f8rn",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hansen",
      "'"
    ],
    "question": "What are the email and phone details for the customer with the name Bj\u00f8rn Hansen?",
    "question_toks": [
      "What",
      "are",
      "the",
      "email",
      "and",
      "phone",
      "details",
      "for",
      "the",
      "customer",
      "with",
      "the",
      "name",
      "Bj\u00f8rn",
      "Hansen",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE state = 'SP'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "How many customers are located in the state of SP?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "are",
      "located",
      "in",
      "the",
      "state",
      "of",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE state = 'SP'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "Can you tell me the number of customers residing in SP?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "number",
      "of",
      "customers",
      "residing",
      "in",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE state = 'SP'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "What is the total count of customers in the state of SP?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "count",
      "of",
      "customers",
      "in",
      "the",
      "state",
      "of",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM employees WHERE state = 'AB'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employees",
      "WHERE",
      "state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employees",
      "where",
      "state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "How many employees work in the province of AB?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "work",
      "in",
      "the",
      "province",
      "of",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM employees WHERE state = 'AB'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employees",
      "WHERE",
      "state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employees",
      "where",
      "state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "What is the total number of employees located in AB?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "employees",
      "located",
      "in",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM employees WHERE state = 'AB'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employees",
      "WHERE",
      "state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employees",
      "where",
      "state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "Can you provide the count of employees based in AB?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "count",
      "of",
      "employees",
      "based",
      "in",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM invoices WHERE billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "How many invoices have been issued in the state of MA?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "have",
      "been",
      "issued",
      "in",
      "the",
      "state",
      "of",
      "MA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM invoices WHERE billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "Can you tell me the total count of invoices for the state MA?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "total",
      "count",
      "of",
      "invoices",
      "for",
      "the",
      "state",
      "MA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM invoices WHERE billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "What is the number of invoices that are associated with MA?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "invoices",
      "that",
      "are",
      "associated",
      "with",
      "MA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Franti\u0161ek' AND last_name = 'Wichterlov\u00e1'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Franti\u0161ek",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Wichterlov\u00e1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "franti\u0161ek",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "wichterlov\u00e1",
      "'"
    ],
    "question": "What country does the customer named Franti\u0161ek Wichterlov\u00e1 belong to?",
    "question_toks": [
      "What",
      "country",
      "does",
      "the",
      "customer",
      "named",
      "Franti\u0161ek",
      "Wichterlov\u00e1",
      "belong",
      "to",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Franti\u0161ek' AND last_name = 'Wichterlov\u00e1'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Franti\u0161ek",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Wichterlov\u00e1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "franti\u0161ek",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "wichterlov\u00e1",
      "'"
    ],
    "question": "Can you tell me the country for the customer with the first name Franti\u0161ek and last name Wichterlov\u00e1?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "country",
      "for",
      "the",
      "customer",
      "with",
      "the",
      "first",
      "name",
      "Franti\u0161ek",
      "and",
      "last",
      "name",
      "Wichterlov\u00e1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Franti\u0161ek' AND last_name = 'Wichterlov\u00e1'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Franti\u0161ek",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Wichterlov\u00e1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "franti\u0161ek",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "wichterlov\u00e1",
      "'"
    ],
    "question": "Which country is associated with the customer whose name is Franti\u0161ek Wichterlov\u00e1?",
    "question_toks": [
      "Which",
      "country",
      "is",
      "associated",
      "with",
      "the",
      "customer",
      "whose",
      "name",
      "is",
      "Franti\u0161ek",
      "Wichterlov\u00e1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Bj\u00f8rn' AND last_name = 'Hansen'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Bj\u00f8rn",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hansen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "bj\u00f8rn",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hansen",
      "'"
    ],
    "question": "What is the country of the customer named Bj\u00f8rn Hansen?",
    "question_toks": [
      "What",
      "is",
      "the",
      "country",
      "of",
      "the",
      "customer",
      "named",
      "Bj\u00f8rn",
      "Hansen",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Bj\u00f8rn' AND last_name = 'Hansen'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Bj\u00f8rn",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hansen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "bj\u00f8rn",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hansen",
      "'"
    ],
    "question": "Can you find out which country corresponds to the customer named Bj\u00f8rn Hansen?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "out",
      "which",
      "country",
      "corresponds",
      "to",
      "the",
      "customer",
      "named",
      "Bj\u00f8rn",
      "Hansen",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Bj\u00f8rn' AND last_name = 'Hansen'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Bj\u00f8rn",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hansen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "bj\u00f8rn",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hansen",
      "'"
    ],
    "question": "Which country is linked to the customer with the name Bj\u00f8rn Hansen?",
    "question_toks": [
      "Which",
      "country",
      "is",
      "linked",
      "to",
      "the",
      "customer",
      "with",
      "the",
      "name",
      "Bj\u00f8rn",
      "Hansen",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "What country does Lu\u00eds Gon\u00e7alves come from?",
    "question_toks": [
      "What",
      "country",
      "does",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "come",
      "from",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Can you identify the country of the customer named Lu\u00eds Gon\u00e7alves?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "country",
      "of",
      "the",
      "customer",
      "named",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Which country is associated with the customer named Lu\u00eds Gon\u00e7alves?",
    "question_toks": [
      "Which",
      "country",
      "is",
      "associated",
      "with",
      "the",
      "customer",
      "named",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Franti\u0161ek' AND last_name = 'Wichterlov\u00e1'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Franti\u0161ek",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Wichterlov\u00e1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "franti\u0161ek",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "wichterlov\u00e1",
      "'"
    ],
    "question": "What country does the customer named Franti\u0161ek Wichterlov\u00e1 belong to?",
    "question_toks": [
      "What",
      "country",
      "does",
      "the",
      "customer",
      "named",
      "Franti\u0161ek",
      "Wichterlov\u00e1",
      "belong",
      "to",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Franti\u0161ek' AND last_name = 'Wichterlov\u00e1'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Franti\u0161ek",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Wichterlov\u00e1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "franti\u0161ek",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "wichterlov\u00e1",
      "'"
    ],
    "question": "Can you tell me the country for the customer with the first name Franti\u0161ek and last name Wichterlov\u00e1?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "country",
      "for",
      "the",
      "customer",
      "with",
      "the",
      "first",
      "name",
      "Franti\u0161ek",
      "and",
      "last",
      "name",
      "Wichterlov\u00e1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Franti\u0161ek' AND last_name = 'Wichterlov\u00e1'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Franti\u0161ek",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Wichterlov\u00e1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "franti\u0161ek",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "wichterlov\u00e1",
      "'"
    ],
    "question": "Which country is associated with the customer whose name is Franti\u0161ek Wichterlov\u00e1?",
    "question_toks": [
      "Which",
      "country",
      "is",
      "associated",
      "with",
      "the",
      "customer",
      "whose",
      "name",
      "is",
      "Franti\u0161ek",
      "Wichterlov\u00e1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "What is the country of the customer named Lu\u00eds Gon\u00e7alves?",
    "question_toks": [
      "What",
      "is",
      "the",
      "country",
      "of",
      "the",
      "customer",
      "named",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Could you provide the country for the customer with the first name Lu\u00eds and last name Gon\u00e7alves?",
    "question_toks": [
      "Could",
      "you",
      "provide",
      "the",
      "country",
      "for",
      "the",
      "customer",
      "with",
      "the",
      "first",
      "name",
      "Lu\u00eds",
      "and",
      "last",
      "name",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "In which country is the customer named Lu\u00eds Gon\u00e7alves located?",
    "question_toks": [
      "In",
      "which",
      "country",
      "is",
      "the",
      "customer",
      "named",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "located",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "What country corresponds to the customer named Fran\u00e7ois Tremblay?",
    "question_toks": [
      "What",
      "country",
      "corresponds",
      "to",
      "the",
      "customer",
      "named",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "Can you identify the country for the customer with first name Fran\u00e7ois and last name Tremblay?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "country",
      "for",
      "the",
      "customer",
      "with",
      "first",
      "name",
      "Fran\u00e7ois",
      "and",
      "last",
      "name",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "Which country is linked to the customer named Fran\u00e7ois Tremblay?",
    "question_toks": [
      "Which",
      "country",
      "is",
      "linked",
      "to",
      "the",
      "customer",
      "named",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT address FROM employees WHERE first_name = 'Andrew' AND last_name = 'Adams'",
    "query_toks": [
      "SELECT",
      "address",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Andrew",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Adams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "andrew",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "adams",
      "'"
    ],
    "question": "What is the address of the employee named Andrew Adams?",
    "question_toks": [
      "What",
      "is",
      "the",
      "address",
      "of",
      "the",
      "employee",
      "named",
      "Andrew",
      "Adams",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT address FROM employees WHERE first_name = 'Andrew' AND last_name = 'Adams'",
    "query_toks": [
      "SELECT",
      "address",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Andrew",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Adams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "andrew",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "adams",
      "'"
    ],
    "question": "Can you provide the address for Andrew Adams in the employees' records?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "address",
      "for",
      "Andrew",
      "Adams",
      "in",
      "the",
      "employees",
      "'",
      "records",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT address FROM employees WHERE first_name = 'Andrew' AND last_name = 'Adams'",
    "query_toks": [
      "SELECT",
      "address",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Andrew",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Adams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "andrew",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "adams",
      "'"
    ],
    "question": "Show me the address associated with Andrew Adams from the employees table.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "address",
      "associated",
      "with",
      "Andrew",
      "Adams",
      "from",
      "the",
      "employees",
      "table",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT city FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards'",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Nancy",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Edwards",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "nancy",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "edwards",
      "'"
    ],
    "question": "Which city does Nancy Edwards work in?",
    "question_toks": [
      "Which",
      "city",
      "does",
      "Nancy",
      "Edwards",
      "work",
      "in",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT city FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards'",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Nancy",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Edwards",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "nancy",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "edwards",
      "'"
    ],
    "question": "Can I find out the city where Nancy Edwards is located?",
    "question_toks": [
      "Can",
      "I",
      "find",
      "out",
      "the",
      "city",
      "where",
      "Nancy",
      "Edwards",
      "is",
      "located",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT city FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards'",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Nancy",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Edwards",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "nancy",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "edwards",
      "'"
    ],
    "question": "What is the city listed for Nancy Edwards in the employee database?",
    "question_toks": [
      "What",
      "is",
      "the",
      "city",
      "listed",
      "for",
      "Nancy",
      "Edwards",
      "in",
      "the",
      "employee",
      "database",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email FROM employees WHERE first_name = 'Steve' AND last_name = 'Johnson'",
    "query_toks": [
      "SELECT",
      "email",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Steve",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "steve",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "johnson",
      "'"
    ],
    "question": "What email address is associated with Steve Johnson?",
    "question_toks": [
      "What",
      "email",
      "address",
      "is",
      "associated",
      "with",
      "Steve",
      "Johnson",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email FROM employees WHERE first_name = 'Steve' AND last_name = 'Johnson'",
    "query_toks": [
      "SELECT",
      "email",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Steve",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "steve",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "johnson",
      "'"
    ],
    "question": "Can you tell me the email of Steve Johnson from the employees list?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "email",
      "of",
      "Steve",
      "Johnson",
      "from",
      "the",
      "employees",
      "list",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email FROM employees WHERE first_name = 'Steve' AND last_name = 'Johnson'",
    "query_toks": [
      "SELECT",
      "email",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Steve",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "steve",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "johnson",
      "'"
    ],
    "question": "Show me the email address for Steve Johnson in the employee records.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "email",
      "address",
      "for",
      "Steve",
      "Johnson",
      "in",
      "the",
      "employee",
      "records",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE first_name = 'Andrew' AND last_name = 'Adams'",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Andrew",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Adams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "andrew",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "adams",
      "'"
    ],
    "question": "What is the phone number of the employee named Andrew Adams?",
    "question_toks": [
      "What",
      "is",
      "the",
      "phone",
      "number",
      "of",
      "the",
      "employee",
      "named",
      "Andrew",
      "Adams",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE first_name = 'Andrew' AND last_name = 'Adams'",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Andrew",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Adams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "andrew",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "adams",
      "'"
    ],
    "question": "Can you provide the contact number for Andrew Adams?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "contact",
      "number",
      "for",
      "Andrew",
      "Adams",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE first_name = 'Andrew' AND last_name = 'Adams'",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Andrew",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Adams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "andrew",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "adams",
      "'"
    ],
    "question": "I'm looking for the phone details of Andrew Adams.",
    "question_toks": [
      "I",
      "'",
      "m",
      "looking",
      "for",
      "the",
      "phone",
      "details",
      "of",
      "Andrew",
      "Adams",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE title = 'Sales Support Agent' AND city = 'Calgary'",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "AND",
      "city",
      "=",
      "'",
      "Calgary",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "and",
      "city",
      "=",
      "'",
      "calgary",
      "'"
    ],
    "question": "What are the phone numbers of the Sales Support Agents located in Calgary?",
    "question_toks": [
      "What",
      "are",
      "the",
      "phone",
      "numbers",
      "of",
      "the",
      "Sales",
      "Support",
      "Agents",
      "located",
      "in",
      "Calgary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE title = 'Sales Support Agent' AND city = 'Calgary'",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "AND",
      "city",
      "=",
      "'",
      "Calgary",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "and",
      "city",
      "=",
      "'",
      "calgary",
      "'"
    ],
    "question": "Can you give me the contact information for Sales Support Agents in Calgary?",
    "question_toks": [
      "Can",
      "you",
      "give",
      "me",
      "the",
      "contact",
      "information",
      "for",
      "Sales",
      "Support",
      "Agents",
      "in",
      "Calgary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE title = 'Sales Support Agent' AND city = 'Calgary'",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "AND",
      "city",
      "=",
      "'",
      "Calgary",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "and",
      "city",
      "=",
      "'",
      "calgary",
      "'"
    ],
    "question": "I'm interested in the phone details of Sales Support Agents who work in Calgary.",
    "question_toks": [
      "I",
      "'",
      "m",
      "interested",
      "in",
      "the",
      "phone",
      "details",
      "of",
      "Sales",
      "Support",
      "Agents",
      "who",
      "work",
      "in",
      "Calgary",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE reports_to = 2",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value"
    ],
    "question": "What are the phone numbers of employees who report to the manager with ID 2?",
    "question_toks": [
      "What",
      "are",
      "the",
      "phone",
      "numbers",
      "of",
      "employees",
      "who",
      "report",
      "to",
      "the",
      "manager",
      "with",
      "ID",
      "2",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE reports_to = 2",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value"
    ],
    "question": "Can you provide the contact details for those who report to the second manager?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "contact",
      "details",
      "for",
      "those",
      "who",
      "report",
      "to",
      "the",
      "second",
      "manager",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE reports_to = 2",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value"
    ],
    "question": "I'm looking for the phone information of employees that report to the supervisor with ID 2.",
    "question_toks": [
      "I",
      "'",
      "m",
      "looking",
      "for",
      "the",
      "phone",
      "information",
      "of",
      "employees",
      "that",
      "report",
      "to",
      "the",
      "supervisor",
      "with",
      "ID",
      "2",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 1 ORDER BY first_name ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Which employee has the first name that comes first alphabetically and reports to the manager?",
    "question_toks": [
      "Which",
      "employee",
      "has",
      "the",
      "first",
      "name",
      "that",
      "comes",
      "first",
      "alphabetically",
      "and",
      "reports",
      "to",
      "the",
      "manager",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 1 ORDER BY first_name ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Can you find the employee with the earliest first name who reports to the top manager?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "the",
      "employee",
      "with",
      "the",
      "earliest",
      "first",
      "name",
      "who",
      "reports",
      "to",
      "the",
      "top",
      "manager",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 1 ORDER BY first_name ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Who is the employee reporting to the manager with the first name listed first in alphabetical order?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "employee",
      "reporting",
      "to",
      "the",
      "manager",
      "with",
      "the",
      "first",
      "name",
      "listed",
      "first",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE city = 'Calgary' ORDER BY last_name DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "city",
      "=",
      "'",
      "Calgary",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "city",
      "=",
      "'",
      "calgary",
      "'",
      "order",
      "by",
      "last_name",
      "desc",
      "limit",
      "value"
    ],
    "question": "Who is the employee living in Calgary with the last name that appears last alphabetically?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "employee",
      "living",
      "in",
      "Calgary",
      "with",
      "the",
      "last",
      "name",
      "that",
      "appears",
      "last",
      "alphabetically",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE city = 'Calgary' ORDER BY last_name DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "city",
      "=",
      "'",
      "Calgary",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "city",
      "=",
      "'",
      "calgary",
      "'",
      "order",
      "by",
      "last_name",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you identify the employee from Calgary whose last name comes last in the alphabet?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "employee",
      "from",
      "Calgary",
      "whose",
      "last",
      "name",
      "comes",
      "last",
      "in",
      "the",
      "alphabet",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE city = 'Calgary' ORDER BY last_name DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "city",
      "=",
      "'",
      "Calgary",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "city",
      "=",
      "'",
      "calgary",
      "'",
      "order",
      "by",
      "last_name",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which employee from Calgary has the last name that ranks highest in reverse alphabetical order?",
    "question_toks": [
      "Which",
      "employee",
      "from",
      "Calgary",
      "has",
      "the",
      "last",
      "name",
      "that",
      "ranks",
      "highest",
      "in",
      "reverse",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Support Agent' ORDER BY first_name DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "order",
      "by",
      "first_name",
      "desc",
      "limit",
      "value"
    ],
    "question": "Who is the Sales Support Agent with the last name that is last alphabetically?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "Sales",
      "Support",
      "Agent",
      "with",
      "the",
      "last",
      "name",
      "that",
      "is",
      "last",
      "alphabetically",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Support Agent' ORDER BY first_name DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "order",
      "by",
      "first_name",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the name of the last Sales Support Agent when sorted by first name?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "name",
      "of",
      "the",
      "last",
      "Sales",
      "Support",
      "Agent",
      "when",
      "sorted",
      "by",
      "first",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Support Agent' ORDER BY first_name DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "order",
      "by",
      "first_name",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which Sales Support Agent has the first name that comes last in alphabetical order?",
    "question_toks": [
      "Which",
      "Sales",
      "Support",
      "Agent",
      "has",
      "the",
      "first",
      "name",
      "that",
      "comes",
      "last",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY reports_to DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "reports_to",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "reports_to",
      "desc",
      "limit",
      "value"
    ],
    "question": "Who is the employee that reports to the highest level of management?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "employee",
      "that",
      "reports",
      "to",
      "the",
      "highest",
      "level",
      "of",
      "management",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY reports_to DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "reports_to",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "reports_to",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the first and last name of the employee with the highest reporting structure?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "the",
      "employee",
      "with",
      "the",
      "highest",
      "reporting",
      "structure",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY reports_to DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "reports_to",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "reports_to",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which employee has the highest report-to level?",
    "question_toks": [
      "Which",
      "employee",
      "has",
      "the",
      "highest",
      "report",
      "-",
      "to",
      "level",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Manager' ORDER BY first_name DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Manager",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "manager",
      "'",
      "order",
      "by",
      "first_name",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which Sales Manager's first name comes last alphabetically?",
    "question_toks": [
      "Which",
      "Sales",
      "Manager",
      "'",
      "s",
      "first",
      "name",
      "comes",
      "last",
      "alphabetically",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Manager' ORDER BY first_name DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Manager",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "manager",
      "'",
      "order",
      "by",
      "first_name",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide the first and last name of the Sales Manager with the highest alphabetical order?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "the",
      "Sales",
      "Manager",
      "with",
      "the",
      "highest",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Manager' ORDER BY first_name DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Manager",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "manager",
      "'",
      "order",
      "by",
      "first_name",
      "desc",
      "limit",
      "value"
    ],
    "question": "Who is the Sales Manager with the last name that is highest in alphabetical order?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "Sales",
      "Manager",
      "with",
      "the",
      "last",
      "name",
      "that",
      "is",
      "highest",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY city ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "city",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "city",
      "asc",
      "limit",
      "value"
    ],
    "question": "Which employee is located in the first city alphabetically?",
    "question_toks": [
      "Which",
      "employee",
      "is",
      "located",
      "in",
      "the",
      "first",
      "city",
      "alphabetically",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY city ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "city",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "city",
      "asc",
      "limit",
      "value"
    ],
    "question": "Can you give me the first and last name of the employee from the city that comes first alphabetically?",
    "question_toks": [
      "Can",
      "you",
      "give",
      "me",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "the",
      "employee",
      "from",
      "the",
      "city",
      "that",
      "comes",
      "first",
      "alphabetically",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY city ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "city",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "city",
      "asc",
      "limit",
      "value"
    ],
    "question": "Who is the employee in the city that ranks first in alphabetical order?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "employee",
      "in",
      "the",
      "city",
      "that",
      "ranks",
      "first",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 1 ORDER BY first_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Retrieve the first and last names of employees who report to the manager with ID 1, ordering them by first name and limiting the results to 10.",
    "question_toks": [
      "Retrieve",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "who",
      "report",
      "to",
      "the",
      "manager",
      "with",
      "ID",
      "1",
      ",",
      "ordering",
      "them",
      "by",
      "first",
      "name",
      "and",
      "limiting",
      "the",
      "results",
      "to",
      "10",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 1 ORDER BY first_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "List the first and last names of employees under the supervision of the manager with ID 1, sorted by first name and restricted to 10 entries.",
    "question_toks": [
      "List",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "under",
      "the",
      "supervision",
      "of",
      "the",
      "manager",
      "with",
      "ID",
      "1",
      ",",
      "sorted",
      "by",
      "first",
      "name",
      "and",
      "restricted",
      "to",
      "10",
      "entries",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 1 ORDER BY first_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Get the first and last names of employees reporting to the manager with ID 1, sorted in ascending order by first name, limited to 10 results.",
    "question_toks": [
      "Get",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "reporting",
      "to",
      "the",
      "manager",
      "with",
      "ID",
      "1",
      ",",
      "sorted",
      "in",
      "ascending",
      "order",
      "by",
      "first",
      "name",
      ",",
      "limited",
      "to",
      "10",
      "results",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Support Agent' ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Select the first and last names of employees whose job title is 'Sales Support Agent', ordered by their last name and limited to 10.",
    "question_toks": [
      "Select",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "whose",
      "job",
      "title",
      "is",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      ",",
      "ordered",
      "by",
      "their",
      "last",
      "name",
      "and",
      "limited",
      "to",
      "10",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Support Agent' ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Find the first and last names of employees with the title 'Sales Support Agent', sorted by last name, with a limit of 10 results.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "with",
      "the",
      "title",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      ",",
      "sorted",
      "by",
      "last",
      "name",
      ",",
      "with",
      "a",
      "limit",
      "of",
      "10",
      "results",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Support Agent' ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Retrieve the first and last names of those employees who are 'Sales Support Agents', ordering them by last name and restricting to 10 entries.",
    "question_toks": [
      "Retrieve",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "those",
      "employees",
      "who",
      "are",
      "'",
      "Sales",
      "Support",
      "Agents",
      "'",
      ",",
      "ordering",
      "them",
      "by",
      "last",
      "name",
      "and",
      "restricting",
      "to",
      "10",
      "entries",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY city ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "city",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "city",
      "asc",
      "limit",
      "value"
    ],
    "question": "Get the first and last names of employees sorted by their city, with the results limited to 10.",
    "question_toks": [
      "Get",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "sorted",
      "by",
      "their",
      "city",
      ",",
      "with",
      "the",
      "results",
      "limited",
      "to",
      "10",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY city ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "city",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "city",
      "asc",
      "limit",
      "value"
    ],
    "question": "List the first and last names of employees, ordering the list by city and limiting it to 10 entries.",
    "question_toks": [
      "List",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      ",",
      "ordering",
      "the",
      "list",
      "by",
      "city",
      "and",
      "limiting",
      "it",
      "to",
      "10",
      "entries",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY city ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "city",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "city",
      "asc",
      "limit",
      "value"
    ],
    "question": "Retrieve the first and last names of employees, sorted in ascending order by city, and limit the output to 10 results.",
    "question_toks": [
      "Retrieve",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      ",",
      "sorted",
      "in",
      "ascending",
      "order",
      "by",
      "city",
      ",",
      "and",
      "limit",
      "the",
      "output",
      "to",
      "10",
      "results",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY reports_to ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "reports_to",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "reports_to",
      "asc",
      "limit",
      "value"
    ],
    "question": "Fetch the first and last names of employees, sorted by their reporting manager, limited to 10 results.",
    "question_toks": [
      "Fetch",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      ",",
      "sorted",
      "by",
      "their",
      "reporting",
      "manager",
      ",",
      "limited",
      "to",
      "10",
      "results",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY reports_to ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "reports_to",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "reports_to",
      "asc",
      "limit",
      "value"
    ],
    "question": "Retrieve the first and last names of employees, ordering them by their supervisor's ID, and show only 10 entries.",
    "question_toks": [
      "Retrieve",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      ",",
      "ordering",
      "them",
      "by",
      "their",
      "supervisor",
      "'",
      "s",
      "ID",
      ",",
      "and",
      "show",
      "only",
      "10",
      "entries",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY reports_to ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "reports_to",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "reports_to",
      "asc",
      "limit",
      "value"
    ],
    "question": "Get the first and last names of employees in ascending order based on their reports_to field, limited to 10 records.",
    "question_toks": [
      "Get",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "in",
      "ascending",
      "order",
      "based",
      "on",
      "their",
      "reports_to",
      "field",
      ",",
      "limited",
      "to",
      "10",
      "records",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE city = 'Calgary' ORDER BY first_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "city",
      "=",
      "'",
      "Calgary",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "city",
      "=",
      "'",
      "calgary",
      "'",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "List the first and last names of employees who are located in Calgary, sorted by their first names, with a limit of 10.",
    "question_toks": [
      "List",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "who",
      "are",
      "located",
      "in",
      "Calgary",
      ",",
      "sorted",
      "by",
      "their",
      "first",
      "names",
      ",",
      "with",
      "a",
      "limit",
      "of",
      "10",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE city = 'Calgary' ORDER BY first_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "city",
      "=",
      "'",
      "Calgary",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "city",
      "=",
      "'",
      "calgary",
      "'",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Show the first and last names of employees based in Calgary, ordered alphabetically by first name, limited to 10 entries.",
    "question_toks": [
      "Show",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "based",
      "in",
      "Calgary",
      ",",
      "ordered",
      "alphabetically",
      "by",
      "first",
      "name",
      ",",
      "limited",
      "to",
      "10",
      "entries",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE city = 'Calgary' ORDER BY first_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "city",
      "=",
      "'",
      "Calgary",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "city",
      "=",
      "'",
      "calgary",
      "'",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Select the first and last names of employees from Calgary, arranged in ascending order by first name, and limit the result to 10.",
    "question_toks": [
      "Select",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "from",
      "Calgary",
      ",",
      "arranged",
      "in",
      "ascending",
      "order",
      "by",
      "first",
      "name",
      ",",
      "and",
      "limit",
      "the",
      "result",
      "to",
      "10",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Support Agent' ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Retrieve the first and last names of employees whose title is Sales Support Agent, sorted by last name, limited to 10.",
    "question_toks": [
      "Retrieve",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "whose",
      "title",
      "is",
      "Sales",
      "Support",
      "Agent",
      ",",
      "sorted",
      "by",
      "last",
      "name",
      ",",
      "limited",
      "to",
      "10",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Support Agent' ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Get the first and last names of employees working as Sales Support Agents, arranged in alphabetical order by last name, limited to 10 results.",
    "question_toks": [
      "Get",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "working",
      "as",
      "Sales",
      "Support",
      "Agents",
      ",",
      "arranged",
      "in",
      "alphabetical",
      "order",
      "by",
      "last",
      "name",
      ",",
      "limited",
      "to",
      "10",
      "results",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Support Agent' ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Fetch the first and last names of employees with the title of Sales Support Agent, ordered by their last names, and show only 10 entries.",
    "question_toks": [
      "Fetch",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "with",
      "the",
      "title",
      "of",
      "Sales",
      "Support",
      "Agent",
      ",",
      "ordered",
      "by",
      "their",
      "last",
      "names",
      ",",
      "and",
      "show",
      "only",
      "10",
      "entries",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE title = 'Sales Support Agent' GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "group",
      "by",
      "city"
    ],
    "question": "How many employees with the title 'Sales Support Agent' are there in each city?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "with",
      "the",
      "title",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "are",
      "there",
      "in",
      "each",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE title = 'Sales Support Agent' GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "group",
      "by",
      "city"
    ],
    "question": "Can you provide the count of 'Sales Support Agent' employees grouped by city?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "count",
      "of",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "employees",
      "grouped",
      "by",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE title = 'Sales Support Agent' GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "group",
      "by",
      "city"
    ],
    "question": "What is the number of employees titled 'Sales Support Agent' in different cities?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "employees",
      "titled",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "in",
      "different",
      "cities",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM customers GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "customers",
      "group",
      "by",
      "city"
    ],
    "question": "How many customers are there in each city?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "are",
      "there",
      "in",
      "each",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM customers GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "customers",
      "group",
      "by",
      "city"
    ],
    "question": "Can you give me the count of customers grouped by city?",
    "question_toks": [
      "Can",
      "you",
      "give",
      "me",
      "the",
      "count",
      "of",
      "customers",
      "grouped",
      "by",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM customers GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "customers",
      "group",
      "by",
      "city"
    ],
    "question": "What is the total number of customers in every city?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "customers",
      "in",
      "every",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE reports_to = 1 GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "group",
      "by",
      "city"
    ],
    "question": "How many employees report to the manager with ID 1 in each city?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "report",
      "to",
      "the",
      "manager",
      "with",
      "ID",
      "1",
      "in",
      "each",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE reports_to = 1 GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "group",
      "by",
      "city"
    ],
    "question": "Can you tell me the count of employees reporting to manager ID 1, grouped by city?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "count",
      "of",
      "employees",
      "reporting",
      "to",
      "manager",
      "ID",
      "1",
      ",",
      "grouped",
      "by",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE reports_to = 1 GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "group",
      "by",
      "city"
    ],
    "question": "What is the number of employees in each city that report to the manager with ID 1?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "employees",
      "in",
      "each",
      "city",
      "that",
      "report",
      "to",
      "the",
      "manager",
      "with",
      "ID",
      "1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE title = 'Sales Support Agent' GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "group",
      "by",
      "city"
    ],
    "question": "How many employees with the title 'Sales Support Agent' are there in each city?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "with",
      "the",
      "title",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "are",
      "there",
      "in",
      "each",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE title = 'Sales Support Agent' GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "group",
      "by",
      "city"
    ],
    "question": "Can you provide the count of 'Sales Support Agent' employees grouped by city?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "count",
      "of",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "employees",
      "grouped",
      "by",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE title = 'Sales Support Agent' GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "group",
      "by",
      "city"
    ],
    "question": "What is the number of 'Sales Support Agent' employees per city?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "employees",
      "per",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), state FROM employees WHERE title = 'General Manager' GROUP BY state",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "state",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "General",
      "Manager",
      "'",
      "GROUP",
      "BY",
      "state"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "state",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "general",
      "manager",
      "'",
      "group",
      "by",
      "state"
    ],
    "question": "How many employees hold the title 'General Manager' in each state?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "hold",
      "the",
      "title",
      "'",
      "General",
      "Manager",
      "'",
      "in",
      "each",
      "state",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), state FROM employees WHERE title = 'General Manager' GROUP BY state",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "state",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "General",
      "Manager",
      "'",
      "GROUP",
      "BY",
      "state"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "state",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "general",
      "manager",
      "'",
      "group",
      "by",
      "state"
    ],
    "question": "Can you tell me the count of 'General Manager' employees grouped by state?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "count",
      "of",
      "'",
      "General",
      "Manager",
      "'",
      "employees",
      "grouped",
      "by",
      "state",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), state FROM employees WHERE title = 'General Manager' GROUP BY state",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "state",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "General",
      "Manager",
      "'",
      "GROUP",
      "BY",
      "state"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "state",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "general",
      "manager",
      "'",
      "group",
      "by",
      "state"
    ],
    "question": "What is the total number of 'General Manager' employees in each state?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "'",
      "General",
      "Manager",
      "'",
      "employees",
      "in",
      "each",
      "state",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), country FROM employees WHERE title = 'Sales Manager' GROUP BY country",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "country",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Manager",
      "'",
      "GROUP",
      "BY",
      "country"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "country",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "manager",
      "'",
      "group",
      "by",
      "country"
    ],
    "question": "How many employees with the title 'Sales Manager' are there in each country?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "with",
      "the",
      "title",
      "'",
      "Sales",
      "Manager",
      "'",
      "are",
      "there",
      "in",
      "each",
      "country",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), country FROM employees WHERE title = 'Sales Manager' GROUP BY country",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "country",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Manager",
      "'",
      "GROUP",
      "BY",
      "country"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "country",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "manager",
      "'",
      "group",
      "by",
      "country"
    ],
    "question": "Can you provide the count of 'Sales Manager' employees grouped by country?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "count",
      "of",
      "'",
      "Sales",
      "Manager",
      "'",
      "employees",
      "grouped",
      "by",
      "country",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), country FROM employees WHERE title = 'Sales Manager' GROUP BY country",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "country",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Manager",
      "'",
      "GROUP",
      "BY",
      "country"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "country",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "manager",
      "'",
      "group",
      "by",
      "country"
    ],
    "question": "What is the number of 'Sales Manager' employees per country?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "'",
      "Sales",
      "Manager",
      "'",
      "employees",
      "per",
      "country",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "Who is the composer of the track titled 'Balls to the Wall'?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "composer",
      "of",
      "the",
      "track",
      "titled",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "Can you tell me the composer for the song named 'Balls to the Wall'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "composer",
      "for",
      "the",
      "song",
      "named",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "What is the name of the composer for the track called 'Balls to the Wall'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "composer",
      "for",
      "the",
      "track",
      "called",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "Who composed the track 'Restless and Wild'?",
    "question_toks": [
      "Who",
      "composed",
      "the",
      "track",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "Can you provide the name of the composer for 'Restless and Wild'?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "name",
      "of",
      "the",
      "composer",
      "for",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "What is the composer of the song titled 'Restless and Wild'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "composer",
      "of",
      "the",
      "song",
      "titled",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "Who is the composer of 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "composer",
      "of",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "Can you tell me who composed the song 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "who",
      "composed",
      "the",
      "song",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "What is the name of the composer for the track 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "composer",
      "for",
      "the",
      "track",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "Who is the composer of the track titled 'Balls to the Wall'?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "composer",
      "of",
      "the",
      "track",
      "titled",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "Can you tell me the composer for the song named 'Balls to the Wall'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "composer",
      "for",
      "the",
      "song",
      "named",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "What is the name of the composer for the track 'Balls to the Wall'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "composer",
      "for",
      "the",
      "track",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "Who composed the song 'Restless and Wild'?",
    "question_toks": [
      "Who",
      "composed",
      "the",
      "song",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "Can you provide the name of the composer for 'Restless and Wild'?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "name",
      "of",
      "the",
      "composer",
      "for",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "What is the composer's name for the track titled 'Restless and Wild'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "composer",
      "'",
      "s",
      "name",
      "for",
      "the",
      "track",
      "titled",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "Who is the composer of 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "composer",
      "of",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "Can you tell me the name of the composer for the song 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "name",
      "of",
      "the",
      "composer",
      "for",
      "the",
      "song",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "What is the name of the composer for the track 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "composer",
      "for",
      "the",
      "track",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "What is the duration in milliseconds for the track titled 'Balls to the Wall'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "duration",
      "in",
      "milliseconds",
      "for",
      "the",
      "track",
      "titled",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "Can you tell me how long the track 'Balls to the Wall' is in milliseconds?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "how",
      "long",
      "the",
      "track",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "is",
      "in",
      "milliseconds",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "I'm interested in the milliseconds value for the track named 'Balls to the Wall'.",
    "question_toks": [
      "I",
      "'",
      "m",
      "interested",
      "in",
      "the",
      "milliseconds",
      "value",
      "for",
      "the",
      "track",
      "named",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "How many milliseconds does the track 'Restless and Wild' last?",
    "question_toks": [
      "How",
      "many",
      "milliseconds",
      "does",
      "the",
      "track",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "last",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "What is the length in milliseconds of the track called 'Restless and Wild'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "length",
      "in",
      "milliseconds",
      "of",
      "the",
      "track",
      "called",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "Could you provide the milliseconds duration for the track 'Restless and Wild'?",
    "question_toks": [
      "Could",
      "you",
      "provide",
      "the",
      "milliseconds",
      "duration",
      "for",
      "the",
      "track",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "What is the milliseconds duration for the track 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "milliseconds",
      "duration",
      "for",
      "the",
      "track",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "Can you give me the length in milliseconds of the track titled 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "Can",
      "you",
      "give",
      "me",
      "the",
      "length",
      "in",
      "milliseconds",
      "of",
      "the",
      "track",
      "titled",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "I'm looking for the duration in milliseconds for the track named 'For Those About To Rock (We Salute You)'.",
    "question_toks": [
      "I",
      "'",
      "m",
      "looking",
      "for",
      "the",
      "duration",
      "in",
      "milliseconds",
      "for",
      "the",
      "track",
      "named",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "What are the milliseconds for the track titled 'Balls to the Wall'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "milliseconds",
      "for",
      "the",
      "track",
      "titled",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "Can you tell me the duration in milliseconds of the track 'Balls to the Wall'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "duration",
      "in",
      "milliseconds",
      "of",
      "the",
      "track",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "How long is the track 'Balls to the Wall' in milliseconds?",
    "question_toks": [
      "How",
      "long",
      "is",
      "the",
      "track",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "in",
      "milliseconds",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "What is the duration in milliseconds of the track named 'Restless and Wild'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "duration",
      "in",
      "milliseconds",
      "of",
      "the",
      "track",
      "named",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "Could you provide the milliseconds for 'Restless and Wild'?",
    "question_toks": [
      "Could",
      "you",
      "provide",
      "the",
      "milliseconds",
      "for",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "How many milliseconds does the track 'Restless and Wild' last?",
    "question_toks": [
      "How",
      "many",
      "milliseconds",
      "does",
      "the",
      "track",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "last",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "What is the length in milliseconds of the track 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "length",
      "in",
      "milliseconds",
      "of",
      "the",
      "track",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "Can you tell me how many milliseconds the track 'For Those About To Rock (We Salute You)' runs for?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "how",
      "many",
      "milliseconds",
      "the",
      "track",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "runs",
      "for",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "How long does the track 'For Those About To Rock (We Salute You)' last in milliseconds?",
    "question_toks": [
      "How",
      "long",
      "does",
      "the",
      "track",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "last",
      "in",
      "milliseconds",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT album_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "album_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "album_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "What is the album ID for the track titled 'Fast As a Shark'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "album",
      "ID",
      "for",
      "the",
      "track",
      "titled",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT album_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "album_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "album_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Can you tell me the album ID associated with 'Fast As a Shark'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "album",
      "ID",
      "associated",
      "with",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT album_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "album_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "album_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Which album ID corresponds to the track named 'Fast As a Shark'?",
    "question_toks": [
      "Which",
      "album",
      "ID",
      "corresponds",
      "to",
      "the",
      "track",
      "named",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT genre_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "genre_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "genre_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "What genre ID does the track 'Fast As a Shark' belong to?",
    "question_toks": [
      "What",
      "genre",
      "ID",
      "does",
      "the",
      "track",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "belong",
      "to",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT genre_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "genre_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "genre_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Can you provide the genre ID for 'Fast As a Shark'?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "genre",
      "ID",
      "for",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT genre_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "genre_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "genre_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Which genre ID is linked to the track titled 'Fast As a Shark'?",
    "question_toks": [
      "Which",
      "genre",
      "ID",
      "is",
      "linked",
      "to",
      "the",
      "track",
      "titled",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT media_type_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "media_type_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "media_type_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "What is the media type ID for the track 'Fast As a Shark'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "media",
      "type",
      "ID",
      "for",
      "the",
      "track",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT media_type_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "media_type_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "media_type_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Can you tell me the media type ID associated with 'Fast As a Shark'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "media",
      "type",
      "ID",
      "associated",
      "with",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT media_type_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "media_type_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "media_type_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Which media type ID corresponds to the track named 'Fast As a Shark'?",
    "question_toks": [
      "Which",
      "media",
      "type",
      "ID",
      "corresponds",
      "to",
      "the",
      "track",
      "named",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT album_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "album_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "album_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "What is the album ID for the track titled 'Fast As a Shark'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "album",
      "ID",
      "for",
      "the",
      "track",
      "titled",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT album_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "album_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "album_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Can you tell me the album ID associated with 'Fast As a Shark'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "album",
      "ID",
      "associated",
      "with",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT album_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "album_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "album_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Which album ID corresponds to the track named 'Fast As a Shark'?",
    "question_toks": [
      "Which",
      "album",
      "ID",
      "corresponds",
      "to",
      "the",
      "track",
      "named",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT media_type_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "media_type_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "media_type_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "What media type ID is linked to the track called 'Fast As a Shark'?",
    "question_toks": [
      "What",
      "media",
      "type",
      "ID",
      "is",
      "linked",
      "to",
      "the",
      "track",
      "called",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT media_type_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "media_type_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "media_type_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Could you provide the media type ID for 'Fast As a Shark'?",
    "question_toks": [
      "Could",
      "you",
      "provide",
      "the",
      "media",
      "type",
      "ID",
      "for",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT media_type_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "media_type_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "media_type_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Which media type ID is associated with the track titled 'Fast As a Shark'?",
    "question_toks": [
      "Which",
      "media",
      "type",
      "ID",
      "is",
      "associated",
      "with",
      "the",
      "track",
      "titled",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT genre_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "genre_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "genre_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "What is the genre ID for the track named 'Fast As a Shark'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "genre",
      "ID",
      "for",
      "the",
      "track",
      "named",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT genre_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "genre_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "genre_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Can you find the genre ID related to 'Fast As a Shark'?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "the",
      "genre",
      "ID",
      "related",
      "to",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT genre_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "genre_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "genre_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Which genre ID is tied to the track titled 'Fast As a Shark'?",
    "question_toks": [
      "Which",
      "genre",
      "ID",
      "is",
      "tied",
      "to",
      "the",
      "track",
      "titled",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) FROM invoices GROUP BY billing_country ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the top 5 countries by the number of invoices issued?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "5",
      "countries",
      "by",
      "the",
      "number",
      "of",
      "invoices",
      "issued",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) FROM invoices GROUP BY billing_country ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you list the five countries with the highest invoice counts?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "five",
      "countries",
      "with",
      "the",
      "highest",
      "invoice",
      "counts",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) FROM invoices GROUP BY billing_country ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries have the most invoices, limited to the top five?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "the",
      "most",
      "invoices",
      ",",
      "limited",
      "to",
      "the",
      "top",
      "five",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices GROUP BY billing_city ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_city",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the top 5 cities with the most invoices?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "5",
      "cities",
      "with",
      "the",
      "most",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices GROUP BY billing_city ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_city",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you identify the five cities that have the highest invoice totals?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "five",
      "cities",
      "that",
      "have",
      "the",
      "highest",
      "invoice",
      "totals",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices GROUP BY billing_city ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_city",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which cities rank highest in terms of invoice counts, limited to five?",
    "question_toks": [
      "Which",
      "cities",
      "rank",
      "highest",
      "in",
      "terms",
      "of",
      "invoice",
      "counts",
      ",",
      "limited",
      "to",
      "five",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the top 5 states based on the number of invoices?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "5",
      "states",
      "based",
      "on",
      "the",
      "number",
      "of",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide a list of the five states with the most invoices?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "list",
      "of",
      "the",
      "five",
      "states",
      "with",
      "the",
      "most",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which states have the highest invoice counts, restricted to the top five?",
    "question_toks": [
      "Which",
      "states",
      "have",
      "the",
      "highest",
      "invoice",
      "counts",
      ",",
      "restricted",
      "to",
      "the",
      "top",
      "five",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) AS invoice_count FROM invoices GROUP BY billing_country ORDER BY invoice_count DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "AS",
      "invoice_count",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "invoice_count",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "invoice_count",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "invoice_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you show me the number of invoices grouped by country, sorted in descending order, limited to the top 8?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "number",
      "of",
      "invoices",
      "grouped",
      "by",
      "country",
      ",",
      "sorted",
      "in",
      "descending",
      "order",
      ",",
      "limited",
      "to",
      "the",
      "top",
      "8",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) AS invoice_count FROM invoices GROUP BY billing_country ORDER BY invoice_count DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "AS",
      "invoice_count",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "invoice_count",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "invoice_count",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "invoice_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the top 8 countries with the highest number of invoices?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "8",
      "countries",
      "with",
      "the",
      "highest",
      "number",
      "of",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) AS invoice_count FROM invoices GROUP BY billing_country ORDER BY invoice_count DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "AS",
      "invoice_count",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "invoice_count",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "invoice_count",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "invoice_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "I'd like to see a list of countries with the most invoices, showing only the top 8 in order.",
    "question_toks": [
      "I",
      "'",
      "d",
      "like",
      "to",
      "see",
      "a",
      "list",
      "of",
      "countries",
      "with",
      "the",
      "most",
      "invoices",
      ",",
      "showing",
      "only",
      "the",
      "top",
      "8",
      "in",
      "order",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(quantity) AS total_quantity FROM invoices INNER JOIN invoice_lines ON invoices.customer_id = invoice_lines.invoice_id GROUP BY billing_country ORDER BY total_quantity DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "quantity",
      ")",
      "AS",
      "total_quantity",
      "FROM",
      "invoices",
      "INNER",
      "JOIN",
      "invoice_lines",
      "ON",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_quantity",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "quantity",
      ")",
      "as",
      "total_quantity",
      "from",
      "invoices",
      "inner",
      "join",
      "invoice_lines",
      "on",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_quantity",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries have the highest total quantity of items sold, limited to the top 8?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "the",
      "highest",
      "total",
      "quantity",
      "of",
      "items",
      "sold",
      ",",
      "limited",
      "to",
      "the",
      "top",
      "8",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(quantity) AS total_quantity FROM invoices INNER JOIN invoice_lines ON invoices.customer_id = invoice_lines.invoice_id GROUP BY billing_country ORDER BY total_quantity DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "quantity",
      ")",
      "AS",
      "total_quantity",
      "FROM",
      "invoices",
      "INNER",
      "JOIN",
      "invoice_lines",
      "ON",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_quantity",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "quantity",
      ")",
      "as",
      "total_quantity",
      "from",
      "invoices",
      "inner",
      "join",
      "invoice_lines",
      "on",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_quantity",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide a list of the top 8 countries based on the total quantity of products sold?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "list",
      "of",
      "the",
      "top",
      "8",
      "countries",
      "based",
      "on",
      "the",
      "total",
      "quantity",
      "of",
      "products",
      "sold",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(quantity) AS total_quantity FROM invoices INNER JOIN invoice_lines ON invoices.customer_id = invoice_lines.invoice_id GROUP BY billing_country ORDER BY total_quantity DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "quantity",
      ")",
      "AS",
      "total_quantity",
      "FROM",
      "invoices",
      "INNER",
      "JOIN",
      "invoice_lines",
      "ON",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_quantity",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "quantity",
      ")",
      "as",
      "total_quantity",
      "from",
      "invoices",
      "inner",
      "join",
      "invoice_lines",
      "on",
      "invoices",
      ".",
      "customer_id",
      "=",
      "invoice_lines",
      ".",
      "invoice_id",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_quantity",
      "desc",
      "limit",
      "value"
    ],
    "question": "I'm interested in knowing which countries sold the most items, showing only the top 8.",
    "question_toks": [
      "I",
      "'",
      "m",
      "interested",
      "in",
      "knowing",
      "which",
      "countries",
      "sold",
      "the",
      "most",
      "items",
      ",",
      "showing",
      "only",
      "the",
      "top",
      "8",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, AVG(total) AS average_total FROM invoices GROUP BY billing_country ORDER BY average_total DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "AVG",
      "(",
      "total",
      ")",
      "AS",
      "average_total",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "average_total",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "avg",
      "(",
      "total",
      ")",
      "as",
      "average_total",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "average_total",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the top 8 countries with the highest average invoice total?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "8",
      "countries",
      "with",
      "the",
      "highest",
      "average",
      "invoice",
      "total",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, AVG(total) AS average_total FROM invoices GROUP BY billing_country ORDER BY average_total DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "AVG",
      "(",
      "total",
      ")",
      "AS",
      "average_total",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "average_total",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "avg",
      "(",
      "total",
      ")",
      "as",
      "average_total",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "average_total",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you list the countries that have the highest average total of invoices, limited to the top 8?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "countries",
      "that",
      "have",
      "the",
      "highest",
      "average",
      "total",
      "of",
      "invoices",
      ",",
      "limited",
      "to",
      "the",
      "top",
      "8",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, AVG(total) AS average_total FROM invoices GROUP BY billing_country ORDER BY average_total DESC LIMIT 8",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "AVG",
      "(",
      "total",
      ")",
      "AS",
      "average_total",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "average_total",
      "DESC",
      "LIMIT",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "avg",
      "(",
      "total",
      ")",
      "as",
      "average_total",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "average_total",
      "desc",
      "limit",
      "value"
    ],
    "question": "I'd like to see the average invoice amounts by country, showing only the top 8.",
    "question_toks": [
      "I",
      "'",
      "d",
      "like",
      "to",
      "see",
      "the",
      "average",
      "invoice",
      "amounts",
      "by",
      "country",
      ",",
      "showing",
      "only",
      "the",
      "top",
      "8",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) as invoice_count FROM invoices GROUP BY billing_country ORDER BY invoice_count DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "as",
      "invoice_count",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "invoice_count",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "invoice_count",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "invoice_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries have the highest number of invoices issued?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "the",
      "highest",
      "number",
      "of",
      "invoices",
      "issued",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) as invoice_count FROM invoices GROUP BY billing_country ORDER BY invoice_count DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "as",
      "invoice_count",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "invoice_count",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "invoice_count",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "invoice_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide the top 10 countries based on the count of invoices?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "top",
      "10",
      "countries",
      "based",
      "on",
      "the",
      "count",
      "of",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) as invoice_count FROM invoices GROUP BY billing_country ORDER BY invoice_count DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "as",
      "invoice_count",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "invoice_count",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "invoice_count",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "invoice_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the ten countries with the most invoices recorded?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ten",
      "countries",
      "with",
      "the",
      "most",
      "invoices",
      "recorded",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(total) as total_revenue FROM invoices GROUP BY billing_country ORDER BY total_revenue DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "total",
      ")",
      "as",
      "total_revenue",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_revenue",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "total",
      ")",
      "as",
      "total_revenue",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_revenue",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the top 10 countries generating the most revenue from invoices?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "10",
      "countries",
      "generating",
      "the",
      "most",
      "revenue",
      "from",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(total) as total_revenue FROM invoices GROUP BY billing_country ORDER BY total_revenue DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "total",
      ")",
      "as",
      "total_revenue",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_revenue",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "total",
      ")",
      "as",
      "total_revenue",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_revenue",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you list the countries with the highest total revenue from invoices?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "countries",
      "with",
      "the",
      "highest",
      "total",
      "revenue",
      "from",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(total) as total_revenue FROM invoices GROUP BY billing_country ORDER BY total_revenue DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "total",
      ")",
      "as",
      "total_revenue",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_revenue",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "total",
      ")",
      "as",
      "total_revenue",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_revenue",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries have the largest invoice totals, ranked in descending order?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "the",
      "largest",
      "invoice",
      "totals",
      ",",
      "ranked",
      "in",
      "descending",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, AVG(quantity) as average_quantity FROM invoice_lines INNER JOIN invoices ON invoice_lines.invoice_id = invoices.customer_id GROUP BY billing_country ORDER BY average_quantity DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "AVG",
      "(",
      "quantity",
      ")",
      "as",
      "average_quantity",
      "FROM",
      "invoice_lines",
      "INNER",
      "JOIN",
      "invoices",
      "ON",
      "invoice_lines",
      ".",
      "invoice_id",
      "=",
      "invoices",
      ".",
      "customer_id",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "average_quantity",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "avg",
      "(",
      "quantity",
      ")",
      "as",
      "average_quantity",
      "from",
      "invoice_lines",
      "inner",
      "join",
      "invoices",
      "on",
      "invoice_lines",
      ".",
      "invoice_id",
      "=",
      "invoices",
      ".",
      "customer_id",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "average_quantity",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries have the highest average quantity of items per invoice?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "the",
      "highest",
      "average",
      "quantity",
      "of",
      "items",
      "per",
      "invoice",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, AVG(quantity) as average_quantity FROM invoice_lines INNER JOIN invoices ON invoice_lines.invoice_id = invoices.customer_id GROUP BY billing_country ORDER BY average_quantity DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "AVG",
      "(",
      "quantity",
      ")",
      "as",
      "average_quantity",
      "FROM",
      "invoice_lines",
      "INNER",
      "JOIN",
      "invoices",
      "ON",
      "invoice_lines",
      ".",
      "invoice_id",
      "=",
      "invoices",
      ".",
      "customer_id",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "average_quantity",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "avg",
      "(",
      "quantity",
      ")",
      "as",
      "average_quantity",
      "from",
      "invoice_lines",
      "inner",
      "join",
      "invoices",
      "on",
      "invoice_lines",
      ".",
      "invoice_id",
      "=",
      "invoices",
      ".",
      "customer_id",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "average_quantity",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you show the top 10 countries based on the average number of items in invoices?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "the",
      "top",
      "10",
      "countries",
      "based",
      "on",
      "the",
      "average",
      "number",
      "of",
      "items",
      "in",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, AVG(quantity) as average_quantity FROM invoice_lines INNER JOIN invoices ON invoice_lines.invoice_id = invoices.customer_id GROUP BY billing_country ORDER BY average_quantity DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "AVG",
      "(",
      "quantity",
      ")",
      "as",
      "average_quantity",
      "FROM",
      "invoice_lines",
      "INNER",
      "JOIN",
      "invoices",
      "ON",
      "invoice_lines",
      ".",
      "invoice_id",
      "=",
      "invoices",
      ".",
      "customer_id",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "average_quantity",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "avg",
      "(",
      "quantity",
      ")",
      "as",
      "average_quantity",
      "from",
      "invoice_lines",
      "inner",
      "join",
      "invoices",
      "on",
      "invoice_lines",
      ".",
      "invoice_id",
      "=",
      "invoices",
      ".",
      "customer_id",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "average_quantity",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the countries with the largest average quantities recorded in invoices?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "with",
      "the",
      "largest",
      "average",
      "quantities",
      "recorded",
      "in",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) as invoice_count FROM invoices GROUP BY billing_country ORDER BY invoice_count DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "as",
      "invoice_count",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "invoice_count",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "invoice_count",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "invoice_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the top 10 countries with the highest number of invoices?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "10",
      "countries",
      "with",
      "the",
      "highest",
      "number",
      "of",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) as invoice_count FROM invoices GROUP BY billing_country ORDER BY invoice_count DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "as",
      "invoice_count",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "invoice_count",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "invoice_count",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "invoice_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you show me the 10 countries that have the most invoices issued?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "10",
      "countries",
      "that",
      "have",
      "the",
      "most",
      "invoices",
      "issued",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) as invoice_count FROM invoices GROUP BY billing_country ORDER BY invoice_count DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "as",
      "invoice_count",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "invoice_count",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "invoice_count",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "invoice_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries have issued the most invoices, limited to the top 10?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "issued",
      "the",
      "most",
      "invoices",
      ",",
      "limited",
      "to",
      "the",
      "top",
      "10",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(invoice_id) as total_invoices FROM invoices GROUP BY billing_country ORDER BY total_invoices DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "invoice_id",
      ")",
      "as",
      "total_invoices",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_invoices",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "invoice_id",
      ")",
      "as",
      "total_invoices",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_invoices",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries have the highest total of invoice IDs, limited to the top 10?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "the",
      "highest",
      "total",
      "of",
      "invoice",
      "IDs",
      ",",
      "limited",
      "to",
      "the",
      "top",
      "10",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(invoice_id) as total_invoices FROM invoices GROUP BY billing_country ORDER BY total_invoices DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "invoice_id",
      ")",
      "as",
      "total_invoices",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_invoices",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "invoice_id",
      ")",
      "as",
      "total_invoices",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_invoices",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you list the top 10 countries based on the sum of invoice IDs?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "top",
      "10",
      "countries",
      "based",
      "on",
      "the",
      "sum",
      "of",
      "invoice",
      "IDs",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, SUM(invoice_id) as total_invoices FROM invoices GROUP BY billing_country ORDER BY total_invoices DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "SUM",
      "(",
      "invoice_id",
      ")",
      "as",
      "total_invoices",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "total_invoices",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "sum",
      "(",
      "invoice_id",
      ")",
      "as",
      "total_invoices",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "total_invoices",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the countries with the largest total of invoice IDs, restricted to the top 10?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "with",
      "the",
      "largest",
      "total",
      "of",
      "invoice",
      "IDs",
      ",",
      "restricted",
      "to",
      "the",
      "top",
      "10",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, AVG(billing_postal_code) as average_postal_code FROM invoices GROUP BY billing_country ORDER BY average_postal_code DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "AVG",
      "(",
      "billing_postal_code",
      ")",
      "as",
      "average_postal_code",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "average_postal_code",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "avg",
      "(",
      "billing_postal_code",
      ")",
      "as",
      "average_postal_code",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "average_postal_code",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the top 10 countries with the highest average postal codes from invoices?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "10",
      "countries",
      "with",
      "the",
      "highest",
      "average",
      "postal",
      "codes",
      "from",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, AVG(billing_postal_code) as average_postal_code FROM invoices GROUP BY billing_country ORDER BY average_postal_code DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "AVG",
      "(",
      "billing_postal_code",
      ")",
      "as",
      "average_postal_code",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "average_postal_code",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "avg",
      "(",
      "billing_postal_code",
      ")",
      "as",
      "average_postal_code",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "average_postal_code",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you show me the countries ranked by the average postal codes found in invoices, limited to the top 10?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "countries",
      "ranked",
      "by",
      "the",
      "average",
      "postal",
      "codes",
      "found",
      "in",
      "invoices",
      ",",
      "limited",
      "to",
      "the",
      "top",
      "10",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, AVG(billing_postal_code) as average_postal_code FROM invoices GROUP BY billing_country ORDER BY average_postal_code DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "AVG",
      "(",
      "billing_postal_code",
      ")",
      "as",
      "average_postal_code",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country",
      "ORDER",
      "BY",
      "average_postal_code",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "avg",
      "(",
      "billing_postal_code",
      ")",
      "as",
      "average_postal_code",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country",
      "order",
      "by",
      "average_postal_code",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries have the highest average of billing postal codes in invoices, restricted to the top 10?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "the",
      "highest",
      "average",
      "of",
      "billing",
      "postal",
      "codes",
      "in",
      "invoices",
      ",",
      "restricted",
      "to",
      "the",
      "top",
      "10",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'B%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "B",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "b",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Can you list the album titles that start with the letter B?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "album",
      "titles",
      "that",
      "start",
      "with",
      "the",
      "letter",
      "B",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'B%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "B",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "b",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "What are the titles of albums beginning with the letter B?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "albums",
      "beginning",
      "with",
      "the",
      "letter",
      "B",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'B%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "B",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "b",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Show me the album titles that begin with the letter B, sorted in order.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "album",
      "titles",
      "that",
      "begin",
      "with",
      "the",
      "letter",
      "B",
      ",",
      "sorted",
      "in",
      "order",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'A%' AND artist_id = 1 ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "A",
      "%",
      "'",
      "AND",
      "artist_id",
      "=",
      "1",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "a",
      "%",
      "'",
      "and",
      "artist_id",
      "=",
      "value",
      "order",
      "by",
      "title"
    ],
    "question": "Which album titles that start with A are by the artist with ID 1?",
    "question_toks": [
      "Which",
      "album",
      "titles",
      "that",
      "start",
      "with",
      "A",
      "are",
      "by",
      "the",
      "artist",
      "with",
      "ID",
      "1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'A%' AND artist_id = 1 ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "A",
      "%",
      "'",
      "AND",
      "artist_id",
      "=",
      "1",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "a",
      "%",
      "'",
      "and",
      "artist_id",
      "=",
      "value",
      "order",
      "by",
      "title"
    ],
    "question": "List the titles of albums starting with the letter A from the artist with ID 1.",
    "question_toks": [
      "List",
      "the",
      "titles",
      "of",
      "albums",
      "starting",
      "with",
      "the",
      "letter",
      "A",
      "from",
      "the",
      "artist",
      "with",
      "ID",
      "1",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'A%' AND artist_id = 1 ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "A",
      "%",
      "'",
      "AND",
      "artist_id",
      "=",
      "1",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "a",
      "%",
      "'",
      "and",
      "artist_id",
      "=",
      "value",
      "order",
      "by",
      "title"
    ],
    "question": "Can you provide the titles of albums that begin with A and belong to the artist with ID 1?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "titles",
      "of",
      "albums",
      "that",
      "begin",
      "with",
      "A",
      "and",
      "belong",
      "to",
      "the",
      "artist",
      "with",
      "ID",
      "1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'A%' AND artist_id IN (1, 2) ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "A",
      "%",
      "'",
      "AND",
      "artist_id",
      "IN",
      "(",
      "1",
      ",",
      "2",
      ")",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "a",
      "%",
      "'",
      "and",
      "artist_id",
      "in",
      "(",
      "value",
      ",",
      "value",
      ")",
      "order",
      "by",
      "title"
    ],
    "question": "What are the album titles that start with A by artists with IDs 1 or 2?",
    "question_toks": [
      "What",
      "are",
      "the",
      "album",
      "titles",
      "that",
      "start",
      "with",
      "A",
      "by",
      "artists",
      "with",
      "IDs",
      "1",
      "or",
      "2",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'A%' AND artist_id IN (1, 2) ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "A",
      "%",
      "'",
      "AND",
      "artist_id",
      "IN",
      "(",
      "1",
      ",",
      "2",
      ")",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "a",
      "%",
      "'",
      "and",
      "artist_id",
      "in",
      "(",
      "value",
      ",",
      "value",
      ")",
      "order",
      "by",
      "title"
    ],
    "question": "Can you show me the album titles beginning with the letter A from artists with IDs 1 and 2?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "album",
      "titles",
      "beginning",
      "with",
      "the",
      "letter",
      "A",
      "from",
      "artists",
      "with",
      "IDs",
      "1",
      "and",
      "2",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'A%' AND artist_id IN (1, 2) ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "A",
      "%",
      "'",
      "AND",
      "artist_id",
      "IN",
      "(",
      "1",
      ",",
      "2",
      ")",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "a",
      "%",
      "'",
      "and",
      "artist_id",
      "in",
      "(",
      "value",
      ",",
      "value",
      ")",
      "order",
      "by",
      "title"
    ],
    "question": "List the titles of albums that start with A from either artist ID 1 or artist ID 2.",
    "question_toks": [
      "List",
      "the",
      "titles",
      "of",
      "albums",
      "that",
      "start",
      "with",
      "A",
      "from",
      "either",
      "artist",
      "ID",
      "1",
      "or",
      "artist",
      "ID",
      "2",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'B%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "B",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "b",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Can you list the album titles that start with the letter 'B'?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "album",
      "titles",
      "that",
      "start",
      "with",
      "the",
      "letter",
      "'",
      "B",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'B%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "B",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "b",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "What are the titles of the albums beginning with 'B'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "the",
      "albums",
      "beginning",
      "with",
      "'",
      "B",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'B%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "B",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "b",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Show me the album titles that start with the letter 'B', sorted in order.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "album",
      "titles",
      "that",
      "start",
      "with",
      "the",
      "letter",
      "'",
      "B",
      "'",
      ",",
      "sorted",
      "in",
      "order",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'F%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "F",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "f",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "What album titles can you find that start with the letter 'F'?",
    "question_toks": [
      "What",
      "album",
      "titles",
      "can",
      "you",
      "find",
      "that",
      "start",
      "with",
      "the",
      "letter",
      "'",
      "F",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'F%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "F",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "f",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "List the titles of albums that begin with 'F'.",
    "question_toks": [
      "List",
      "the",
      "titles",
      "of",
      "albums",
      "that",
      "begin",
      "with",
      "'",
      "F",
      "'",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'F%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "F",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "f",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Can you provide the album titles starting with 'F', sorted alphabetically?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "album",
      "titles",
      "starting",
      "with",
      "'",
      "F",
      "'",
      ",",
      "sorted",
      "alphabetically",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "A",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "a",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "What are the titles of the albums that begin with the letter 'A'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "the",
      "albums",
      "that",
      "begin",
      "with",
      "the",
      "letter",
      "'",
      "A",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "A",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "a",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "Can you show me the album titles starting with 'A'?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "album",
      "titles",
      "starting",
      "with",
      "'",
      "A",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "A",
      "%",
      "'",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "'",
      "a",
      "%",
      "'",
      "order",
      "by",
      "title"
    ],
    "question": "List the album titles that start with 'A', in alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "album",
      "titles",
      "that",
      "start",
      "with",
      "'",
      "A",
      "'",
      ",",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(invoice_id) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "invoice_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "invoice_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "Can you calculate the total of invoice IDs for invoices that have a billing city of Stuttgart and a billing state of AB?",
    "question_toks": [
      "Can",
      "you",
      "calculate",
      "the",
      "total",
      "of",
      "invoice",
      "IDs",
      "for",
      "invoices",
      "that",
      "have",
      "a",
      "billing",
      "city",
      "of",
      "Stuttgart",
      "and",
      "a",
      "billing",
      "state",
      "of",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(invoice_id) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "invoice_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "invoice_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "What is the sum of all invoice IDs where the billing city is Stuttgart and the billing state is AB?",
    "question_toks": [
      "What",
      "is",
      "the",
      "sum",
      "of",
      "all",
      "invoice",
      "IDs",
      "where",
      "the",
      "billing",
      "city",
      "is",
      "Stuttgart",
      "and",
      "the",
      "billing",
      "state",
      "is",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(invoice_id) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "invoice_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "invoice_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "How much do the invoice IDs add up to for those invoices issued in Stuttgart, AB?",
    "question_toks": [
      "How",
      "much",
      "do",
      "the",
      "invoice",
      "IDs",
      "add",
      "up",
      "to",
      "for",
      "those",
      "invoices",
      "issued",
      "in",
      "Stuttgart",
      ",",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(customer_id) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "How many customer IDs are associated with invoices that have a billing city of Oslo and a billing state of MA?",
    "question_toks": [
      "How",
      "many",
      "customer",
      "IDs",
      "are",
      "associated",
      "with",
      "invoices",
      "that",
      "have",
      "a",
      "billing",
      "city",
      "of",
      "Oslo",
      "and",
      "a",
      "billing",
      "state",
      "of",
      "MA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(customer_id) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "What is the count of customer IDs for invoices billed in Oslo, MA?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "customer",
      "IDs",
      "for",
      "invoices",
      "billed",
      "in",
      "Oslo",
      ",",
      "MA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(customer_id) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "Can you tell me the number of customer IDs for invoices where the billing city is Oslo and the billing state is MA?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "number",
      "of",
      "customer",
      "IDs",
      "for",
      "invoices",
      "where",
      "the",
      "billing",
      "city",
      "is",
      "Oslo",
      "and",
      "the",
      "billing",
      "state",
      "is",
      "MA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT AVG(customer_id) FROM invoices WHERE billing_city = 'Boston' AND billing_state = 'WA'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Boston",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "WA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "boston",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "wa",
      "'"
    ],
    "question": "What is the average of customer IDs for invoices that list Boston as the billing city and WA as the billing state?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "of",
      "customer",
      "IDs",
      "for",
      "invoices",
      "that",
      "list",
      "Boston",
      "as",
      "the",
      "billing",
      "city",
      "and",
      "WA",
      "as",
      "the",
      "billing",
      "state",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT AVG(customer_id) FROM invoices WHERE billing_city = 'Boston' AND billing_state = 'WA'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Boston",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "WA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "boston",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "wa",
      "'"
    ],
    "question": "Can you find the average customer ID from invoices that have Boston as the billing city and WA as the billing state?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "the",
      "average",
      "customer",
      "ID",
      "from",
      "invoices",
      "that",
      "have",
      "Boston",
      "as",
      "the",
      "billing",
      "city",
      "and",
      "WA",
      "as",
      "the",
      "billing",
      "state",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT AVG(customer_id) FROM invoices WHERE billing_city = 'Boston' AND billing_state = 'WA'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Boston",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "WA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "boston",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "wa",
      "'"
    ],
    "question": "How does the average customer ID look for invoices billed in Boston, WA?",
    "question_toks": [
      "How",
      "does",
      "the",
      "average",
      "customer",
      "ID",
      "look",
      "for",
      "invoices",
      "billed",
      "in",
      "Boston",
      ",",
      "WA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(invoice_id) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "invoice_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "invoice_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "What is the total sum of invoice IDs for invoices billed in Stuttgart, Alberta?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "sum",
      "of",
      "invoice",
      "IDs",
      "for",
      "invoices",
      "billed",
      "in",
      "Stuttgart",
      ",",
      "Alberta",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(invoice_id) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "invoice_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "invoice_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "Can you provide the sum of all invoice IDs for those located in Stuttgart, AB?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "sum",
      "of",
      "all",
      "invoice",
      "IDs",
      "for",
      "those",
      "located",
      "in",
      "Stuttgart",
      ",",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT SUM(invoice_id) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "invoice_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "invoice_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "How much do the invoice IDs amount to for invoices issued in Stuttgart, Alberta?",
    "question_toks": [
      "How",
      "much",
      "do",
      "the",
      "invoice",
      "IDs",
      "amount",
      "to",
      "for",
      "invoices",
      "issued",
      "in",
      "Stuttgart",
      ",",
      "Alberta",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(customer_id) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "How many customer IDs are there for invoices billed in Oslo, Massachusetts?",
    "question_toks": [
      "How",
      "many",
      "customer",
      "IDs",
      "are",
      "there",
      "for",
      "invoices",
      "billed",
      "in",
      "Oslo",
      ",",
      "Massachusetts",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(customer_id) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "Can you tell me the total count of customer IDs for invoices from Oslo, MA?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "total",
      "count",
      "of",
      "customer",
      "IDs",
      "for",
      "invoices",
      "from",
      "Oslo",
      ",",
      "MA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(customer_id) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "What is the number of customer IDs associated with invoices issued in Oslo, Massachusetts?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "customer",
      "IDs",
      "associated",
      "with",
      "invoices",
      "issued",
      "in",
      "Oslo",
      ",",
      "Massachusetts",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT AVG(billing_postal_code) FROM invoices WHERE billing_city = 'Boston' AND billing_state = 'WA'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "billing_postal_code",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Boston",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "WA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "billing_postal_code",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "boston",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "wa",
      "'"
    ],
    "question": "What is the average postal code for invoices billed in Boston, Washington?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "postal",
      "code",
      "for",
      "invoices",
      "billed",
      "in",
      "Boston",
      ",",
      "Washington",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT AVG(billing_postal_code) FROM invoices WHERE billing_city = 'Boston' AND billing_state = 'WA'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "billing_postal_code",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Boston",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "WA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "billing_postal_code",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "boston",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "wa",
      "'"
    ],
    "question": "Can you calculate the average of billing postal codes for invoices from Boston, WA?",
    "question_toks": [
      "Can",
      "you",
      "calculate",
      "the",
      "average",
      "of",
      "billing",
      "postal",
      "codes",
      "for",
      "invoices",
      "from",
      "Boston",
      ",",
      "WA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT AVG(billing_postal_code) FROM invoices WHERE billing_city = 'Boston' AND billing_state = 'WA'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "billing_postal_code",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Boston",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "WA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "billing_postal_code",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "boston",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "wa",
      "'"
    ],
    "question": "How does the average billing postal code look for invoices issued in Boston, Washington?",
    "question_toks": [
      "How",
      "does",
      "the",
      "average",
      "billing",
      "postal",
      "code",
      "look",
      "for",
      "invoices",
      "issued",
      "in",
      "Boston",
      ",",
      "Washington",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "How many invoices are there for Stuttgart in the state of Massachusetts?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "for",
      "Stuttgart",
      "in",
      "the",
      "state",
      "of",
      "Massachusetts",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "Can you tell me the count of invoices issued in Stuttgart, MA?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "count",
      "of",
      "invoices",
      "issued",
      "in",
      "Stuttgart",
      ",",
      "MA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'MA'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "MA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ma",
      "'"
    ],
    "question": "What is the total number of invoices for the city of Stuttgart located in Massachusetts?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "invoices",
      "for",
      "the",
      "city",
      "of",
      "Stuttgart",
      "located",
      "in",
      "Massachusetts",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "What is the number of invoices from Oslo in the state of S\u00e3o Paulo?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "invoices",
      "from",
      "Oslo",
      "in",
      "the",
      "state",
      "of",
      "S\u00e3o",
      "Paulo",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "How many invoices were generated for Oslo in SP?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "were",
      "generated",
      "for",
      "Oslo",
      "in",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "Can you provide the count of invoices for the city of Oslo in S\u00e3o Paulo?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "count",
      "of",
      "invoices",
      "for",
      "the",
      "city",
      "of",
      "Oslo",
      "in",
      "S\u00e3o",
      "Paulo",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Boston' AND billing_state = 'WA'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Boston",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "WA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "boston",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "wa",
      "'"
    ],
    "question": "How many invoices are recorded for Boston in Washington state?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "recorded",
      "for",
      "Boston",
      "in",
      "Washington",
      "state",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Boston' AND billing_state = 'WA'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Boston",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "WA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "boston",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "wa",
      "'"
    ],
    "question": "What is the total count of invoices for Boston located in WA?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "count",
      "of",
      "invoices",
      "for",
      "Boston",
      "located",
      "in",
      "WA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Boston' AND billing_state = 'WA'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Boston",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "WA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "boston",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "wa",
      "'"
    ],
    "question": "Can you tell me how many invoices were issued for the city of Boston in Washington?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "how",
      "many",
      "invoices",
      "were",
      "issued",
      "for",
      "the",
      "city",
      "of",
      "Boston",
      "in",
      "Washington",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "How many invoices are there for the city of Stuttgart in the state of AB?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "for",
      "the",
      "city",
      "of",
      "Stuttgart",
      "in",
      "the",
      "state",
      "of",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "Can you count the number of invoices issued in Stuttgart, Alberta?",
    "question_toks": [
      "Can",
      "you",
      "count",
      "the",
      "number",
      "of",
      "invoices",
      "issued",
      "in",
      "Stuttgart",
      ",",
      "Alberta",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Stuttgart' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Stuttgart",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "stuttgart",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "What is the total number of invoices associated with Stuttgart, AB?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "invoices",
      "associated",
      "with",
      "Stuttgart",
      ",",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "What is the count of invoices for Oslo in the state of SP?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "invoices",
      "for",
      "Oslo",
      "in",
      "the",
      "state",
      "of",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "How many invoices have been issued for the city of Oslo in SP?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "have",
      "been",
      "issued",
      "for",
      "the",
      "city",
      "of",
      "Oslo",
      "in",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Oslo' AND billing_state = 'SP'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Oslo",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "oslo",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "Can you provide the total number of invoices linked to Oslo, SP?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "total",
      "number",
      "of",
      "invoices",
      "linked",
      "to",
      "Oslo",
      ",",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Edmonton' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Edmonton",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "edmonton",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "How many invoices are recorded for Edmonton in the province of AB?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "recorded",
      "for",
      "Edmonton",
      "in",
      "the",
      "province",
      "of",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Edmonton' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Edmonton",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "edmonton",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "What is the total count of invoices for the city of Edmonton, Alberta?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "count",
      "of",
      "invoices",
      "for",
      "the",
      "city",
      "of",
      "Edmonton",
      ",",
      "Alberta",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) FROM invoices WHERE billing_city = 'Edmonton' AND billing_state = 'AB'",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_city",
      "=",
      "'",
      "Edmonton",
      "'",
      "AND",
      "billing_state",
      "=",
      "'",
      "AB",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_city",
      "=",
      "'",
      "edmonton",
      "'",
      "and",
      "billing_state",
      "=",
      "'",
      "ab",
      "'"
    ],
    "question": "Can you tell me the number of invoices associated with Edmonton, AB?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "number",
      "of",
      "invoices",
      "associated",
      "with",
      "Edmonton",
      ",",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state"
    ],
    "question": "How many invoices are there for each state in Canada?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "for",
      "each",
      "state",
      "in",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state"
    ],
    "question": "Can you provide a count of invoices grouped by state for Canada?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "count",
      "of",
      "invoices",
      "grouped",
      "by",
      "state",
      "for",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state"
    ],
    "question": "What is the total number of invoices categorized by state within Canada?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "invoices",
      "categorized",
      "by",
      "state",
      "within",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city"
    ],
    "question": "What is the count of invoices for each city in Germany?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "invoices",
      "for",
      "each",
      "city",
      "in",
      "Germany",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city"
    ],
    "question": "Can you tell me how many invoices are grouped by city in Germany?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "how",
      "many",
      "invoices",
      "are",
      "grouped",
      "by",
      "city",
      "in",
      "Germany",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city"
    ],
    "question": "How many invoices exist for each city within Germany?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "exist",
      "for",
      "each",
      "city",
      "within",
      "Germany",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) FROM invoices GROUP BY billing_country",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country"
    ],
    "question": "How many invoices are there for each country?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "for",
      "each",
      "country",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) FROM invoices GROUP BY billing_country",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country"
    ],
    "question": "Can you provide a count of invoices categorized by country?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "count",
      "of",
      "invoices",
      "categorized",
      "by",
      "country",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*) FROM invoices GROUP BY billing_country",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "GROUP",
      "BY",
      "billing_country"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "group",
      "by",
      "billing_country"
    ],
    "question": "What is the total number of invoices grouped by country?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "invoices",
      "grouped",
      "by",
      "country",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state"
    ],
    "question": "How many invoices are there for each billing state in Canada?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "for",
      "each",
      "billing",
      "state",
      "in",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state"
    ],
    "question": "Can you provide a count of invoices grouped by billing state for customers in Canada?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "count",
      "of",
      "invoices",
      "grouped",
      "by",
      "billing",
      "state",
      "for",
      "customers",
      "in",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state"
    ],
    "question": "What is the total number of invoices per billing state for the country Canada?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "invoices",
      "per",
      "billing",
      "state",
      "for",
      "the",
      "country",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city"
    ],
    "question": "What is the count of invoices for each billing city in Germany?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "invoices",
      "for",
      "each",
      "billing",
      "city",
      "in",
      "Germany",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city"
    ],
    "question": "Can you tell me how many invoices correspond to each city in Germany?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "how",
      "many",
      "invoices",
      "correspond",
      "to",
      "each",
      "city",
      "in",
      "Germany",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city"
    ],
    "question": "How many invoices exist for each city in the country Germany?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "exist",
      "for",
      "each",
      "city",
      "in",
      "the",
      "country",
      "Germany",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT customer_id, COUNT(*) FROM invoices WHERE billing_country = 'Brazil' GROUP BY customer_id",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Brazil",
      "'",
      "GROUP",
      "BY",
      "customer_id"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "brazil",
      "'",
      "group",
      "by",
      "customer_id"
    ],
    "question": "How many invoices are associated with each customer in Brazil?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "associated",
      "with",
      "each",
      "customer",
      "in",
      "Brazil",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT customer_id, COUNT(*) FROM invoices WHERE billing_country = 'Brazil' GROUP BY customer_id",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Brazil",
      "'",
      "GROUP",
      "BY",
      "customer_id"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "brazil",
      "'",
      "group",
      "by",
      "customer_id"
    ],
    "question": "Can you provide a count of invoices grouped by customer ID for clients in Brazil?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "count",
      "of",
      "invoices",
      "grouped",
      "by",
      "customer",
      "ID",
      "for",
      "clients",
      "in",
      "Brazil",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT customer_id, COUNT(*) FROM invoices WHERE billing_country = 'Brazil' GROUP BY customer_id",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Brazil",
      "'",
      "GROUP",
      "BY",
      "customer_id"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "brazil",
      "'",
      "group",
      "by",
      "customer_id"
    ],
    "question": "What is the total number of invoices per customer ID for customers from Brazil?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "invoices",
      "per",
      "customer",
      "ID",
      "for",
      "customers",
      "from",
      "Brazil",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which city in Germany has the highest number of invoices?",
    "question_toks": [
      "Which",
      "city",
      "in",
      "Germany",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the city in Germany with the most invoices?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "city",
      "in",
      "Germany",
      "with",
      "the",
      "most",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'Germany' GROUP BY billing_city ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Germany",
      "'",
      "GROUP",
      "BY",
      "billing_city",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "germany",
      "'",
      "group",
      "by",
      "billing_city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the German city that records the most invoices?",
    "question_toks": [
      "What",
      "is",
      "the",
      "German",
      "city",
      "that",
      "records",
      "the",
      "most",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the Canadian state with the highest invoice count?",
    "question_toks": [
      "What",
      "is",
      "the",
      "Canadian",
      "state",
      "with",
      "the",
      "highest",
      "invoice",
      "count",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which state in Canada has the largest number of invoices?",
    "question_toks": [
      "Which",
      "state",
      "in",
      "Canada",
      "has",
      "the",
      "largest",
      "number",
      "of",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'Canada' GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you identify the state in Canada that has the most invoices?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "state",
      "in",
      "Canada",
      "that",
      "has",
      "the",
      "most",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT customer_id, COUNT(*) FROM invoices WHERE billing_country = 'USA' GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "USA",
      "'",
      "GROUP",
      "BY",
      "customer_id",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "usa",
      "'",
      "group",
      "by",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which customer in the USA has the highest number of invoices?",
    "question_toks": [
      "Which",
      "customer",
      "in",
      "the",
      "USA",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT customer_id, COUNT(*) FROM invoices WHERE billing_country = 'USA' GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "USA",
      "'",
      "GROUP",
      "BY",
      "customer_id",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "usa",
      "'",
      "group",
      "by",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you find out the customer ID in the USA with the most invoices?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "out",
      "the",
      "customer",
      "ID",
      "in",
      "the",
      "USA",
      "with",
      "the",
      "most",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT customer_id, COUNT(*) FROM invoices WHERE billing_country = 'USA' GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "USA",
      "'",
      "GROUP",
      "BY",
      "customer_id",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "usa",
      "'",
      "group",
      "by",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the customer ID for the USA that shows the most invoices?",
    "question_toks": [
      "What",
      "is",
      "the",
      "customer",
      "ID",
      "for",
      "the",
      "USA",
      "that",
      "shows",
      "the",
      "most",
      "invoices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'USA' GROUP BY billing_city ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "USA",
      "'",
      "GROUP",
      "BY",
      "billing_city",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "usa",
      "'",
      "group",
      "by",
      "billing_city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which city has the highest number of invoices in the USA?",
    "question_toks": [
      "Which",
      "city",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "invoices",
      "in",
      "the",
      "USA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'USA' GROUP BY billing_city ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "USA",
      "'",
      "GROUP",
      "BY",
      "billing_city",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "usa",
      "'",
      "group",
      "by",
      "billing_city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the city with the most invoice counts from the USA?",
    "question_toks": [
      "What",
      "is",
      "the",
      "city",
      "with",
      "the",
      "most",
      "invoice",
      "counts",
      "from",
      "the",
      "USA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*) FROM invoices WHERE billing_country = 'USA' GROUP BY billing_city ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "USA",
      "'",
      "GROUP",
      "BY",
      "billing_city",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "usa",
      "'",
      "group",
      "by",
      "billing_city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the city that has the most invoices in the USA?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "city",
      "that",
      "has",
      "the",
      "most",
      "invoices",
      "in",
      "the",
      "USA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'USA' GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "USA",
      "'",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "usa",
      "'",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which state has the highest number of invoices in the USA?",
    "question_toks": [
      "Which",
      "state",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "invoices",
      "in",
      "the",
      "USA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'USA' GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "USA",
      "'",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "usa",
      "'",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the state with the most invoice counts from the USA?",
    "question_toks": [
      "What",
      "is",
      "the",
      "state",
      "with",
      "the",
      "most",
      "invoice",
      "counts",
      "from",
      "the",
      "USA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = 'USA' GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "billing_state",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "USA",
      "'",
      "GROUP",
      "BY",
      "billing_state",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "billing_state",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "usa",
      "'",
      "group",
      "by",
      "billing_state",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the state that has the most invoices in the USA?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "state",
      "that",
      "has",
      "the",
      "most",
      "invoices",
      "in",
      "the",
      "USA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT customer_id, COUNT(*) FROM invoices WHERE billing_country = 'USA' GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "USA",
      "'",
      "GROUP",
      "BY",
      "customer_id",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "usa",
      "'",
      "group",
      "by",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which customer has the highest number of invoices in the USA?",
    "question_toks": [
      "Which",
      "customer",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "invoices",
      "in",
      "the",
      "USA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT customer_id, COUNT(*) FROM invoices WHERE billing_country = 'USA' GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "USA",
      "'",
      "GROUP",
      "BY",
      "customer_id",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "usa",
      "'",
      "group",
      "by",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the customer ID with the most invoice counts from the USA?",
    "question_toks": [
      "What",
      "is",
      "the",
      "customer",
      "ID",
      "with",
      "the",
      "most",
      "invoice",
      "counts",
      "from",
      "the",
      "USA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT customer_id, COUNT(*) FROM invoices WHERE billing_country = 'USA' GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "customer_id",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "USA",
      "'",
      "GROUP",
      "BY",
      "customer_id",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "usa",
      "'",
      "group",
      "by",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the customer that has the most invoices in the USA?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "customer",
      "that",
      "has",
      "the",
      "most",
      "invoices",
      "in",
      "the",
      "USA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "What is the count of invoices and the total customer IDs for those billed in California?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "invoices",
      "and",
      "the",
      "total",
      "customer",
      "IDs",
      "for",
      "those",
      "billed",
      "in",
      "California",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "Can you tell me the number of invoices and the sum of customer IDs for invoices with a billing state of CA?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "number",
      "of",
      "invoices",
      "and",
      "the",
      "sum",
      "of",
      "customer",
      "IDs",
      "for",
      "invoices",
      "with",
      "a",
      "billing",
      "state",
      "of",
      "CA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "How many invoices are there and what is the total of customer IDs for the invoices that have California as the billing state?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "and",
      "what",
      "is",
      "the",
      "total",
      "of",
      "customer",
      "IDs",
      "for",
      "the",
      "invoices",
      "that",
      "have",
      "California",
      "as",
      "the",
      "billing",
      "state",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_country = 'Canada'",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'"
    ],
    "question": "How many invoices are there and what is the total customer ID sum for those billed in Canada?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "and",
      "what",
      "is",
      "the",
      "total",
      "customer",
      "ID",
      "sum",
      "for",
      "those",
      "billed",
      "in",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_country = 'Canada'",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'"
    ],
    "question": "What is the count of invoices and the total of customer IDs for invoices where the billing country is Canada?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "invoices",
      "and",
      "the",
      "total",
      "of",
      "customer",
      "IDs",
      "for",
      "invoices",
      "where",
      "the",
      "billing",
      "country",
      "is",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_country = 'Canada'",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_country",
      "=",
      "'",
      "Canada",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_country",
      "=",
      "'",
      "canada",
      "'"
    ],
    "question": "Can you provide the number of invoices and the sum of customer IDs for those with Canada as the billing country?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "number",
      "of",
      "invoices",
      "and",
      "the",
      "sum",
      "of",
      "customer",
      "IDs",
      "for",
      "those",
      "with",
      "Canada",
      "as",
      "the",
      "billing",
      "country",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_postal_code, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_postal_code LIKE 'T6G%'",
    "query_toks": [
      "SELECT",
      "billing_postal_code",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_postal_code",
      "LIKE",
      "'",
      "T6G",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_postal_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_postal_code",
      "like",
      "'",
      "t6g",
      "%",
      "'"
    ],
    "question": "What is the count of invoices and the total customer IDs for those with postal codes starting with T6G?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "invoices",
      "and",
      "the",
      "total",
      "customer",
      "IDs",
      "for",
      "those",
      "with",
      "postal",
      "codes",
      "starting",
      "with",
      "T6G",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_postal_code, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_postal_code LIKE 'T6G%'",
    "query_toks": [
      "SELECT",
      "billing_postal_code",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_postal_code",
      "LIKE",
      "'",
      "T6G",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_postal_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_postal_code",
      "like",
      "'",
      "t6g",
      "%",
      "'"
    ],
    "question": "Can you tell me how many invoices there are and the sum of customer IDs for invoices that have postal codes beginning with T6G?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "how",
      "many",
      "invoices",
      "there",
      "are",
      "and",
      "the",
      "sum",
      "of",
      "customer",
      "IDs",
      "for",
      "invoices",
      "that",
      "have",
      "postal",
      "codes",
      "beginning",
      "with",
      "T6G",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_postal_code, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_postal_code LIKE 'T6G%'",
    "query_toks": [
      "SELECT",
      "billing_postal_code",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_postal_code",
      "LIKE",
      "'",
      "T6G",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_postal_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_postal_code",
      "like",
      "'",
      "t6g",
      "%",
      "'"
    ],
    "question": "How many invoices exist and what is the total of customer IDs for those with postal codes that start with T6G?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "exist",
      "and",
      "what",
      "is",
      "the",
      "total",
      "of",
      "customer",
      "IDs",
      "for",
      "those",
      "with",
      "postal",
      "codes",
      "that",
      "start",
      "with",
      "T6G",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "What are the total number of invoices and the sum of customer IDs for each billing city in California?",
    "question_toks": [
      "What",
      "are",
      "the",
      "total",
      "number",
      "of",
      "invoices",
      "and",
      "the",
      "sum",
      "of",
      "customer",
      "IDs",
      "for",
      "each",
      "billing",
      "city",
      "in",
      "California",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "Can you provide the count of invoices and the total of customer IDs grouped by billing city where the state is CA?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "count",
      "of",
      "invoices",
      "and",
      "the",
      "total",
      "of",
      "customer",
      "IDs",
      "grouped",
      "by",
      "billing",
      "city",
      "where",
      "the",
      "state",
      "is",
      "CA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_city, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_city",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_city",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "How many invoices are there and what is the total of customer IDs for each city in the billing state of California?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "and",
      "what",
      "is",
      "the",
      "total",
      "of",
      "customer",
      "IDs",
      "for",
      "each",
      "city",
      "in",
      "the",
      "billing",
      "state",
      "of",
      "California",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "What is the count of invoices and the total of customer IDs for each country where the billing state is California?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "invoices",
      "and",
      "the",
      "total",
      "of",
      "customer",
      "IDs",
      "for",
      "each",
      "country",
      "where",
      "the",
      "billing",
      "state",
      "is",
      "California",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "Can you list the number of invoices and the sum of customer IDs grouped by billing country for the state of CA?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "number",
      "of",
      "invoices",
      "and",
      "the",
      "sum",
      "of",
      "customer",
      "IDs",
      "grouped",
      "by",
      "billing",
      "country",
      "for",
      "the",
      "state",
      "of",
      "CA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_country, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_country",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_country",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "How many invoices exist and what is the total of customer IDs for each country within California?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "exist",
      "and",
      "what",
      "is",
      "the",
      "total",
      "of",
      "customer",
      "IDs",
      "for",
      "each",
      "country",
      "within",
      "California",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_address, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_address",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_address",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "What are the total counts of invoices and the sum of customer IDs for each billing address in California?",
    "question_toks": [
      "What",
      "are",
      "the",
      "total",
      "counts",
      "of",
      "invoices",
      "and",
      "the",
      "sum",
      "of",
      "customer",
      "IDs",
      "for",
      "each",
      "billing",
      "address",
      "in",
      "California",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_address, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_address",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_address",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "Can you provide the number of invoices and the total of customer IDs grouped by billing address where the state is CA?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "number",
      "of",
      "invoices",
      "and",
      "the",
      "total",
      "of",
      "customer",
      "IDs",
      "grouped",
      "by",
      "billing",
      "address",
      "where",
      "the",
      "state",
      "is",
      "CA",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT billing_address, COUNT(*), SUM(customer_id) FROM invoices WHERE billing_state = 'CA'",
    "query_toks": [
      "SELECT",
      "billing_address",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      ",",
      "SUM",
      "(",
      "customer_id",
      ")",
      "FROM",
      "invoices",
      "WHERE",
      "billing_state",
      "=",
      "'",
      "CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "billing_address",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "sum",
      "(",
      "customer_id",
      ")",
      "from",
      "invoices",
      "where",
      "billing_state",
      "=",
      "'",
      "ca",
      "'"
    ],
    "question": "How many invoices are there and what is the total of customer IDs for each address in the billing state of California?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "are",
      "there",
      "and",
      "what",
      "is",
      "the",
      "total",
      "of",
      "customer",
      "IDs",
      "for",
      "each",
      "address",
      "in",
      "the",
      "billing",
      "state",
      "of",
      "California",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "What company is associated with Lu\u00eds Gon\u00e7alves?",
    "question_toks": [
      "What",
      "company",
      "is",
      "associated",
      "with",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Can you tell me the company name for the customer Lu\u00eds Gon\u00e7alves?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "company",
      "name",
      "for",
      "the",
      "customer",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Which company does Lu\u00eds Gon\u00e7alves belong to?",
    "question_toks": [
      "Which",
      "company",
      "does",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "belong",
      "to",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "What is the company linked to Fran\u00e7ois Tremblay?",
    "question_toks": [
      "What",
      "is",
      "the",
      "company",
      "linked",
      "to",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "Could you provide the name of the company for Fran\u00e7ois Tremblay?",
    "question_toks": [
      "Could",
      "you",
      "provide",
      "the",
      "name",
      "of",
      "the",
      "company",
      "for",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "Which company is associated with Fran\u00e7ois Tremblay?",
    "question_toks": [
      "Which",
      "company",
      "is",
      "associated",
      "with",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Franti\u0161ek' AND last_name = 'Wichterlov\u00e1'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Franti\u0161ek",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Wichterlov\u00e1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "franti\u0161ek",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "wichterlov\u00e1",
      "'"
    ],
    "question": "What company does Franti\u0161ek Wichterlov\u00e1 work for?",
    "question_toks": [
      "What",
      "company",
      "does",
      "Franti\u0161ek",
      "Wichterlov\u00e1",
      "work",
      "for",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Franti\u0161ek' AND last_name = 'Wichterlov\u00e1'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Franti\u0161ek",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Wichterlov\u00e1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "franti\u0161ek",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "wichterlov\u00e1",
      "'"
    ],
    "question": "Can you identify the company associated with Franti\u0161ek Wichterlov\u00e1?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "company",
      "associated",
      "with",
      "Franti\u0161ek",
      "Wichterlov\u00e1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Franti\u0161ek' AND last_name = 'Wichterlov\u00e1'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Franti\u0161ek",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Wichterlov\u00e1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "franti\u0161ek",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "wichterlov\u00e1",
      "'"
    ],
    "question": "Which company is connected to Franti\u0161ek Wichterlov\u00e1?",
    "question_toks": [
      "Which",
      "company",
      "is",
      "connected",
      "to",
      "Franti\u0161ek",
      "Wichterlov\u00e1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "What company is associated with Lu\u00eds Gon\u00e7alves?",
    "question_toks": [
      "What",
      "company",
      "is",
      "associated",
      "with",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Can you tell me the company name for the customer Lu\u00eds Gon\u00e7alves?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "company",
      "name",
      "for",
      "the",
      "customer",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Which company does Lu\u00eds Gon\u00e7alves belong to?",
    "question_toks": [
      "Which",
      "company",
      "does",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "belong",
      "to",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "What is the company name for Fran\u00e7ois Tremblay?",
    "question_toks": [
      "What",
      "is",
      "the",
      "company",
      "name",
      "for",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "Can you provide the company associated with Fran\u00e7ois Tremblay?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "company",
      "associated",
      "with",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "Which company does Fran\u00e7ois Tremblay work for?",
    "question_toks": [
      "Which",
      "company",
      "does",
      "Fran\u00e7ois",
      "Tremblay",
      "work",
      "for",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Bj\u00f8rn' AND last_name = 'Hansen'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Bj\u00f8rn",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hansen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "bj\u00f8rn",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hansen",
      "'"
    ],
    "question": "What company is linked to Bj\u00f8rn Hansen?",
    "question_toks": [
      "What",
      "company",
      "is",
      "linked",
      "to",
      "Bj\u00f8rn",
      "Hansen",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Bj\u00f8rn' AND last_name = 'Hansen'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Bj\u00f8rn",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hansen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "bj\u00f8rn",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hansen",
      "'"
    ],
    "question": "Can you tell me the name of the company for Bj\u00f8rn Hansen?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "name",
      "of",
      "the",
      "company",
      "for",
      "Bj\u00f8rn",
      "Hansen",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT company FROM customers WHERE first_name = 'Bj\u00f8rn' AND last_name = 'Hansen'",
    "query_toks": [
      "SELECT",
      "company",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Bj\u00f8rn",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hansen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "bj\u00f8rn",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hansen",
      "'"
    ],
    "question": "Which company does Bj\u00f8rn Hansen represent?",
    "question_toks": [
      "Which",
      "company",
      "does",
      "Bj\u00f8rn",
      "Hansen",
      "represent",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Can you retrieve the email and phone number for Lu\u00eds Gon\u00e7alves from the customers table?",
    "question_toks": [
      "Can",
      "you",
      "retrieve",
      "the",
      "email",
      "and",
      "phone",
      "number",
      "for",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "from",
      "the",
      "customers",
      "table",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "I need the contact details, specifically email and phone, for the customer named Lu\u00eds Gon\u00e7alves.",
    "question_toks": [
      "I",
      "need",
      "the",
      "contact",
      "details",
      ",",
      "specifically",
      "email",
      "and",
      "phone",
      ",",
      "for",
      "the",
      "customer",
      "named",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Please provide the email address and phone number associated with Lu\u00eds Gon\u00e7alves.",
    "question_toks": [
      "Please",
      "provide",
      "the",
      "email",
      "address",
      "and",
      "phone",
      "number",
      "associated",
      "with",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Leonie' AND last_name = 'K\u00f6hler'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Leonie",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "K\u00f6hler",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "leonie",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "k\u00f6hler",
      "'"
    ],
    "question": "Could you find the email and phone number for Leonie K\u00f6hler in the customers database?",
    "question_toks": [
      "Could",
      "you",
      "find",
      "the",
      "email",
      "and",
      "phone",
      "number",
      "for",
      "Leonie",
      "K\u00f6hler",
      "in",
      "the",
      "customers",
      "database",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Leonie' AND last_name = 'K\u00f6hler'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Leonie",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "K\u00f6hler",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "leonie",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "k\u00f6hler",
      "'"
    ],
    "question": "I would like to see the email and phone details for the customer Leonie K\u00f6hler.",
    "question_toks": [
      "I",
      "would",
      "like",
      "to",
      "see",
      "the",
      "email",
      "and",
      "phone",
      "details",
      "for",
      "the",
      "customer",
      "Leonie",
      "K\u00f6hler",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Leonie' AND last_name = 'K\u00f6hler'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Leonie",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "K\u00f6hler",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "leonie",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "k\u00f6hler",
      "'"
    ],
    "question": "Please give me the contact information, including email and phone, for Leonie K\u00f6hler.",
    "question_toks": [
      "Please",
      "give",
      "me",
      "the",
      "contact",
      "information",
      ",",
      "including",
      "email",
      "and",
      "phone",
      ",",
      "for",
      "Leonie",
      "K\u00f6hler",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "Can you look up the email and phone number for Fran\u00e7ois Tremblay in the customer records?",
    "question_toks": [
      "Can",
      "you",
      "look",
      "up",
      "the",
      "email",
      "and",
      "phone",
      "number",
      "for",
      "Fran\u00e7ois",
      "Tremblay",
      "in",
      "the",
      "customer",
      "records",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "I need to access the email and phone details for the customer named Fran\u00e7ois Tremblay.",
    "question_toks": [
      "I",
      "need",
      "to",
      "access",
      "the",
      "email",
      "and",
      "phone",
      "details",
      "for",
      "the",
      "customer",
      "named",
      "Fran\u00e7ois",
      "Tremblay",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT email, phone FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "email",
      ",",
      "phone",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      ",",
      "phone",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "Could you provide the contact information, specifically the email and phone number, for Fran\u00e7ois Tremblay?",
    "question_toks": [
      "Could",
      "you",
      "provide",
      "the",
      "contact",
      "information",
      ",",
      "specifically",
      "the",
      "email",
      "and",
      "phone",
      "number",
      ",",
      "for",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE state = 'SP'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "How many customers are located in the state of SP?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "are",
      "located",
      "in",
      "the",
      "state",
      "of",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE state = 'SP'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "Can you tell me the number of customers residing in SP?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "number",
      "of",
      "customers",
      "residing",
      "in",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE state = 'SP'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "state",
      "=",
      "'",
      "SP",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "state",
      "=",
      "'",
      "sp",
      "'"
    ],
    "question": "What is the count of customers based in the state of SP?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "customers",
      "based",
      "in",
      "the",
      "state",
      "of",
      "SP",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE country = 'Canada'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "country",
      "=",
      "'",
      "Canada",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "country",
      "=",
      "'",
      "canada",
      "'"
    ],
    "question": "How many customers are from Canada?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "are",
      "from",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE country = 'Canada'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "country",
      "=",
      "'",
      "Canada",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "country",
      "=",
      "'",
      "canada",
      "'"
    ],
    "question": "Can you provide the total number of customers in Canada?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "total",
      "number",
      "of",
      "customers",
      "in",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE country = 'Canada'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "country",
      "=",
      "'",
      "Canada",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "country",
      "=",
      "'",
      "canada",
      "'"
    ],
    "question": "What is the customer count for those located in Canada?",
    "question_toks": [
      "What",
      "is",
      "the",
      "customer",
      "count",
      "for",
      "those",
      "located",
      "in",
      "Canada",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM employees WHERE city = 'Calgary'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employees",
      "WHERE",
      "city",
      "=",
      "'",
      "Calgary",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employees",
      "where",
      "city",
      "=",
      "'",
      "calgary",
      "'"
    ],
    "question": "How many employees work in Calgary?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "work",
      "in",
      "Calgary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM employees WHERE city = 'Calgary'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employees",
      "WHERE",
      "city",
      "=",
      "'",
      "Calgary",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employees",
      "where",
      "city",
      "=",
      "'",
      "calgary",
      "'"
    ],
    "question": "Can you tell me the number of employees based in Calgary?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "number",
      "of",
      "employees",
      "based",
      "in",
      "Calgary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM employees WHERE city = 'Calgary'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employees",
      "WHERE",
      "city",
      "=",
      "'",
      "Calgary",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employees",
      "where",
      "city",
      "=",
      "'",
      "calgary",
      "'"
    ],
    "question": "What is the total count of employees located in Calgary?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "count",
      "of",
      "employees",
      "located",
      "in",
      "Calgary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "What is the country of the customer named Lu\u00eds Gon\u00e7alves?",
    "question_toks": [
      "What",
      "is",
      "the",
      "country",
      "of",
      "the",
      "customer",
      "named",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Can you tell me the country associated with Lu\u00eds Gon\u00e7alves?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "country",
      "associated",
      "with",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Which country does the customer Lu\u00eds Gon\u00e7alves belong to?",
    "question_toks": [
      "Which",
      "country",
      "does",
      "the",
      "customer",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "belong",
      "to",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "What country is linked to the customer Fran\u00e7ois Tremblay?",
    "question_toks": [
      "What",
      "country",
      "is",
      "linked",
      "to",
      "the",
      "customer",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "Could you provide the country for the customer named Fran\u00e7ois Tremblay?",
    "question_toks": [
      "Could",
      "you",
      "provide",
      "the",
      "country",
      "for",
      "the",
      "customer",
      "named",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "In which country does the customer Fran\u00e7ois Tremblay reside?",
    "question_toks": [
      "In",
      "which",
      "country",
      "does",
      "the",
      "customer",
      "Fran\u00e7ois",
      "Tremblay",
      "reside",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Bj\u00f8rn' AND last_name = 'Hansen'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Bj\u00f8rn",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hansen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "bj\u00f8rn",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hansen",
      "'"
    ],
    "question": "What is the country for the customer Bj\u00f8rn Hansen?",
    "question_toks": [
      "What",
      "is",
      "the",
      "country",
      "for",
      "the",
      "customer",
      "Bj\u00f8rn",
      "Hansen",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Bj\u00f8rn' AND last_name = 'Hansen'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Bj\u00f8rn",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hansen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "bj\u00f8rn",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hansen",
      "'"
    ],
    "question": "Can you identify the country associated with Bj\u00f8rn Hansen?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "country",
      "associated",
      "with",
      "Bj\u00f8rn",
      "Hansen",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Bj\u00f8rn' AND last_name = 'Hansen'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Bj\u00f8rn",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hansen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "bj\u00f8rn",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hansen",
      "'"
    ],
    "question": "Which country does the customer Bj\u00f8rn Hansen come from?",
    "question_toks": [
      "Which",
      "country",
      "does",
      "the",
      "customer",
      "Bj\u00f8rn",
      "Hansen",
      "come",
      "from",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "What is the country of the customer named Lu\u00eds Gon\u00e7alves?",
    "question_toks": [
      "What",
      "is",
      "the",
      "country",
      "of",
      "the",
      "customer",
      "named",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Can you tell me the country associated with Lu\u00eds Gon\u00e7alves?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "country",
      "associated",
      "with",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Lu\u00eds' AND last_name = 'Gon\u00e7alves'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Lu\u00eds",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Gon\u00e7alves",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "lu\u00eds",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "gon\u00e7alves",
      "'"
    ],
    "question": "Which country does Lu\u00eds Gon\u00e7alves belong to?",
    "question_toks": [
      "Which",
      "country",
      "does",
      "Lu\u00eds",
      "Gon\u00e7alves",
      "belong",
      "to",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "What country is linked to the customer Fran\u00e7ois Tremblay?",
    "question_toks": [
      "What",
      "country",
      "is",
      "linked",
      "to",
      "the",
      "customer",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "Could you provide the country for Fran\u00e7ois Tremblay?",
    "question_toks": [
      "Could",
      "you",
      "provide",
      "the",
      "country",
      "for",
      "Fran\u00e7ois",
      "Tremblay",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Fran\u00e7ois' AND last_name = 'Tremblay'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Fran\u00e7ois",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Tremblay",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "fran\u00e7ois",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "tremblay",
      "'"
    ],
    "question": "In which country does Fran\u00e7ois Tremblay reside?",
    "question_toks": [
      "In",
      "which",
      "country",
      "does",
      "Fran\u00e7ois",
      "Tremblay",
      "reside",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Bj\u00f8rn' AND last_name = 'Hansen'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Bj\u00f8rn",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hansen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "bj\u00f8rn",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hansen",
      "'"
    ],
    "question": "What is the country of the customer named Bj\u00f8rn Hansen?",
    "question_toks": [
      "What",
      "is",
      "the",
      "country",
      "of",
      "the",
      "customer",
      "named",
      "Bj\u00f8rn",
      "Hansen",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Bj\u00f8rn' AND last_name = 'Hansen'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Bj\u00f8rn",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hansen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "bj\u00f8rn",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hansen",
      "'"
    ],
    "question": "Can you tell me which country Bj\u00f8rn Hansen is from?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "which",
      "country",
      "Bj\u00f8rn",
      "Hansen",
      "is",
      "from",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT country FROM customers WHERE first_name = 'Bj\u00f8rn' AND last_name = 'Hansen'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "customers",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Bj\u00f8rn",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hansen",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "'",
      "bj\u00f8rn",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hansen",
      "'"
    ],
    "question": "Which country does Bj\u00f8rn Hansen belong to?",
    "question_toks": [
      "Which",
      "country",
      "does",
      "Bj\u00f8rn",
      "Hansen",
      "belong",
      "to",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT address FROM employees WHERE first_name = 'Steve' AND last_name = 'Johnson'",
    "query_toks": [
      "SELECT",
      "address",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Steve",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "steve",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "johnson",
      "'"
    ],
    "question": "What is the address of the employee named Steve Johnson?",
    "question_toks": [
      "What",
      "is",
      "the",
      "address",
      "of",
      "the",
      "employee",
      "named",
      "Steve",
      "Johnson",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT address FROM employees WHERE first_name = 'Steve' AND last_name = 'Johnson'",
    "query_toks": [
      "SELECT",
      "address",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Steve",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "steve",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "johnson",
      "'"
    ],
    "question": "Can you provide the address for Steve Johnson in the employees table?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "address",
      "for",
      "Steve",
      "Johnson",
      "in",
      "the",
      "employees",
      "table",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT address FROM employees WHERE first_name = 'Steve' AND last_name = 'Johnson'",
    "query_toks": [
      "SELECT",
      "address",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Steve",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "steve",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "johnson",
      "'"
    ],
    "question": "I'm looking for the address associated with Steve Johnson in the employee records.",
    "question_toks": [
      "I",
      "'",
      "m",
      "looking",
      "for",
      "the",
      "address",
      "associated",
      "with",
      "Steve",
      "Johnson",
      "in",
      "the",
      "employee",
      "records",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT address FROM employees WHERE first_name = 'Andrew' AND last_name = 'Adams'",
    "query_toks": [
      "SELECT",
      "address",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Andrew",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Adams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "andrew",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "adams",
      "'"
    ],
    "question": "What address is listed for Andrew Adams in the employees database?",
    "question_toks": [
      "What",
      "address",
      "is",
      "listed",
      "for",
      "Andrew",
      "Adams",
      "in",
      "the",
      "employees",
      "database",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT address FROM employees WHERE first_name = 'Andrew' AND last_name = 'Adams'",
    "query_toks": [
      "SELECT",
      "address",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Andrew",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Adams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "andrew",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "adams",
      "'"
    ],
    "question": "Could you tell me the address for the employee named Andrew Adams?",
    "question_toks": [
      "Could",
      "you",
      "tell",
      "me",
      "the",
      "address",
      "for",
      "the",
      "employee",
      "named",
      "Andrew",
      "Adams",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT address FROM employees WHERE first_name = 'Andrew' AND last_name = 'Adams'",
    "query_toks": [
      "SELECT",
      "address",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Andrew",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Adams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "andrew",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "adams",
      "'"
    ],
    "question": "Can you find the address of Andrew Adams in the employee information?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "the",
      "address",
      "of",
      "Andrew",
      "Adams",
      "in",
      "the",
      "employee",
      "information",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT address FROM employees WHERE reports_to = 2",
    "query_toks": [
      "SELECT",
      "address",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value"
    ],
    "question": "What addresses are associated with employees who report to the manager with ID 2?",
    "question_toks": [
      "What",
      "addresses",
      "are",
      "associated",
      "with",
      "employees",
      "who",
      "report",
      "to",
      "the",
      "manager",
      "with",
      "ID",
      "2",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT address FROM employees WHERE reports_to = 2",
    "query_toks": [
      "SELECT",
      "address",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value"
    ],
    "question": "Can you list the addresses of employees that report to the second manager?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "addresses",
      "of",
      "employees",
      "that",
      "report",
      "to",
      "the",
      "second",
      "manager",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT address FROM employees WHERE reports_to = 2",
    "query_toks": [
      "SELECT",
      "address",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value"
    ],
    "question": "I'm interested in finding out the addresses of those who report to the employee with the ID of 2.",
    "question_toks": [
      "I",
      "'",
      "m",
      "interested",
      "in",
      "finding",
      "out",
      "the",
      "addresses",
      "of",
      "those",
      "who",
      "report",
      "to",
      "the",
      "employee",
      "with",
      "the",
      "ID",
      "of",
      "2",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE first_name = 'Jane' AND last_name = 'Peacock'",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Jane",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Peacock",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "jane",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "peacock",
      "'"
    ],
    "question": "What is the phone number of Jane Peacock?",
    "question_toks": [
      "What",
      "is",
      "the",
      "phone",
      "number",
      "of",
      "Jane",
      "Peacock",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE first_name = 'Jane' AND last_name = 'Peacock'",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Jane",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Peacock",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "jane",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "peacock",
      "'"
    ],
    "question": "Can you provide the contact number for Jane Peacock?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "contact",
      "number",
      "for",
      "Jane",
      "Peacock",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE first_name = 'Jane' AND last_name = 'Peacock'",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Jane",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Peacock",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "jane",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "peacock",
      "'"
    ],
    "question": "I'd like to know the phone details for Jane Peacock.",
    "question_toks": [
      "I",
      "'",
      "d",
      "like",
      "to",
      "know",
      "the",
      "phone",
      "details",
      "for",
      "Jane",
      "Peacock",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE first_name = 'Andrew' AND last_name = 'Adams'",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Andrew",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Adams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "andrew",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "adams",
      "'"
    ],
    "question": "What phone number is associated with Andrew Adams?",
    "question_toks": [
      "What",
      "phone",
      "number",
      "is",
      "associated",
      "with",
      "Andrew",
      "Adams",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE first_name = 'Andrew' AND last_name = 'Adams'",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Andrew",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Adams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "andrew",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "adams",
      "'"
    ],
    "question": "Could you tell me Andrew Adams's contact number?",
    "question_toks": [
      "Could",
      "you",
      "tell",
      "me",
      "Andrew",
      "Adams",
      "'",
      "s",
      "contact",
      "number",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE first_name = 'Andrew' AND last_name = 'Adams'",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Andrew",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Adams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "andrew",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "adams",
      "'"
    ],
    "question": "I need the phone information for Andrew Adams.",
    "question_toks": [
      "I",
      "need",
      "the",
      "phone",
      "information",
      "for",
      "Andrew",
      "Adams",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE first_name = 'Steve' AND last_name = 'Johnson'",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Steve",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "steve",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "johnson",
      "'"
    ],
    "question": "What is Steve Johnson's phone number?",
    "question_toks": [
      "What",
      "is",
      "Steve",
      "Johnson",
      "'",
      "s",
      "phone",
      "number",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE first_name = 'Steve' AND last_name = 'Johnson'",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Steve",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "steve",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "johnson",
      "'"
    ],
    "question": "Can you share the contact details for Steve Johnson?",
    "question_toks": [
      "Can",
      "you",
      "share",
      "the",
      "contact",
      "details",
      "for",
      "Steve",
      "Johnson",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT phone FROM employees WHERE first_name = 'Steve' AND last_name = 'Johnson'",
    "query_toks": [
      "SELECT",
      "phone",
      "FROM",
      "employees",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Steve",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employees",
      "where",
      "first_name",
      "=",
      "'",
      "steve",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "johnson",
      "'"
    ],
    "question": "I'm looking for the phone info of Steve Johnson.",
    "question_toks": [
      "I",
      "'",
      "m",
      "looking",
      "for",
      "the",
      "phone",
      "info",
      "of",
      "Steve",
      "Johnson",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 1 ORDER BY first_name ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Which employee has the first name that comes first alphabetically and reports to the employee with ID 1?",
    "question_toks": [
      "Which",
      "employee",
      "has",
      "the",
      "first",
      "name",
      "that",
      "comes",
      "first",
      "alphabetically",
      "and",
      "reports",
      "to",
      "the",
      "employee",
      "with",
      "ID",
      "1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 1 ORDER BY first_name ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Can you find the first employee in alphabetical order who reports to the supervisor with ID 1?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "the",
      "first",
      "employee",
      "in",
      "alphabetical",
      "order",
      "who",
      "reports",
      "to",
      "the",
      "supervisor",
      "with",
      "ID",
      "1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 1 ORDER BY first_name ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Who is the first employee by first name that reports to the manager with ID 1?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "first",
      "employee",
      "by",
      "first",
      "name",
      "that",
      "reports",
      "to",
      "the",
      "manager",
      "with",
      "ID",
      "1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Manager' ORDER BY last_name DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Manager",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "manager",
      "'",
      "order",
      "by",
      "last_name",
      "desc",
      "limit",
      "value"
    ],
    "question": "Who is the last Sales Manager by last name in the employee list?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "last",
      "Sales",
      "Manager",
      "by",
      "last",
      "name",
      "in",
      "the",
      "employee",
      "list",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Manager' ORDER BY last_name DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Manager",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "manager",
      "'",
      "order",
      "by",
      "last_name",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the Sales Manager whose last name is the highest alphabetically?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "Sales",
      "Manager",
      "whose",
      "last",
      "name",
      "is",
      "the",
      "highest",
      "alphabetically",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Manager' ORDER BY last_name DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Manager",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "manager",
      "'",
      "order",
      "by",
      "last_name",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which Sales Manager has the last name that comes last in alphabetical order?",
    "question_toks": [
      "Which",
      "Sales",
      "Manager",
      "has",
      "the",
      "last",
      "name",
      "that",
      "comes",
      "last",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY city ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "city",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "city",
      "asc",
      "limit",
      "value"
    ],
    "question": "Which employee lives in the city that comes first alphabetically?",
    "question_toks": [
      "Which",
      "employee",
      "lives",
      "in",
      "the",
      "city",
      "that",
      "comes",
      "first",
      "alphabetically",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY city ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "city",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "city",
      "asc",
      "limit",
      "value"
    ],
    "question": "Can you identify the employee from the city that is listed first in alphabetical order?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "employee",
      "from",
      "the",
      "city",
      "that",
      "is",
      "listed",
      "first",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY city ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "city",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "city",
      "asc",
      "limit",
      "value"
    ],
    "question": "Who is the first employee based on their city name in the employee records?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "first",
      "employee",
      "based",
      "on",
      "their",
      "city",
      "name",
      "in",
      "the",
      "employee",
      "records",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 1 ORDER BY last_name ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Which employee has the first and last name who reports to the manager with ID 1, sorted by last name?",
    "question_toks": [
      "Which",
      "employee",
      "has",
      "the",
      "first",
      "and",
      "last",
      "name",
      "who",
      "reports",
      "to",
      "the",
      "manager",
      "with",
      "ID",
      "1",
      ",",
      "sorted",
      "by",
      "last",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 1 ORDER BY last_name ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Can you provide the first and last name of the employee who reports to the supervisor with ID 1, listed in alphabetical order?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "the",
      "employee",
      "who",
      "reports",
      "to",
      "the",
      "supervisor",
      "with",
      "ID",
      "1",
      ",",
      "listed",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 1 ORDER BY last_name ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Who is the employee reporting to manager ID 1 with their first and last names, organized by last name?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "employee",
      "reporting",
      "to",
      "manager",
      "ID",
      "1",
      "with",
      "their",
      "first",
      "and",
      "last",
      "names",
      ",",
      "organized",
      "by",
      "last",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Manager' ORDER BY first_name DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Manager",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "manager",
      "'",
      "order",
      "by",
      "first_name",
      "desc",
      "limit",
      "value"
    ],
    "question": "Who is the Sales Manager with their first and last name, sorted by first name in descending order?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "Sales",
      "Manager",
      "with",
      "their",
      "first",
      "and",
      "last",
      "name",
      ",",
      "sorted",
      "by",
      "first",
      "name",
      "in",
      "descending",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Manager' ORDER BY first_name DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Manager",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "manager",
      "'",
      "order",
      "by",
      "first_name",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the first and last name of the Sales Manager, listed from Z to A by first name?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "the",
      "Sales",
      "Manager",
      ",",
      "listed",
      "from",
      "Z",
      "to",
      "A",
      "by",
      "first",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Manager' ORDER BY first_name DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Manager",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "manager",
      "'",
      "order",
      "by",
      "first_name",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the Sales Manager, including both first and last names, arranged by first name in reverse order?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "Sales",
      "Manager",
      ",",
      "including",
      "both",
      "first",
      "and",
      "last",
      "names",
      ",",
      "arranged",
      "by",
      "first",
      "name",
      "in",
      "reverse",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY address DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "address",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "address",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which employee's first and last name appears last when sorted by address in descending order?",
    "question_toks": [
      "Which",
      "employee",
      "'",
      "s",
      "first",
      "and",
      "last",
      "name",
      "appears",
      "last",
      "when",
      "sorted",
      "by",
      "address",
      "in",
      "descending",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY address DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "address",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "address",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide the first and last name of the employee with the highest address value when ordered?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "the",
      "employee",
      "with",
      "the",
      "highest",
      "address",
      "value",
      "when",
      "ordered",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees ORDER BY address DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "address",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "order",
      "by",
      "address",
      "desc",
      "limit",
      "value"
    ],
    "question": "Who is the employee with their first and last name that comes last in the list when sorted by address?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "employee",
      "with",
      "their",
      "first",
      "and",
      "last",
      "name",
      "that",
      "comes",
      "last",
      "in",
      "the",
      "list",
      "when",
      "sorted",
      "by",
      "address",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Support Agent' ORDER BY first_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Can you list the first and last names of employees who are Sales Support Agents, sorted by their first names?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "who",
      "are",
      "Sales",
      "Support",
      "Agents",
      ",",
      "sorted",
      "by",
      "their",
      "first",
      "names",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Support Agent' ORDER BY first_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Show me the first and last names of employees with the title Sales Support Agent, ordered by their first names.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "with",
      "the",
      "title",
      "Sales",
      "Support",
      "Agent",
      ",",
      "ordered",
      "by",
      "their",
      "first",
      "names",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Support Agent' ORDER BY first_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Retrieve the names of employees working as Sales Support Agents, arranged in alphabetical order by first name.",
    "question_toks": [
      "Retrieve",
      "the",
      "names",
      "of",
      "employees",
      "working",
      "as",
      "Sales",
      "Support",
      "Agents",
      ",",
      "arranged",
      "in",
      "alphabetical",
      "order",
      "by",
      "first",
      "name",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE city = 'Calgary' ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "city",
      "=",
      "'",
      "Calgary",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "city",
      "=",
      "'",
      "calgary",
      "'",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "What are the first and last names of employees based in Calgary, sorted by their last names?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "based",
      "in",
      "Calgary",
      ",",
      "sorted",
      "by",
      "their",
      "last",
      "names",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE city = 'Calgary' ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "city",
      "=",
      "'",
      "Calgary",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "city",
      "=",
      "'",
      "calgary",
      "'",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Provide the first and last names of employees who live in Calgary, arranged alphabetically by last name.",
    "question_toks": [
      "Provide",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "who",
      "live",
      "in",
      "Calgary",
      ",",
      "arranged",
      "alphabetically",
      "by",
      "last",
      "name",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE city = 'Calgary' ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "city",
      "=",
      "'",
      "Calgary",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "city",
      "=",
      "'",
      "calgary",
      "'",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "List the names of employees located in Calgary, ordered by last name.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "employees",
      "located",
      "in",
      "Calgary",
      ",",
      "ordered",
      "by",
      "last",
      "name",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 2 ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "2",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Who are the first and last names of employees that report to the manager with ID 2, sorted by their last names?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "that",
      "report",
      "to",
      "the",
      "manager",
      "with",
      "ID",
      "2",
      ",",
      "sorted",
      "by",
      "their",
      "last",
      "names",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 2 ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "2",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Can you provide the names of employees that have a reporting relationship with the manager ID 2, arranged by last name?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "employees",
      "that",
      "have",
      "a",
      "reporting",
      "relationship",
      "with",
      "the",
      "manager",
      "ID",
      "2",
      ",",
      "arranged",
      "by",
      "last",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 2 ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "2",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Show me the first and last names of employees under the supervision of the manager with ID 2, ordered by their last names.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "under",
      "the",
      "supervision",
      "of",
      "the",
      "manager",
      "with",
      "ID",
      "2",
      ",",
      "ordered",
      "by",
      "their",
      "last",
      "names",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Support Agent' ORDER BY first_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Can you list the first and last names of employees who are Sales Support Agents, sorted by their first names?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "who",
      "are",
      "Sales",
      "Support",
      "Agents",
      ",",
      "sorted",
      "by",
      "their",
      "first",
      "names",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Support Agent' ORDER BY first_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Show me the first and last names of all employees with the title Sales Support Agent, ordered by first name.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "all",
      "employees",
      "with",
      "the",
      "title",
      "Sales",
      "Support",
      "Agent",
      ",",
      "ordered",
      "by",
      "first",
      "name",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE title = 'Sales Support Agent' ORDER BY first_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "ORDER",
      "BY",
      "first_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "order",
      "by",
      "first_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Retrieve the names (first and last) of employees who work as Sales Support Agents, arranged in alphabetical order by first name.",
    "question_toks": [
      "Retrieve",
      "the",
      "names",
      "(",
      "first",
      "and",
      "last",
      ")",
      "of",
      "employees",
      "who",
      "work",
      "as",
      "Sales",
      "Support",
      "Agents",
      ",",
      "arranged",
      "in",
      "alphabetical",
      "order",
      "by",
      "first",
      "name",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE city = 'Calgary' ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "city",
      "=",
      "'",
      "Calgary",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "city",
      "=",
      "'",
      "calgary",
      "'",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "What are the first and last names of employees located in Calgary, sorted by their last names?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "located",
      "in",
      "Calgary",
      ",",
      "sorted",
      "by",
      "their",
      "last",
      "names",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE city = 'Calgary' ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "city",
      "=",
      "'",
      "Calgary",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "city",
      "=",
      "'",
      "calgary",
      "'",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "List the first and last names of employees who reside in Calgary, arranged in order of their last names.",
    "question_toks": [
      "List",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "who",
      "reside",
      "in",
      "Calgary",
      ",",
      "arranged",
      "in",
      "order",
      "of",
      "their",
      "last",
      "names",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE city = 'Calgary' ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "city",
      "=",
      "'",
      "Calgary",
      "'",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "city",
      "=",
      "'",
      "calgary",
      "'",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Can you provide the names (first and last) of employees based in Calgary, ordered by last name?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "(",
      "first",
      "and",
      "last",
      ")",
      "of",
      "employees",
      "based",
      "in",
      "Calgary",
      ",",
      "ordered",
      "by",
      "last",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 1 ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Who are the employees that report to the manager with ID 1? Please list their first and last names in alphabetical order.",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "that",
      "report",
      "to",
      "the",
      "manager",
      "with",
      "ID",
      "1",
      "?",
      "Please",
      "list",
      "their",
      "first",
      "and",
      "last",
      "names",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 1 ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Can you show me the first and last names of employees who report to employee ID 1, sorted by last name?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "employees",
      "who",
      "report",
      "to",
      "employee",
      "ID",
      "1",
      ",",
      "sorted",
      "by",
      "last",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT first_name, last_name FROM employees WHERE reports_to = 1 ORDER BY last_name ASC LIMIT 10",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "1",
      "ORDER",
      "BY",
      "last_name",
      "ASC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "order",
      "by",
      "last_name",
      "asc",
      "limit",
      "value"
    ],
    "question": "Retrieve the names (first and last) of employees who are under the supervision of the manager with ID 1, organized by last name.",
    "question_toks": [
      "Retrieve",
      "the",
      "names",
      "(",
      "first",
      "and",
      "last",
      ")",
      "of",
      "employees",
      "who",
      "are",
      "under",
      "the",
      "supervision",
      "of",
      "the",
      "manager",
      "with",
      "ID",
      "1",
      ",",
      "organized",
      "by",
      "last",
      "name",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) AS employee_count, city FROM employees WHERE title = 'Sales Support Agent' GROUP BY city",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "AS",
      "employee_count",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "as",
      "employee_count",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "group",
      "by",
      "city"
    ],
    "question": "How many employees with the title 'Sales Support Agent' are there in each city?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "with",
      "the",
      "title",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "are",
      "there",
      "in",
      "each",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) AS employee_count, city FROM employees WHERE title = 'Sales Support Agent' GROUP BY city",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "AS",
      "employee_count",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "as",
      "employee_count",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "group",
      "by",
      "city"
    ],
    "question": "Can you provide the count of 'Sales Support Agents' grouped by city?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "count",
      "of",
      "'",
      "Sales",
      "Support",
      "Agents",
      "'",
      "grouped",
      "by",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) AS employee_count, city FROM employees WHERE title = 'Sales Support Agent' GROUP BY city",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "AS",
      "employee_count",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "as",
      "employee_count",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "group",
      "by",
      "city"
    ],
    "question": "What is the number of 'Sales Support Agents' in each city?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "'",
      "Sales",
      "Support",
      "Agents",
      "'",
      "in",
      "each",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) AS customer_count, city FROM customers GROUP BY city",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "AS",
      "customer_count",
      ",",
      "city",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "as",
      "customer_count",
      ",",
      "city",
      "from",
      "customers",
      "group",
      "by",
      "city"
    ],
    "question": "How many customers are there in each city?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "are",
      "there",
      "in",
      "each",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) AS customer_count, city FROM customers GROUP BY city",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "AS",
      "customer_count",
      ",",
      "city",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "as",
      "customer_count",
      ",",
      "city",
      "from",
      "customers",
      "group",
      "by",
      "city"
    ],
    "question": "Can you tell me the number of customers grouped by city?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "number",
      "of",
      "customers",
      "grouped",
      "by",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) AS customer_count, city FROM customers GROUP BY city",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "AS",
      "customer_count",
      ",",
      "city",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "as",
      "customer_count",
      ",",
      "city",
      "from",
      "customers",
      "group",
      "by",
      "city"
    ],
    "question": "What is the customer count for each city?",
    "question_toks": [
      "What",
      "is",
      "the",
      "customer",
      "count",
      "for",
      "each",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) AS track_count, genre_id FROM tracks GROUP BY genre_id",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "AS",
      "track_count",
      ",",
      "genre_id",
      "FROM",
      "tracks",
      "GROUP",
      "BY",
      "genre_id"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "as",
      "track_count",
      ",",
      "genre_id",
      "from",
      "tracks",
      "group",
      "by",
      "genre_id"
    ],
    "question": "How many tracks are there for each genre?",
    "question_toks": [
      "How",
      "many",
      "tracks",
      "are",
      "there",
      "for",
      "each",
      "genre",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) AS track_count, genre_id FROM tracks GROUP BY genre_id",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "AS",
      "track_count",
      ",",
      "genre_id",
      "FROM",
      "tracks",
      "GROUP",
      "BY",
      "genre_id"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "as",
      "track_count",
      ",",
      "genre_id",
      "from",
      "tracks",
      "group",
      "by",
      "genre_id"
    ],
    "question": "Can you provide the count of tracks categorized by genre?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "count",
      "of",
      "tracks",
      "categorized",
      "by",
      "genre",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT COUNT(*) AS track_count, genre_id FROM tracks GROUP BY genre_id",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "AS",
      "track_count",
      ",",
      "genre_id",
      "FROM",
      "tracks",
      "GROUP",
      "BY",
      "genre_id"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "as",
      "track_count",
      ",",
      "genre_id",
      "from",
      "tracks",
      "group",
      "by",
      "genre_id"
    ],
    "question": "What is the number of tracks available in each genre?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "tracks",
      "available",
      "in",
      "each",
      "genre",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE title = 'Sales Support Agent' GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "group",
      "by",
      "city"
    ],
    "question": "How many employees with the title 'Sales Support Agent' are there in each city?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "with",
      "the",
      "title",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "are",
      "there",
      "in",
      "each",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE title = 'Sales Support Agent' GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "group",
      "by",
      "city"
    ],
    "question": "Can you provide the count of 'Sales Support Agent' employees grouped by city?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "count",
      "of",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "employees",
      "grouped",
      "by",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE title = 'Sales Support Agent' GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "title",
      "=",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "title",
      "=",
      "'",
      "sales",
      "support",
      "agent",
      "'",
      "group",
      "by",
      "city"
    ],
    "question": "What is the number of employees titled 'Sales Support Agent' in each city?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "employees",
      "titled",
      "'",
      "Sales",
      "Support",
      "Agent",
      "'",
      "in",
      "each",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE reports_to = 2 GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "2",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "group",
      "by",
      "city"
    ],
    "question": "How many employees report to the manager with ID 2 in each city?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "report",
      "to",
      "the",
      "manager",
      "with",
      "ID",
      "2",
      "in",
      "each",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE reports_to = 2 GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "2",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "group",
      "by",
      "city"
    ],
    "question": "Can you show the count of employees who report to the second manager, grouped by city?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "the",
      "count",
      "of",
      "employees",
      "who",
      "report",
      "to",
      "the",
      "second",
      "manager",
      ",",
      "grouped",
      "by",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE reports_to = 2 GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "reports_to",
      "=",
      "2",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "reports_to",
      "=",
      "value",
      "group",
      "by",
      "city"
    ],
    "question": "What is the total number of employees reporting to manager ID 2 in each city?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "employees",
      "reporting",
      "to",
      "manager",
      "ID",
      "2",
      "in",
      "each",
      "city",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE state = 'AB' GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "state",
      "=",
      "'",
      "AB",
      "'",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "state",
      "=",
      "'",
      "ab",
      "'",
      "group",
      "by",
      "city"
    ],
    "question": "How many employees are located in each city within the state of Alberta?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "are",
      "located",
      "in",
      "each",
      "city",
      "within",
      "the",
      "state",
      "of",
      "Alberta",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE state = 'AB' GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "state",
      "=",
      "'",
      "AB",
      "'",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "state",
      "=",
      "'",
      "ab",
      "'",
      "group",
      "by",
      "city"
    ],
    "question": "Can you provide the number of employees per city in Alberta?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "number",
      "of",
      "employees",
      "per",
      "city",
      "in",
      "Alberta",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*), city FROM employees WHERE state = 'AB' GROUP BY city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "employees",
      "WHERE",
      "state",
      "=",
      "'",
      "AB",
      "'",
      "GROUP",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "employees",
      "where",
      "state",
      "=",
      "'",
      "ab",
      "'",
      "group",
      "by",
      "city"
    ],
    "question": "What is the employee count grouped by city for those located in the state of AB?",
    "question_toks": [
      "What",
      "is",
      "the",
      "employee",
      "count",
      "grouped",
      "by",
      "city",
      "for",
      "those",
      "located",
      "in",
      "the",
      "state",
      "of",
      "AB",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "What is the composer of the track titled 'Balls to the Wall'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "composer",
      "of",
      "the",
      "track",
      "titled",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "Can you tell me who composed the song 'Balls to the Wall'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "who",
      "composed",
      "the",
      "song",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "Who is the composer for the track named 'Balls to the Wall'?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "composer",
      "for",
      "the",
      "track",
      "named",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "Who is credited as the composer for 'Restless and Wild'?",
    "question_toks": [
      "Who",
      "is",
      "credited",
      "as",
      "the",
      "composer",
      "for",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "Can you provide the name of the composer for the song 'Restless and Wild'?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "name",
      "of",
      "the",
      "composer",
      "for",
      "the",
      "song",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "What is the name of the composer associated with the track 'Restless and Wild'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "composer",
      "associated",
      "with",
      "the",
      "track",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "Who composed the song 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "Who",
      "composed",
      "the",
      "song",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "Can you tell me the composer of 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "composer",
      "of",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "What is the name of the composer for the track 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "composer",
      "for",
      "the",
      "track",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "Who is the composer of the track titled 'Balls to the Wall'?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "composer",
      "of",
      "the",
      "track",
      "titled",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "Can you tell me the composer for the song 'Balls to the Wall'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "composer",
      "for",
      "the",
      "song",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "What is the name of the composer for 'Balls to the Wall'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "composer",
      "for",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "Who composed the track 'Restless and Wild'?",
    "question_toks": [
      "Who",
      "composed",
      "the",
      "track",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "Can you provide the name of the composer for 'Restless and Wild'?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "name",
      "of",
      "the",
      "composer",
      "for",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "What is the composer's name for the song 'Restless and Wild'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "composer",
      "'",
      "s",
      "name",
      "for",
      "the",
      "song",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "Who is the composer behind 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "composer",
      "behind",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "Can you tell me the name of the composer for 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "name",
      "of",
      "the",
      "composer",
      "for",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT composer FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "composer",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "composer",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "What is the composer's name for the track 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "composer",
      "'",
      "s",
      "name",
      "for",
      "the",
      "track",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "What are the milliseconds for the track titled 'Balls to the Wall'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "milliseconds",
      "for",
      "the",
      "track",
      "titled",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "Can you tell me the duration in milliseconds of the song 'Balls to the Wall'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "duration",
      "in",
      "milliseconds",
      "of",
      "the",
      "song",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "How long does the track 'Balls to the Wall' last in milliseconds?",
    "question_toks": [
      "How",
      "long",
      "does",
      "the",
      "track",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "last",
      "in",
      "milliseconds",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "What is the duration in milliseconds of the track named 'Restless and Wild'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "duration",
      "in",
      "milliseconds",
      "of",
      "the",
      "track",
      "named",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "Can you provide the milliseconds for the song 'Restless and Wild'?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "milliseconds",
      "for",
      "the",
      "song",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "How many milliseconds does the track 'Restless and Wild' run for?",
    "question_toks": [
      "How",
      "many",
      "milliseconds",
      "does",
      "the",
      "track",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "run",
      "for",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "What is the length in milliseconds of the song 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "length",
      "in",
      "milliseconds",
      "of",
      "the",
      "song",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "Can you give me the duration in milliseconds for 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "Can",
      "you",
      "give",
      "me",
      "the",
      "duration",
      "in",
      "milliseconds",
      "for",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "How many milliseconds does the track 'For Those About To Rock (We Salute You)' take?",
    "question_toks": [
      "How",
      "many",
      "milliseconds",
      "does",
      "the",
      "track",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "take",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "What is the duration in milliseconds for the track titled 'Balls to the Wall'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "duration",
      "in",
      "milliseconds",
      "for",
      "the",
      "track",
      "titled",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "Can you tell me the length in milliseconds of the song 'Balls to the Wall'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "length",
      "in",
      "milliseconds",
      "of",
      "the",
      "song",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Balls to the Wall'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "balls",
      "to",
      "the",
      "wall",
      "'"
    ],
    "question": "How many milliseconds does the track 'Balls to the Wall' run for?",
    "question_toks": [
      "How",
      "many",
      "milliseconds",
      "does",
      "the",
      "track",
      "'",
      "Balls",
      "to",
      "the",
      "Wall",
      "'",
      "run",
      "for",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "What is the millisecond duration of the song 'Restless and Wild'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "millisecond",
      "duration",
      "of",
      "the",
      "song",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "Could you provide the length in milliseconds for 'Restless and Wild'?",
    "question_toks": [
      "Could",
      "you",
      "provide",
      "the",
      "length",
      "in",
      "milliseconds",
      "for",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'Restless and Wild'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Restless",
      "and",
      "Wild",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "restless",
      "and",
      "wild",
      "'"
    ],
    "question": "How long is the track 'Restless and Wild' in terms of milliseconds?",
    "question_toks": [
      "How",
      "long",
      "is",
      "the",
      "track",
      "'",
      "Restless",
      "and",
      "Wild",
      "'",
      "in",
      "terms",
      "of",
      "milliseconds",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "What is the duration in milliseconds for 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "duration",
      "in",
      "milliseconds",
      "for",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "Can you share the length in milliseconds of the track 'For Those About To Rock (We Salute You)'?",
    "question_toks": [
      "Can",
      "you",
      "share",
      "the",
      "length",
      "in",
      "milliseconds",
      "of",
      "the",
      "track",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT milliseconds FROM tracks WHERE name = 'For Those About To Rock (We Salute You)'",
    "query_toks": [
      "SELECT",
      "milliseconds",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "milliseconds",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "for",
      "those",
      "about",
      "to",
      "rock",
      "(",
      "we",
      "salute",
      "you",
      ")",
      "'"
    ],
    "question": "How many milliseconds does the song 'For Those About To Rock (We Salute You)' last?",
    "question_toks": [
      "How",
      "many",
      "milliseconds",
      "does",
      "the",
      "song",
      "'",
      "For",
      "Those",
      "About",
      "To",
      "Rock",
      "(",
      "We",
      "Salute",
      "You",
      ")",
      "'",
      "last",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT media_type_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "media_type_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "media_type_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "What is the media type ID for the track titled 'Fast As a Shark'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "media",
      "type",
      "ID",
      "for",
      "the",
      "track",
      "titled",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT media_type_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "media_type_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "media_type_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Can you tell me the media type ID associated with 'Fast As a Shark'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "media",
      "type",
      "ID",
      "associated",
      "with",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT media_type_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "media_type_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "media_type_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "I'm looking for the media type ID of the track named 'Fast As a Shark'.",
    "question_toks": [
      "I",
      "'",
      "m",
      "looking",
      "for",
      "the",
      "media",
      "type",
      "ID",
      "of",
      "the",
      "track",
      "named",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT album_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "album_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "album_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "What is the album ID for the track called 'Fast As a Shark'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "album",
      "ID",
      "for",
      "the",
      "track",
      "called",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT album_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "album_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "album_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Could you provide the album ID related to 'Fast As a Shark'?",
    "question_toks": [
      "Could",
      "you",
      "provide",
      "the",
      "album",
      "ID",
      "related",
      "to",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT album_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "album_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "album_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "I would like to know the album ID for the song 'Fast As a Shark'.",
    "question_toks": [
      "I",
      "would",
      "like",
      "to",
      "know",
      "the",
      "album",
      "ID",
      "for",
      "the",
      "song",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT genre_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "genre_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "genre_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "What genre ID corresponds to the track 'Fast As a Shark'?",
    "question_toks": [
      "What",
      "genre",
      "ID",
      "corresponds",
      "to",
      "the",
      "track",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT genre_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "genre_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "genre_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Can you tell me the genre ID for the song titled 'Fast As a Shark'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "genre",
      "ID",
      "for",
      "the",
      "song",
      "titled",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT genre_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "genre_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "genre_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "I'm interested in finding out the genre ID for 'Fast As a Shark'.",
    "question_toks": [
      "I",
      "'",
      "m",
      "interested",
      "in",
      "finding",
      "out",
      "the",
      "genre",
      "ID",
      "for",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT album_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "album_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "album_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "What is the album ID for the track titled 'Fast As a Shark'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "album",
      "ID",
      "for",
      "the",
      "track",
      "titled",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT album_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "album_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "album_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Can you tell me the album ID associated with the song 'Fast As a Shark'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "album",
      "ID",
      "associated",
      "with",
      "the",
      "song",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT album_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "album_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "album_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Which album ID corresponds to the track named 'Fast As a Shark'?",
    "question_toks": [
      "Which",
      "album",
      "ID",
      "corresponds",
      "to",
      "the",
      "track",
      "named",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT media_type_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "media_type_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "media_type_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "What media type ID is linked to the track 'Fast As a Shark'?",
    "question_toks": [
      "What",
      "media",
      "type",
      "ID",
      "is",
      "linked",
      "to",
      "the",
      "track",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT media_type_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "media_type_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "media_type_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Could you provide the media type ID for the song 'Fast As a Shark'?",
    "question_toks": [
      "Could",
      "you",
      "provide",
      "the",
      "media",
      "type",
      "ID",
      "for",
      "the",
      "song",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT media_type_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "media_type_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "media_type_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Which media type ID is associated with the track titled 'Fast As a Shark'?",
    "question_toks": [
      "Which",
      "media",
      "type",
      "ID",
      "is",
      "associated",
      "with",
      "the",
      "track",
      "titled",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT genre_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "genre_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "genre_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "What is the genre ID for the track named 'Fast As a Shark'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "genre",
      "ID",
      "for",
      "the",
      "track",
      "named",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT genre_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "genre_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "genre_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Can you tell me the genre ID associated with the song 'Fast As a Shark'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "genre",
      "ID",
      "associated",
      "with",
      "the",
      "song",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT genre_id FROM tracks WHERE name = 'Fast As a Shark'",
    "query_toks": [
      "SELECT",
      "genre_id",
      "FROM",
      "tracks",
      "WHERE",
      "name",
      "=",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "genre_id",
      "from",
      "tracks",
      "where",
      "name",
      "=",
      "'",
      "fast",
      "as",
      "a",
      "shark",
      "'"
    ],
    "question": "Which genre ID corresponds to the track titled 'Fast As a Shark'?",
    "question_toks": [
      "Which",
      "genre",
      "ID",
      "corresponds",
      "to",
      "the",
      "track",
      "titled",
      "'",
      "Fast",
      "As",
      "a",
      "Shark",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT Customer_Details FROM Customers WHERE Customer_Details LIKE '%Diana%'",
    "query_toks": [
      "SELECT",
      "Customer_Details",
      "FROM",
      "Customers",
      "WHERE",
      "Customer_Details",
      "LIKE",
      "'",
      "%",
      "Diana",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "customer_details",
      "from",
      "customers",
      "where",
      "customer_details",
      "like",
      "'",
      "%",
      "diana",
      "%",
      "'"
    ],
    "question": "Can you find customer details that include the name 'Diana'?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "customer",
      "details",
      "that",
      "include",
      "the",
      "name",
      "'",
      "Diana",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT Customer_Details FROM Customers WHERE Customer_Details LIKE '%Diana%'",
    "query_toks": [
      "SELECT",
      "Customer_Details",
      "FROM",
      "Customers",
      "WHERE",
      "Customer_Details",
      "LIKE",
      "'",
      "%",
      "Diana",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "customer_details",
      "from",
      "customers",
      "where",
      "customer_details",
      "like",
      "'",
      "%",
      "diana",
      "%",
      "'"
    ],
    "question": "I'm looking for customers whose details mention 'Diana'.",
    "question_toks": [
      "I",
      "'",
      "m",
      "looking",
      "for",
      "customers",
      "whose",
      "details",
      "mention",
      "'",
      "Diana",
      "'",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT Customer_Details FROM Customers WHERE Customer_Details LIKE '%Diana%'",
    "query_toks": [
      "SELECT",
      "Customer_Details",
      "FROM",
      "Customers",
      "WHERE",
      "Customer_Details",
      "LIKE",
      "'",
      "%",
      "Diana",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "customer_details",
      "from",
      "customers",
      "where",
      "customer_details",
      "like",
      "'",
      "%",
      "diana",
      "%",
      "'"
    ],
    "question": "Please retrieve any customer information that has 'Diana' in it.",
    "question_toks": [
      "Please",
      "retrieve",
      "any",
      "customer",
      "information",
      "that",
      "has",
      "'",
      "Diana",
      "'",
      "in",
      "it",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT Customer_Details FROM Customers WHERE Customer_Details LIKE '%Hanna%'",
    "query_toks": [
      "SELECT",
      "Customer_Details",
      "FROM",
      "Customers",
      "WHERE",
      "Customer_Details",
      "LIKE",
      "'",
      "%",
      "Hanna",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "customer_details",
      "from",
      "customers",
      "where",
      "customer_details",
      "like",
      "'",
      "%",
      "hanna",
      "%",
      "'"
    ],
    "question": "Could you show me customer details that contain the name 'Hanna'?",
    "question_toks": [
      "Could",
      "you",
      "show",
      "me",
      "customer",
      "details",
      "that",
      "contain",
      "the",
      "name",
      "'",
      "Hanna",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT Customer_Details FROM Customers WHERE Customer_Details LIKE '%Hanna%'",
    "query_toks": [
      "SELECT",
      "Customer_Details",
      "FROM",
      "Customers",
      "WHERE",
      "Customer_Details",
      "LIKE",
      "'",
      "%",
      "Hanna",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "customer_details",
      "from",
      "customers",
      "where",
      "customer_details",
      "like",
      "'",
      "%",
      "hanna",
      "%",
      "'"
    ],
    "question": "I need to see customer information that includes 'Hanna'.",
    "question_toks": [
      "I",
      "need",
      "to",
      "see",
      "customer",
      "information",
      "that",
      "includes",
      "'",
      "Hanna",
      "'",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT Customer_Details FROM Customers WHERE Customer_Details LIKE '%Hanna%'",
    "query_toks": [
      "SELECT",
      "Customer_Details",
      "FROM",
      "Customers",
      "WHERE",
      "Customer_Details",
      "LIKE",
      "'",
      "%",
      "Hanna",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "customer_details",
      "from",
      "customers",
      "where",
      "customer_details",
      "like",
      "'",
      "%",
      "hanna",
      "%",
      "'"
    ],
    "question": "Please find any customer details that mention 'Hanna'.",
    "question_toks": [
      "Please",
      "find",
      "any",
      "customer",
      "details",
      "that",
      "mention",
      "'",
      "Hanna",
      "'",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT Staff_Details FROM Staff WHERE Staff_Details LIKE '%Diana%'",
    "query_toks": [
      "SELECT",
      "Staff_Details",
      "FROM",
      "Staff",
      "WHERE",
      "Staff_Details",
      "LIKE",
      "'",
      "%",
      "Diana",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "staff_details",
      "from",
      "staff",
      "where",
      "staff_details",
      "like",
      "'",
      "%",
      "diana",
      "%",
      "'"
    ],
    "question": "Can you look up staff details that include the name 'Diana'?",
    "question_toks": [
      "Can",
      "you",
      "look",
      "up",
      "staff",
      "details",
      "that",
      "include",
      "the",
      "name",
      "'",
      "Diana",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT Staff_Details FROM Staff WHERE Staff_Details LIKE '%Diana%'",
    "query_toks": [
      "SELECT",
      "Staff_Details",
      "FROM",
      "Staff",
      "WHERE",
      "Staff_Details",
      "LIKE",
      "'",
      "%",
      "Diana",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "staff_details",
      "from",
      "staff",
      "where",
      "staff_details",
      "like",
      "'",
      "%",
      "diana",
      "%",
      "'"
    ],
    "question": "I'm interested in staff information that mentions 'Diana'.",
    "question_toks": [
      "I",
      "'",
      "m",
      "interested",
      "in",
      "staff",
      "information",
      "that",
      "mentions",
      "'",
      "Diana",
      "'",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT Staff_Details FROM Staff WHERE Staff_Details LIKE '%Diana%'",
    "query_toks": [
      "SELECT",
      "Staff_Details",
      "FROM",
      "Staff",
      "WHERE",
      "Staff_Details",
      "LIKE",
      "'",
      "%",
      "Diana",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "staff_details",
      "from",
      "staff",
      "where",
      "staff_details",
      "like",
      "'",
      "%",
      "diana",
      "%",
      "'"
    ],
    "question": "Please retrieve any staff details that have 'Diana' in them.",
    "question_toks": [
      "Please",
      "retrieve",
      "any",
      "staff",
      "details",
      "that",
      "have",
      "'",
      "Diana",
      "'",
      "in",
      "them",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which flight IDs have a distance greater than 1000?",
    "question_toks": [
      "Which",
      "flight",
      "IDs",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you list the IDs of flights that cover more than 1000 miles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "IDs",
      "of",
      "flights",
      "that",
      "cover",
      "more",
      "than",
      "1000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the flight IDs for distances exceeding 1000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "flight",
      "IDs",
      "for",
      "distances",
      "exceeding",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "What flight IDs are available for less than 300?",
    "question_toks": [
      "What",
      "flight",
      "IDs",
      "are",
      "available",
      "for",
      "less",
      "than",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Can you provide the IDs of flights that cost under 300?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "IDs",
      "of",
      "flights",
      "that",
      "cost",
      "under",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Which flight IDs have prices lower than 300?",
    "question_toks": [
      "Which",
      "flight",
      "IDs",
      "have",
      "prices",
      "lower",
      "than",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the flight IDs for flights heading to Chicago?",
    "question_toks": [
      "What",
      "are",
      "the",
      "flight",
      "IDs",
      "for",
      "flights",
      "heading",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you list the IDs of flights that go to Chicago?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "IDs",
      "of",
      "flights",
      "that",
      "go",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Which flight IDs are assigned to destinations in Chicago?",
    "question_toks": [
      "Which",
      "flight",
      "IDs",
      "are",
      "assigned",
      "to",
      "destinations",
      "in",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which flight IDs are associated with distances greater than 1000?",
    "question_toks": [
      "Which",
      "flight",
      "IDs",
      "are",
      "associated",
      "with",
      "distances",
      "greater",
      "than",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you list the aid values for flights that have a distance exceeding 1000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "aid",
      "values",
      "for",
      "flights",
      "that",
      "have",
      "a",
      "distance",
      "exceeding",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the aid numbers for flights that cover more than 1000 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aid",
      "numbers",
      "for",
      "flights",
      "that",
      "cover",
      "more",
      "than",
      "1000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "What flight IDs are available for prices less than 300?",
    "question_toks": [
      "What",
      "flight",
      "IDs",
      "are",
      "available",
      "for",
      "prices",
      "less",
      "than",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Can you provide the aid values for flights that cost under 300?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "aid",
      "values",
      "for",
      "flights",
      "that",
      "cost",
      "under",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Which flight IDs correspond to prices that are below 300?",
    "question_toks": [
      "Which",
      "flight",
      "IDs",
      "correspond",
      "to",
      "prices",
      "that",
      "are",
      "below",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the aid values for flights heading to Chicago?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aid",
      "values",
      "for",
      "flights",
      "heading",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you list the flight IDs for flights that have Chicago as their destination?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "flight",
      "IDs",
      "for",
      "flights",
      "that",
      "have",
      "Chicago",
      "as",
      "their",
      "destination",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Which flights are identified by their aid numbers that travel to Chicago?",
    "question_toks": [
      "Which",
      "flights",
      "are",
      "identified",
      "by",
      "their",
      "aid",
      "numbers",
      "that",
      "travel",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "How many flights have a distance between 1000 and 5000?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "have",
      "a",
      "distance",
      "between",
      "1000",
      "and",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Can you tell me the number of flights that fall within the distance range of 1000 to 5000?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "number",
      "of",
      "flights",
      "that",
      "fall",
      "within",
      "the",
      "distance",
      "range",
      "of",
      "1000",
      "to",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What is the count of flights with distances ranging from 1000 to 5000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "flights",
      "with",
      "distances",
      "ranging",
      "from",
      "1000",
      "to",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What is the total number of aircraft with a distance less than 5000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "aircraft",
      "with",
      "a",
      "distance",
      "less",
      "than",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "How many aircraft have a distance that is under 5000?",
    "question_toks": [
      "How",
      "many",
      "aircraft",
      "have",
      "a",
      "distance",
      "that",
      "is",
      "under",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you provide the count of aircraft with distances below 5000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "count",
      "of",
      "aircraft",
      "with",
      "distances",
      "below",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance > 1000 AND distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000",
      "AND",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value",
      "and",
      "distance",
      "<",
      "value"
    ],
    "question": "How many flights have distances that are greater than 1000 but less than 5000?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "have",
      "distances",
      "that",
      "are",
      "greater",
      "than",
      "1000",
      "but",
      "less",
      "than",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance > 1000 AND distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000",
      "AND",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value",
      "and",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you tell me the number of flights with distances exceeding 1000 and below 5000?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "number",
      "of",
      "flights",
      "with",
      "distances",
      "exceeding",
      "1000",
      "and",
      "below",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance > 1000 AND distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000",
      "AND",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value",
      "and",
      "distance",
      "<",
      "value"
    ],
    "question": "What is the count of flights where the distance is between 1000 and 5000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "flights",
      "where",
      "the",
      "distance",
      "is",
      "between",
      "1000",
      "and",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance = 3383",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "=",
      "3383"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "=",
      "value"
    ],
    "question": "What is the name and distance of the aircraft that has a distance of 3383?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "distance",
      "of",
      "the",
      "aircraft",
      "that",
      "has",
      "a",
      "distance",
      "of",
      "3383",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance = 3383",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "=",
      "3383"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "=",
      "value"
    ],
    "question": "Can you provide the name and distance for the aircraft with a distance measurement of 3383?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "name",
      "and",
      "distance",
      "for",
      "the",
      "aircraft",
      "with",
      "a",
      "distance",
      "measurement",
      "of",
      "3383",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance = 3383",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "=",
      "3383"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "=",
      "value"
    ],
    "question": "Show me the name and distance for the aircraft that has a distance of 3383.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "name",
      "and",
      "distance",
      "for",
      "the",
      "aircraft",
      "that",
      "has",
      "a",
      "distance",
      "of",
      "3383",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the name and price of flights that go to Chicago?",
    "question_toks": [
      "What",
      "are",
      "the",
      "name",
      "and",
      "price",
      "of",
      "flights",
      "that",
      "go",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you list the name and price for flights heading to Chicago?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "name",
      "and",
      "price",
      "for",
      "flights",
      "heading",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Show me the name and price of flights with Chicago as their destination.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "name",
      "and",
      "price",
      "of",
      "flights",
      "with",
      "Chicago",
      "as",
      "their",
      "destination",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "What are the names and salaries of employees who earn more than 150,000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "who",
      "earn",
      "more",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names and salaries of employees with salaries exceeding 150,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "with",
      "salaries",
      "exceeding",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the names and salaries of employees who have a salary greater than 150,000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "who",
      "have",
      "a",
      "salary",
      "greater",
      "than",
      "150",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What are the names and distances of aircraft that can travel less than 8000 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "less",
      "than",
      "8000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you list the aircraft names along with their distances for those that have a range under 8000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "aircraft",
      "names",
      "along",
      "with",
      "their",
      "distances",
      "for",
      "those",
      "that",
      "have",
      "a",
      "range",
      "under",
      "8000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Show me the names and distances of all aircraft with a maximum distance of less than 8000.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "all",
      "aircraft",
      "with",
      "a",
      "maximum",
      "distance",
      "of",
      "less",
      "than",
      "8000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary exceeding 100,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "exceeding",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names and salaries of employees who earn more than 100,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "who",
      "earn",
      "more",
      "than",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the names and salaries of employees whose salary is above 100,000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "whose",
      "salary",
      "is",
      "above",
      "100",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, price FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "What are the destinations and prices for flights that cost less than 300?",
    "question_toks": [
      "What",
      "are",
      "the",
      "destinations",
      "and",
      "prices",
      "for",
      "flights",
      "that",
      "cost",
      "less",
      "than",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, price FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Can you give me the flight destinations along with their prices for those under 300?",
    "question_toks": [
      "Can",
      "you",
      "give",
      "me",
      "the",
      "flight",
      "destinations",
      "along",
      "with",
      "their",
      "prices",
      "for",
      "those",
      "under",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, price FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Show me the destinations and prices of flights that are priced below 300.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "destinations",
      "and",
      "prices",
      "of",
      "flights",
      "that",
      "are",
      "priced",
      "below",
      "300",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the minimum, average, and maximum distances of flights?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distances",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you provide the lowest, average, and highest flight distances?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "flight",
      "distances",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "Show me the minimum, average, and maximum distances for flights.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distances",
      "for",
      "flights",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "What is the minimum, average, and maximum price of flights?",
    "question_toks": [
      "What",
      "is",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "price",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you tell me the lowest, average, and highest flight prices?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "flight",
      "prices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "List the minimum, average, and maximum prices for flights.",
    "question_toks": [
      "List",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "prices",
      "for",
      "flights",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the minimum, average, and maximum aircraft IDs for flights?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "aircraft",
      "IDs",
      "for",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you provide the lowest, average, and highest aircraft IDs from the flights?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "aircraft",
      "IDs",
      "from",
      "the",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "Show me the minimum, average, and maximum aircraft IDs associated with the flights.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "aircraft",
      "IDs",
      "associated",
      "with",
      "the",
      "flights",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the minimum, average, and maximum distances of flights?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distances",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you provide the lowest, average, and highest flight distances?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "flight",
      "distances",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "What is the range of distances for the flights, including the minimum, average, and maximum?",
    "question_toks": [
      "What",
      "is",
      "the",
      "range",
      "of",
      "distances",
      "for",
      "the",
      "flights",
      ",",
      "including",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the lowest, average, and highest prices of flights?",
    "question_toks": [
      "What",
      "are",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "prices",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you tell me the minimum, average, and maximum flight prices?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "flight",
      "prices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "What is the price range for the flights, including the minimum, average, and maximum?",
    "question_toks": [
      "What",
      "is",
      "the",
      "price",
      "range",
      "for",
      "the",
      "flights",
      ",",
      "including",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the minimum, average, and maximum aircraft IDs associated with flights?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "aircraft",
      "IDs",
      "associated",
      "with",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you provide the lowest, average, and highest aircraft IDs for the flights?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "aircraft",
      "IDs",
      "for",
      "the",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "What is the range of aircraft IDs for the flights, including the minimum, average, and maximum?",
    "question_toks": [
      "What",
      "is",
      "the",
      "range",
      "of",
      "aircraft",
      "IDs",
      "for",
      "the",
      "flights",
      ",",
      "including",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which aircraft ID and name correspond to the longest flight distance from Los Angeles?",
    "question_toks": [
      "Which",
      "aircraft",
      "ID",
      "and",
      "name",
      "correspond",
      "to",
      "the",
      "longest",
      "flight",
      "distance",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the aircraft ID and name for the flight with the greatest distance originating from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "for",
      "the",
      "flight",
      "with",
      "the",
      "greatest",
      "distance",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the aircraft ID and name associated with the furthest flight departing from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "associated",
      "with",
      "the",
      "furthest",
      "flight",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the aircraft ID and name of the aircraft with the maximum flight range?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "of",
      "the",
      "aircraft",
      "with",
      "the",
      "maximum",
      "flight",
      "range",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which aircraft has the highest distance capability, and what is its ID and name?",
    "question_toks": [
      "Which",
      "aircraft",
      "has",
      "the",
      "highest",
      "distance",
      "capability",
      ",",
      "and",
      "what",
      "is",
      "its",
      "ID",
      "and",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide the aircraft ID and name for the aircraft that can fly the farthest distance?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "for",
      "the",
      "aircraft",
      "that",
      "can",
      "fly",
      "the",
      "farthest",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE destination = 'Washington D.C.' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the aircraft ID and name for the longest flight to Washington D.C.?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "for",
      "the",
      "longest",
      "flight",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE destination = 'Washington D.C.' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which aircraft ID and name correspond to the farthest flight heading to Washington D.C.?",
    "question_toks": [
      "Which",
      "aircraft",
      "ID",
      "and",
      "name",
      "correspond",
      "to",
      "the",
      "farthest",
      "flight",
      "heading",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE destination = 'Washington D.C.' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you identify the aircraft ID and name associated with the maximum distance flight to Washington D.C.?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "associated",
      "with",
      "the",
      "maximum",
      "distance",
      "flight",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which aircraft ID and name correspond to the longest flight distance from Los Angeles?",
    "question_toks": [
      "Which",
      "aircraft",
      "ID",
      "and",
      "name",
      "correspond",
      "to",
      "the",
      "longest",
      "flight",
      "distance",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you identify the aircraft ID and name for the flight with the greatest distance originating from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "for",
      "the",
      "flight",
      "with",
      "the",
      "greatest",
      "distance",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the aircraft ID and name of the flight that has the maximum distance from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "of",
      "the",
      "flight",
      "that",
      "has",
      "the",
      "maximum",
      "distance",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the aircraft ID and name for the aircraft with the longest flight range?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "for",
      "the",
      "aircraft",
      "with",
      "the",
      "longest",
      "flight",
      "range",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the aircraft ID and name of the plane that can fly the farthest?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "of",
      "the",
      "plane",
      "that",
      "can",
      "fly",
      "the",
      "farthest",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which aircraft has the highest distance capability and what is its ID and name?",
    "question_toks": [
      "Which",
      "aircraft",
      "has",
      "the",
      "highest",
      "distance",
      "capability",
      "and",
      "what",
      "is",
      "its",
      "ID",
      "and",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "Who is the employee with the highest salary and what is their name?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "employee",
      "with",
      "the",
      "highest",
      "salary",
      "and",
      "what",
      "is",
      "their",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide the name of the employee that earns the most?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "name",
      "of",
      "the",
      "employee",
      "that",
      "earns",
      "the",
      "most",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the employee with the largest salary?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "employee",
      "with",
      "the",
      "largest",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the names of the three aircraft with the shortest distances?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "three",
      "aircraft",
      "with",
      "the",
      "shortest",
      "distances",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you list the top three aircraft based on their distance in ascending order?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "top",
      "three",
      "aircraft",
      "based",
      "on",
      "their",
      "distance",
      "in",
      "ascending",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Show me the names of the three closest aircraft by distance.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "names",
      "of",
      "the",
      "three",
      "closest",
      "aircraft",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 4000 ORDER BY distance ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "4000",
      "ORDER",
      "BY",
      "distance",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      "order",
      "by",
      "distance",
      "asc"
    ],
    "question": "Which aircraft have a distance of less than 4000 and what are their names?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "of",
      "less",
      "than",
      "4000",
      "and",
      "what",
      "are",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 4000 ORDER BY distance ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "4000",
      "ORDER",
      "BY",
      "distance",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      "order",
      "by",
      "distance",
      "asc"
    ],
    "question": "List the names of aircraft that can travel less than 4000 miles, ordered by distance.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "less",
      "than",
      "4000",
      "miles",
      ",",
      "ordered",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 4000 ORDER BY distance ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "4000",
      "ORDER",
      "BY",
      "distance",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      "order",
      "by",
      "distance",
      "asc"
    ],
    "question": "Can you provide the names of aircraft with a distance under 4000, sorted by their distance?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "aircraft",
      "with",
      "a",
      "distance",
      "under",
      "4000",
      ",",
      "sorted",
      "by",
      "their",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance DESC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the names of the three aircraft with the longest distances?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "three",
      "aircraft",
      "with",
      "the",
      "longest",
      "distances",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance DESC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you list the top three aircraft based on their distance in descending order?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "top",
      "three",
      "aircraft",
      "based",
      "on",
      "their",
      "distance",
      "in",
      "descending",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance DESC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Show me the names of the three furthest aircraft by distance.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "names",
      "of",
      "the",
      "three",
      "furthest",
      "aircraft",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft) AND aid IN (SELECT aid FROM Flight WHERE origin = 'Los Angeles')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")",
      "AND",
      "aid",
      "IN",
      "(",
      "SELECT",
      "aid",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")",
      "and",
      "aid",
      "in",
      "(",
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      ")"
    ],
    "question": "Which aircraft names have a distance greater than the average distance of all aircraft and are associated with flights originating from Los Angeles?",
    "question_toks": [
      "Which",
      "aircraft",
      "names",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "the",
      "average",
      "distance",
      "of",
      "all",
      "aircraft",
      "and",
      "are",
      "associated",
      "with",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft) AND aid IN (SELECT aid FROM Flight WHERE origin = 'Los Angeles')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")",
      "AND",
      "aid",
      "IN",
      "(",
      "SELECT",
      "aid",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")",
      "and",
      "aid",
      "in",
      "(",
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      ")"
    ],
    "question": "Can you list the names of aircraft that exceed the average distance and are linked to flights from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "exceed",
      "the",
      "average",
      "distance",
      "and",
      "are",
      "linked",
      "to",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft) AND aid IN (SELECT aid FROM Flight WHERE origin = 'Los Angeles')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")",
      "AND",
      "aid",
      "IN",
      "(",
      "SELECT",
      "aid",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")",
      "and",
      "aid",
      "in",
      "(",
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      ")"
    ],
    "question": "What are the names of the aircraft that have a longer distance than the average and are related to flights departing from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "that",
      "have",
      "a",
      "longer",
      "distance",
      "than",
      "the",
      "average",
      "and",
      "are",
      "related",
      "to",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft) AND aid IN (SELECT aid FROM Flight WHERE destination = 'Chicago')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")",
      "AND",
      "aid",
      "IN",
      "(",
      "SELECT",
      "aid",
      "FROM",
      "Flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")",
      "and",
      "aid",
      "in",
      "(",
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'",
      ")"
    ],
    "question": "What aircraft names have a distance greater than the average distance and are connected to flights going to Chicago?",
    "question_toks": [
      "What",
      "aircraft",
      "names",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "the",
      "average",
      "distance",
      "and",
      "are",
      "connected",
      "to",
      "flights",
      "going",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft) AND aid IN (SELECT aid FROM Flight WHERE destination = 'Chicago')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")",
      "AND",
      "aid",
      "IN",
      "(",
      "SELECT",
      "aid",
      "FROM",
      "Flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")",
      "and",
      "aid",
      "in",
      "(",
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'",
      ")"
    ],
    "question": "Can you provide the names of aircraft that exceed the average distance and are tied to flights arriving in Chicago?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "exceed",
      "the",
      "average",
      "distance",
      "and",
      "are",
      "tied",
      "to",
      "flights",
      "arriving",
      "in",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft) AND aid IN (SELECT aid FROM Flight WHERE destination = 'Chicago')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")",
      "AND",
      "aid",
      "IN",
      "(",
      "SELECT",
      "aid",
      "FROM",
      "Flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")",
      "and",
      "aid",
      "in",
      "(",
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'",
      ")"
    ],
    "question": "Which aircraft have a longer distance than average and are associated with flights that head to Chicago?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "longer",
      "distance",
      "than",
      "average",
      "and",
      "are",
      "associated",
      "with",
      "flights",
      "that",
      "head",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft) AND aid IN (SELECT aid FROM Flight WHERE distance < 3000)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")",
      "AND",
      "aid",
      "IN",
      "(",
      "SELECT",
      "aid",
      "FROM",
      "Flight",
      "WHERE",
      "distance",
      "<",
      "3000",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")",
      "and",
      "aid",
      "in",
      "(",
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      "<",
      "value",
      ")"
    ],
    "question": "Which aircraft names have a distance greater than the average and are linked to flights that have a distance of less than 3000?",
    "question_toks": [
      "Which",
      "aircraft",
      "names",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "the",
      "average",
      "and",
      "are",
      "linked",
      "to",
      "flights",
      "that",
      "have",
      "a",
      "distance",
      "of",
      "less",
      "than",
      "3000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft) AND aid IN (SELECT aid FROM Flight WHERE distance < 3000)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")",
      "AND",
      "aid",
      "IN",
      "(",
      "SELECT",
      "aid",
      "FROM",
      "Flight",
      "WHERE",
      "distance",
      "<",
      "3000",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")",
      "and",
      "aid",
      "in",
      "(",
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      "<",
      "value",
      ")"
    ],
    "question": "Can you list the names of aircraft that exceed the average distance and are related to flights covering less than 3000 miles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "exceed",
      "the",
      "average",
      "distance",
      "and",
      "are",
      "related",
      "to",
      "flights",
      "covering",
      "less",
      "than",
      "3000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft) AND aid IN (SELECT aid FROM Flight WHERE distance < 3000)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")",
      "AND",
      "aid",
      "IN",
      "(",
      "SELECT",
      "aid",
      "FROM",
      "Flight",
      "WHERE",
      "distance",
      "<",
      "3000",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")",
      "and",
      "aid",
      "in",
      "(",
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      "<",
      "value",
      ")"
    ],
    "question": "What are the names of the aircraft that are longer than average and are associated with shorter flights?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "that",
      "are",
      "longer",
      "than",
      "average",
      "and",
      "are",
      "associated",
      "with",
      "shorter",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 6000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "6000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aircraft have a distance capability greater than 6000?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "capability",
      "greater",
      "than",
      "6000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 6000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "6000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you list the names of aircraft that can fly more than 6000 miles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "fly",
      "more",
      "than",
      "6000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 6000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "6000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the names of aircraft with a distance exceeding 6000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "aircraft",
      "with",
      "a",
      "distance",
      "exceeding",
      "6000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT distance FROM Aircraft WHERE name = 'Boeing 737-800')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "distance",
      "FROM",
      "Aircraft",
      "WHERE",
      "name",
      "=",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "=",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ")"
    ],
    "question": "Which aircraft are capable of flying further than the Boeing 737-800?",
    "question_toks": [
      "Which",
      "aircraft",
      "are",
      "capable",
      "of",
      "flying",
      "further",
      "than",
      "the",
      "Boeing",
      "737",
      "-",
      "800",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT distance FROM Aircraft WHERE name = 'Boeing 737-800')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "distance",
      "FROM",
      "Aircraft",
      "WHERE",
      "name",
      "=",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "=",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ")"
    ],
    "question": "Can you identify aircraft that have a greater distance than the Boeing 737-800?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "aircraft",
      "that",
      "have",
      "a",
      "greater",
      "distance",
      "than",
      "the",
      "Boeing",
      "737",
      "-",
      "800",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT distance FROM Aircraft WHERE name = 'Boeing 737-800')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "distance",
      "FROM",
      "Aircraft",
      "WHERE",
      "name",
      "=",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "=",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ")"
    ],
    "question": "What aircraft exceed the distance of the Boeing 737-800?",
    "question_toks": [
      "What",
      "aircraft",
      "exceed",
      "the",
      "distance",
      "of",
      "the",
      "Boeing",
      "737",
      "-",
      "800",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT MAX(distance) FROM Aircraft) - 1000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")",
      "-",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")",
      "-",
      "value"
    ],
    "question": "What are the names of aircraft that can fly within 1000 miles of the maximum distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "fly",
      "within",
      "1000",
      "miles",
      "of",
      "the",
      "maximum",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT MAX(distance) FROM Aircraft) - 1000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")",
      "-",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")",
      "-",
      "value"
    ],
    "question": "Can you provide a list of aircraft that have a distance close to the highest distance capability?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "list",
      "of",
      "aircraft",
      "that",
      "have",
      "a",
      "distance",
      "close",
      "to",
      "the",
      "highest",
      "distance",
      "capability",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT MAX(distance) FROM Aircraft) - 1000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")",
      "-",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")",
      "-",
      "value"
    ],
    "question": "Which aircraft have a distance that is less than 1000 miles from the maximum distance?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "that",
      "is",
      "less",
      "than",
      "1000",
      "miles",
      "from",
      "the",
      "maximum",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees earn more than 150,000?",
    "question_toks": [
      "Which",
      "employees",
      "earn",
      "more",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names of employees with salaries over 150,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "with",
      "salaries",
      "over",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees that have a salary exceeding 150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "that",
      "have",
      "a",
      "salary",
      "exceeding",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees with salaries greater than 120,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "salaries",
      "greater",
      "than",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names of employees that earn more than 120,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "employees",
      "that",
      "earn",
      "more",
      "than",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the employees whose salaries exceed 120,000.",
    "question_toks": [
      "List",
      "the",
      "employees",
      "whose",
      "salaries",
      "exceed",
      "120",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have salaries above 101,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "salaries",
      "above",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you tell me the names of employees earning more than 101,000?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "names",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees that have a salary higher than 101,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "that",
      "have",
      "a",
      "salary",
      "higher",
      "than",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees earn more than $150,000?",
    "question_toks": [
      "Which",
      "employees",
      "earn",
      "more",
      "than",
      "$",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names of employees with salaries exceeding $150,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "with",
      "salaries",
      "exceeding",
      "$",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees that have a salary greater than $150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "that",
      "have",
      "a",
      "salary",
      "greater",
      "than",
      "$",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "What are the names of employees with salaries over $120,000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "employees",
      "with",
      "salaries",
      "over",
      "$",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you identify the employees earning above $120,000?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "employees",
      "earning",
      "above",
      "$",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees that receive more than $120,000 in salary?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "that",
      "receive",
      "more",
      "than",
      "$",
      "120",
      ",",
      "000",
      "in",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary BETWEEN 100000 AND 200000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      "BETWEEN",
      "100000",
      "AND",
      "200000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Which employees have a salary between $100,000 and $200,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "between",
      "$",
      "100",
      ",",
      "000",
      "and",
      "$",
      "200",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary BETWEEN 100000 AND 200000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      "BETWEEN",
      "100000",
      "AND",
      "200000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Can you provide the names of employees whose salaries fall within the $100,000 to $200,000 range?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "employees",
      "whose",
      "salaries",
      "fall",
      "within",
      "the",
      "$",
      "100",
      ",",
      "000",
      "to",
      "$",
      "200",
      ",",
      "000",
      "range",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary BETWEEN 100000 AND 200000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      "BETWEEN",
      "100000",
      "AND",
      "200000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Who are the employees that earn within the salary range of $100,000 to $200,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "that",
      "earn",
      "within",
      "the",
      "salary",
      "range",
      "of",
      "$",
      "100",
      ",",
      "000",
      "to",
      "$",
      "200",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "What is the salary of James Smith?",
    "question_toks": [
      "What",
      "is",
      "the",
      "salary",
      "of",
      "James",
      "Smith",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "Can you tell me how much James Smith earns?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "how",
      "much",
      "James",
      "Smith",
      "earns",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "I'm looking for the salary details of James Smith.",
    "question_toks": [
      "I",
      "'",
      "m",
      "looking",
      "for",
      "the",
      "salary",
      "details",
      "of",
      "James",
      "Smith",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'Mary Johnson'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "Mary",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "mary",
      "johnson",
      "'"
    ],
    "question": "What is the salary of Mary Johnson?",
    "question_toks": [
      "What",
      "is",
      "the",
      "salary",
      "of",
      "Mary",
      "Johnson",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'Mary Johnson'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "Mary",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "mary",
      "johnson",
      "'"
    ],
    "question": "Can you provide the earnings of Mary Johnson?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "earnings",
      "of",
      "Mary",
      "Johnson",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'Mary Johnson'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "Mary",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "mary",
      "johnson",
      "'"
    ],
    "question": "I'm interested in knowing how much Mary Johnson makes.",
    "question_toks": [
      "I",
      "'",
      "m",
      "interested",
      "in",
      "knowing",
      "how",
      "much",
      "Mary",
      "Johnson",
      "makes",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'John Williams'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "John",
      "Williams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "john",
      "williams",
      "'"
    ],
    "question": "What salary does John Williams receive?",
    "question_toks": [
      "What",
      "salary",
      "does",
      "John",
      "Williams",
      "receive",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'John Williams'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "John",
      "Williams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "john",
      "williams",
      "'"
    ],
    "question": "Can you tell me the income of John Williams?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "income",
      "of",
      "John",
      "Williams",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'John Williams'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "John",
      "Williams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "john",
      "williams",
      "'"
    ],
    "question": "I'm curious about John Williams' salary.",
    "question_toks": [
      "I",
      "'",
      "m",
      "curious",
      "about",
      "John",
      "Williams",
      "'",
      "salary",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "What is the salary of James Smith according to the employee table?",
    "question_toks": [
      "What",
      "is",
      "the",
      "salary",
      "of",
      "James",
      "Smith",
      "according",
      "to",
      "the",
      "employee",
      "table",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "Can you tell me the salary for the employee named James Smith?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "salary",
      "for",
      "the",
      "employee",
      "named",
      "James",
      "Smith",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "Find the salary of the employee with the name James Smith.",
    "question_toks": [
      "Find",
      "the",
      "salary",
      "of",
      "the",
      "employee",
      "with",
      "the",
      "name",
      "James",
      "Smith",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'Mary Johnson'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "Mary",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "mary",
      "johnson",
      "'"
    ],
    "question": "What is the salary of Mary Johnson as listed in the employee database?",
    "question_toks": [
      "What",
      "is",
      "the",
      "salary",
      "of",
      "Mary",
      "Johnson",
      "as",
      "listed",
      "in",
      "the",
      "employee",
      "database",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'Mary Johnson'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "Mary",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "mary",
      "johnson",
      "'"
    ],
    "question": "Can you provide the salary of the employee named Mary Johnson?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "salary",
      "of",
      "the",
      "employee",
      "named",
      "Mary",
      "Johnson",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'Mary Johnson'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "Mary",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "mary",
      "johnson",
      "'"
    ],
    "question": "Retrieve the salary for the employee identified as Mary Johnson.",
    "question_toks": [
      "Retrieve",
      "the",
      "salary",
      "for",
      "the",
      "employee",
      "identified",
      "as",
      "Mary",
      "Johnson",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'John Williams'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "John",
      "Williams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "john",
      "williams",
      "'"
    ],
    "question": "What is John Williams' salary according to the employee records?",
    "question_toks": [
      "What",
      "is",
      "John",
      "Williams",
      "'",
      "salary",
      "according",
      "to",
      "the",
      "employee",
      "records",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'John Williams'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "John",
      "Williams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "john",
      "williams",
      "'"
    ],
    "question": "Can you find out the salary for the employee called John Williams?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "out",
      "the",
      "salary",
      "for",
      "the",
      "employee",
      "called",
      "John",
      "Williams",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'John Williams'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "John",
      "Williams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "john",
      "williams",
      "'"
    ],
    "question": "Look up the salary for the employee named John Williams.",
    "question_toks": [
      "Look",
      "up",
      "the",
      "salary",
      "for",
      "the",
      "employee",
      "named",
      "John",
      "Williams",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "What are the destinations for flights originating from Los Angeles, sorted by destination?",
    "question_toks": [
      "What",
      "are",
      "the",
      "destinations",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "by",
      "destination",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Can you list the destinations for flights that depart from Los Angeles, arranged in order?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "destinations",
      "for",
      "flights",
      "that",
      "depart",
      "from",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "in",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Show me the destinations for flights leaving Los Angeles, organized by the destination name.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "destinations",
      "for",
      "flights",
      "leaving",
      "Los",
      "Angeles",
      ",",
      "organized",
      "by",
      "the",
      "destination",
      "name",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, origin FROM flight WHERE origin = 'Los Angeles' ORDER BY aid",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "origin",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "aid"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "origin",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "aid"
    ],
    "question": "What are the aircraft IDs for flights that start from Los Angeles, sorted by aircraft ID?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aircraft",
      "IDs",
      "for",
      "flights",
      "that",
      "start",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "by",
      "aircraft",
      "ID",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, origin FROM flight WHERE origin = 'Los Angeles' ORDER BY aid",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "origin",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "aid"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "origin",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "aid"
    ],
    "question": "Can you provide the aircraft IDs for flights originating in Los Angeles, arranged in ascending order?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "aircraft",
      "IDs",
      "for",
      "flights",
      "originating",
      "in",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "in",
      "ascending",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, origin FROM flight WHERE origin = 'Los Angeles' ORDER BY aid",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "origin",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "aid"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "origin",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "aid"
    ],
    "question": "List the aircraft IDs for flights departing from Los Angeles, ordered by their IDs.",
    "question_toks": [
      "List",
      "the",
      "aircraft",
      "IDs",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      ",",
      "ordered",
      "by",
      "their",
      "IDs",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, price FROM flight WHERE origin = 'Los Angeles' ORDER BY price",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "price"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "price"
    ],
    "question": "What are the distances and prices for flights from Los Angeles, organized by price?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distances",
      "and",
      "prices",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      ",",
      "organized",
      "by",
      "price",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, price FROM flight WHERE origin = 'Los Angeles' ORDER BY price",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "price"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "price"
    ],
    "question": "Can you show me the distances and costs of flights departing from Los Angeles, sorted by their prices?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "distances",
      "and",
      "costs",
      "of",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "by",
      "their",
      "prices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, price FROM flight WHERE origin = 'Los Angeles' ORDER BY price",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "price"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "price"
    ],
    "question": "List the distances and prices for flights that leave Los Angeles, arranged in order of cost.",
    "question_toks": [
      "List",
      "the",
      "distances",
      "and",
      "prices",
      "for",
      "flights",
      "that",
      "leave",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "in",
      "order",
      "of",
      "cost",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination, price FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "What are the destinations and prices for flights departing from Los Angeles, sorted by destination?",
    "question_toks": [
      "What",
      "are",
      "the",
      "destinations",
      "and",
      "prices",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "by",
      "destination",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination, price FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Can you list the flight destinations and their prices from Los Angeles, arranged in order of destination?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "flight",
      "destinations",
      "and",
      "their",
      "prices",
      "from",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "in",
      "order",
      "of",
      "destination",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination, price FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Show me the destinations and prices for flights that leave from Los Angeles, organized by destination name.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "destinations",
      "and",
      "prices",
      "for",
      "flights",
      "that",
      "leave",
      "from",
      "Los",
      "Angeles",
      ",",
      "organized",
      "by",
      "destination",
      "name",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft ORDER BY distance",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "order",
      "by",
      "distance"
    ],
    "question": "What are the names and distances of the aircraft, sorted by their distance capabilities?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "the",
      "aircraft",
      ",",
      "sorted",
      "by",
      "their",
      "distance",
      "capabilities",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft ORDER BY distance",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "order",
      "by",
      "distance"
    ],
    "question": "Can you provide a list of aircraft names along with their distances, arranged in order of distance?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "list",
      "of",
      "aircraft",
      "names",
      "along",
      "with",
      "their",
      "distances",
      ",",
      "arranged",
      "in",
      "order",
      "of",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft ORDER BY distance",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "order",
      "by",
      "distance"
    ],
    "question": "Show me the distances and names of the aircraft, organized from shortest to longest distance.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "distances",
      "and",
      "names",
      "of",
      "the",
      "aircraft",
      ",",
      "organized",
      "from",
      "shortest",
      "to",
      "longest",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc"
    ],
    "question": "What are the names and salaries of employees, listed from highest to lowest salary?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      ",",
      "listed",
      "from",
      "highest",
      "to",
      "lowest",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc"
    ],
    "question": "Can you show me the employees along with their salaries, arranged in descending order of salary?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "employees",
      "along",
      "with",
      "their",
      "salaries",
      ",",
      "arranged",
      "in",
      "descending",
      "order",
      "of",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc"
    ],
    "question": "List the names and salaries of employees, sorted by salary in a decreasing manner.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      ",",
      "sorted",
      "by",
      "salary",
      "in",
      "a",
      "decreasing",
      "manner",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the destinations for flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "destinations",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "List the destinations of flights that depart from Los Angeles.",
    "question_toks": [
      "List",
      "the",
      "destinations",
      "of",
      "flights",
      "that",
      "depart",
      "from",
      "Los",
      "Angeles",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the flight destinations from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "flight",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the prices for flights that leave from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "prices",
      "for",
      "flights",
      "that",
      "leave",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you tell me the prices of flights originating in Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "prices",
      "of",
      "flights",
      "originating",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "List the ticket prices for flights departing from Los Angeles.",
    "question_toks": [
      "List",
      "the",
      "ticket",
      "prices",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What is the distance for flights that start from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "distance",
      "for",
      "flights",
      "that",
      "start",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the distances for flights originating in Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "distances",
      "for",
      "flights",
      "originating",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "List the distances of flights that depart from Los Angeles.",
    "question_toks": [
      "List",
      "the",
      "distances",
      "of",
      "flights",
      "that",
      "depart",
      "from",
      "Los",
      "Angeles",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, price FROM flight WHERE origin = 'Los Angeles' AND destination = 'Washington D.C.'",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'"
    ],
    "question": "What are the distance and price for flights from Los Angeles to Washington D.C.?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, price FROM flight WHERE origin = 'Los Angeles' AND destination = 'Washington D.C.'",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'"
    ],
    "question": "Can you provide the distance and cost of traveling from Los Angeles to Washington D.C.?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "distance",
      "and",
      "cost",
      "of",
      "traveling",
      "from",
      "Los",
      "Angeles",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, price FROM flight WHERE origin = 'Los Angeles' AND destination = 'Washington D.C.'",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'"
    ],
    "question": "Show me the distance and fares for flights originating in Los Angeles and heading to Washington D.C.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "distance",
      "and",
      "fares",
      "for",
      "flights",
      "originating",
      "in",
      "Los",
      "Angeles",
      "and",
      "heading",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Which aircraft have a distance capacity of less than 5000 miles?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "capacity",
      "of",
      "less",
      "than",
      "5000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "List the names and distances of aircraft that can travel under 5000 miles.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "under",
      "5000",
      "miles",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What are the aircraft names and their distances if they are capable of flying less than 5000 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aircraft",
      "names",
      "and",
      "their",
      "distances",
      "if",
      "they",
      "are",
      "capable",
      "of",
      "flying",
      "less",
      "than",
      "5000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees earning more than 150000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "earning",
      "more",
      "than",
      "150000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names and salaries of employees with a salary greater than 150000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "with",
      "a",
      "salary",
      "greater",
      "than",
      "150000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Show me the names and earnings of employees whose salary exceeds 150000.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "names",
      "and",
      "earnings",
      "of",
      "employees",
      "whose",
      "salary",
      "exceeds",
      "150000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM Flight WHERE origin = 'Los Angeles' AND destination = 'Sydney'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Sydney",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "sydney",
      "'"
    ],
    "question": "What is the average price of flights from Los Angeles to Sydney?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "of",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Sydney",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM Flight WHERE origin = 'Los Angeles' AND destination = 'Sydney'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Sydney",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "sydney",
      "'"
    ],
    "question": "Can you tell me the average cost of flights departing from Los Angeles to Sydney?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "average",
      "cost",
      "of",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "to",
      "Sydney",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM Flight WHERE origin = 'Los Angeles' AND destination = 'Sydney'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Sydney",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "sydney",
      "'"
    ],
    "question": "How much do flights from Los Angeles to Sydney typically cost on average?",
    "question_toks": [
      "How",
      "much",
      "do",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Sydney",
      "typically",
      "cost",
      "on",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM Flight WHERE origin = 'Los Angeles' AND destination = 'Washington D.C.'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'"
    ],
    "question": "What is the average fare for flights from Los Angeles to Washington D.C.?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "fare",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM Flight WHERE origin = 'Los Angeles' AND destination = 'Washington D.C.'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'"
    ],
    "question": "Could you provide the average price for flights going from Los Angeles to Washington D.C.?",
    "question_toks": [
      "Could",
      "you",
      "provide",
      "the",
      "average",
      "price",
      "for",
      "flights",
      "going",
      "from",
      "Los",
      "Angeles",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM Flight WHERE origin = 'Los Angeles' AND destination = 'Washington D.C.'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'"
    ],
    "question": "How much do flights from Los Angeles to Washington D.C. usually cost on average?",
    "question_toks": [
      "How",
      "much",
      "do",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "usually",
      "cost",
      "on",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM Flight WHERE origin = 'Los Angeles' AND destination = 'Boston'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Boston",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "boston",
      "'"
    ],
    "question": "What is the average ticket price for flights from Los Angeles to Boston?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "ticket",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Boston",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM Flight WHERE origin = 'Los Angeles' AND destination = 'Boston'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Boston",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "boston",
      "'"
    ],
    "question": "Can you tell me the average cost of flights from Los Angeles to Boston?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "average",
      "cost",
      "of",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Boston",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM Flight WHERE origin = 'Los Angeles' AND destination = 'Boston'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Boston",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "boston",
      "'"
    ],
    "question": "How much do flights from Los Angeles to Boston cost on average?",
    "question_toks": [
      "How",
      "much",
      "do",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Boston",
      "cost",
      "on",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the three closest destinations from Los Angeles based on distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "three",
      "closest",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "based",
      "on",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you list the top three destinations from Los Angeles that are nearest?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "top",
      "three",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "that",
      "are",
      "nearest",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Which three destinations from Los Angeles have the shortest flight distances?",
    "question_toks": [
      "Which",
      "three",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "have",
      "the",
      "shortest",
      "flight",
      "distances",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the prices for the three cheapest flights from Los Angeles based on distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "prices",
      "for",
      "the",
      "three",
      "cheapest",
      "flights",
      "from",
      "Los",
      "Angeles",
      "based",
      "on",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you provide the prices of the three closest flights departing from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "prices",
      "of",
      "the",
      "three",
      "closest",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Which three flights from Los Angeles are the cheapest in terms of distance?",
    "question_toks": [
      "Which",
      "three",
      "flights",
      "from",
      "Los",
      "Angeles",
      "are",
      "the",
      "cheapest",
      "in",
      "terms",
      "of",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the aircraft IDs for the three nearest flights from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aircraft",
      "IDs",
      "for",
      "the",
      "three",
      "nearest",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you tell me the IDs of the aircraft for the three closest flights departing from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "IDs",
      "of",
      "the",
      "aircraft",
      "for",
      "the",
      "three",
      "closest",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Which aircraft IDs correspond to the three shortest flights from Los Angeles?",
    "question_toks": [
      "Which",
      "aircraft",
      "IDs",
      "correspond",
      "to",
      "the",
      "three",
      "shortest",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the average distance and price for flights from Los Angeles to Chicago?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you tell me the average distance and cost of flights originating from Los Angeles to Chicago?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "of",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What is the average distance and price for flights departing from Los Angeles and heading to Chicago?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "and",
      "heading",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "What are the average distance and price for flights from Los Angeles to Dallas?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "Can you provide the average distance and cost of flights from Los Angeles to Dallas?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "of",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "What is the average distance and price for flights leaving Los Angeles and arriving in Dallas?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "leaving",
      "Los",
      "Angeles",
      "and",
      "arriving",
      "in",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Boston'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Boston",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "boston",
      "'"
    ],
    "question": "What are the average distance and price for flights from Los Angeles to Boston?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Boston",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Boston'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Boston",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "boston",
      "'"
    ],
    "question": "Can you tell me the average distance and cost of flights originating from Los Angeles to Boston?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "of",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "to",
      "Boston",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Boston'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Boston",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "boston",
      "'"
    ],
    "question": "What is the average distance and price for flights departing from Los Angeles and heading to Boston?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "and",
      "heading",
      "to",
      "Boston",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What is the average distance and price of flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "of",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the average distance and cost for flights that start in Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "that",
      "start",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the average values for distance and price for flights from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "values",
      "for",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What is the average distance and price of flights heading to Chicago?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "of",
      "flights",
      "heading",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you give me the average distance and cost for flights that arrive in Chicago?",
    "question_toks": [
      "Can",
      "you",
      "give",
      "me",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "that",
      "arrive",
      "in",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the average distance and price for flights with Chicago as the destination?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "with",
      "Chicago",
      "as",
      "the",
      "destination",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "What is the average distance and price of flights associated with aid 3?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "of",
      "flights",
      "associated",
      "with",
      "aid",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "Can you tell me the average distance and cost for flights linked to aid number 3?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "linked",
      "to",
      "aid",
      "number",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "What are the average values for distance and price for flights that have aid 3?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "values",
      "for",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "that",
      "have",
      "aid",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Which destination from Los Angeles has the highest number of flights?",
    "question_toks": [
      "Which",
      "destination",
      "from",
      "Los",
      "Angeles",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "What is the most popular flight destination from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "popular",
      "flight",
      "destination",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Can you tell me the destination with the most flights originating from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "destination",
      "with",
      "the",
      "most",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' AND price < 300 GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "price",
      "<",
      "300",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "price",
      "<",
      "value",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "What is the most frequently flown destination from Los Angeles that costs less than $300?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "frequently",
      "flown",
      "destination",
      "from",
      "Los",
      "Angeles",
      "that",
      "costs",
      "less",
      "than",
      "$",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' AND price < 300 GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "price",
      "<",
      "300",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "price",
      "<",
      "value",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Which affordable destination from Los Angeles has the highest flight frequency?",
    "question_toks": [
      "Which",
      "affordable",
      "destination",
      "from",
      "Los",
      "Angeles",
      "has",
      "the",
      "highest",
      "flight",
      "frequency",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' AND price < 300 GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "price",
      "<",
      "300",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "price",
      "<",
      "value",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Can you identify the most popular low-cost destination from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "most",
      "popular",
      "low",
      "-",
      "cost",
      "destination",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' AND distance < 3000 GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "distance",
      "<",
      "3000",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "distance",
      "<",
      "value",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Which destination from Los Angeles is the most popular and under 3000 miles away?",
    "question_toks": [
      "Which",
      "destination",
      "from",
      "Los",
      "Angeles",
      "is",
      "the",
      "most",
      "popular",
      "and",
      "under",
      "3000",
      "miles",
      "away",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' AND distance < 3000 GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "distance",
      "<",
      "3000",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "distance",
      "<",
      "value",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "What is the most frequently chosen destination from Los Angeles that is within 3000 miles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "frequently",
      "chosen",
      "destination",
      "from",
      "Los",
      "Angeles",
      "that",
      "is",
      "within",
      "3000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' AND distance < 3000 GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "distance",
      "<",
      "3000",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "distance",
      "<",
      "value",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Can you find the most commonly selected destination from Los Angeles that is less than 3000 miles in distance?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "the",
      "most",
      "commonly",
      "selected",
      "destination",
      "from",
      "Los",
      "Angeles",
      "that",
      "is",
      "less",
      "than",
      "3000",
      "miles",
      "in",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which flight IDs have a distance greater than 1000?",
    "question_toks": [
      "Which",
      "flight",
      "IDs",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you list the aid values for flights that cover more than 1000 miles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "aid",
      "values",
      "for",
      "flights",
      "that",
      "cover",
      "more",
      "than",
      "1000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the aid numbers for flights with distances exceeding 1000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aid",
      "numbers",
      "for",
      "flights",
      "with",
      "distances",
      "exceeding",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the names of aircraft that can fly more than 1500 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "fly",
      "more",
      "than",
      "1500",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you provide the names of planes that have a range greater than 1500?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "planes",
      "that",
      "have",
      "a",
      "range",
      "greater",
      "than",
      "1500",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aircraft are capable of flying distances over 1500 miles?",
    "question_toks": [
      "Which",
      "aircraft",
      "are",
      "capable",
      "of",
      "flying",
      "distances",
      "over",
      "1500",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees earning more than 150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "earning",
      "more",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names of employees with salaries above 150,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "with",
      "salaries",
      "above",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary that exceeds 150,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "that",
      "exceeds",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which flight IDs correspond to distances greater than 1000?",
    "question_toks": [
      "Which",
      "flight",
      "IDs",
      "correspond",
      "to",
      "distances",
      "greater",
      "than",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you list the aid values for flights that have a distance exceeding 1000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "aid",
      "values",
      "for",
      "flights",
      "that",
      "have",
      "a",
      "distance",
      "exceeding",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the aid numbers for flights with a distance greater than 1000 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aid",
      "numbers",
      "for",
      "flights",
      "with",
      "a",
      "distance",
      "greater",
      "than",
      "1000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the names of aircraft that can travel more than 1500 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "more",
      "than",
      "1500",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you provide the names of the aircraft with a distance capability over 1500?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "with",
      "a",
      "distance",
      "capability",
      "over",
      "1500",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aircraft have a distance capacity exceeding 1500 miles?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "capacity",
      "exceeding",
      "1500",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees earning more than 100,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "earning",
      "more",
      "than",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names of employees with salaries above 100,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "with",
      "salaries",
      "above",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary that exceeds 100,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "that",
      "exceeds",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "How many flights have a distance between 1000 and 5000 miles?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "have",
      "a",
      "distance",
      "between",
      "1000",
      "and",
      "5000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What is the total count of flights that fall within the distance range of 1000 to 5000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "count",
      "of",
      "flights",
      "that",
      "fall",
      "within",
      "the",
      "distance",
      "range",
      "of",
      "1000",
      "to",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Can you tell me the number of flights with distances ranging from 1000 to 5000?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "number",
      "of",
      "flights",
      "with",
      "distances",
      "ranging",
      "from",
      "1000",
      "to",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "How many aircraft have a distance less than 5000 miles?",
    "question_toks": [
      "How",
      "many",
      "aircraft",
      "have",
      "a",
      "distance",
      "less",
      "than",
      "5000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What is the total number of aircraft that have a distance below 5000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "aircraft",
      "that",
      "have",
      "a",
      "distance",
      "below",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you provide the count of aircraft with distances under 5000 miles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "count",
      "of",
      "aircraft",
      "with",
      "distances",
      "under",
      "5000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance > 1000 AND distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000",
      "AND",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value",
      "and",
      "distance",
      "<",
      "value"
    ],
    "question": "What is the count of flights that have a distance greater than 1000 and less than 5000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "flights",
      "that",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "1000",
      "and",
      "less",
      "than",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance > 1000 AND distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000",
      "AND",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value",
      "and",
      "distance",
      "<",
      "value"
    ],
    "question": "How many flights are there with distances exceeding 1000 but under 5000?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "are",
      "there",
      "with",
      "distances",
      "exceeding",
      "1000",
      "but",
      "under",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance > 1000 AND distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000",
      "AND",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value",
      "and",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you tell me how many flights fall within the distance range of greater than 1000 and less than 5000?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "how",
      "many",
      "flights",
      "fall",
      "within",
      "the",
      "distance",
      "range",
      "of",
      "greater",
      "than",
      "1000",
      "and",
      "less",
      "than",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What are the names and distances of aircraft that can travel less than 5000 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "less",
      "than",
      "5000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you list the aircraft names along with their distances if they have a range below 5000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "aircraft",
      "names",
      "along",
      "with",
      "their",
      "distances",
      "if",
      "they",
      "have",
      "a",
      "range",
      "below",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Show me the names and distances of all aircraft with a distance capability of under 5000.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "all",
      "aircraft",
      "with",
      "a",
      "distance",
      "capability",
      "of",
      "under",
      "5000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Which flights have an origin and destination with prices below 300?",
    "question_toks": [
      "Which",
      "flights",
      "have",
      "an",
      "origin",
      "and",
      "destination",
      "with",
      "prices",
      "below",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Can you provide the origin and destination of flights that cost less than 300?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "origin",
      "and",
      "destination",
      "of",
      "flights",
      "that",
      "cost",
      "less",
      "than",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "List the origin and destination of all flights that are priced under 300.",
    "question_toks": [
      "List",
      "the",
      "origin",
      "and",
      "destination",
      "of",
      "all",
      "flights",
      "that",
      "are",
      "priced",
      "under",
      "300",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees with a salary greater than 100000, and what are their names?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "a",
      "salary",
      "greater",
      "than",
      "100000",
      ",",
      "and",
      "what",
      "are",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you tell me the names of employees whose salaries exceed 100000?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "names",
      "of",
      "employees",
      "whose",
      "salaries",
      "exceed",
      "100000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Show me the names and salaries of all employees earning more than 100000.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "all",
      "employees",
      "earning",
      "more",
      "than",
      "100000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 7000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "7000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What are the names and distances of aircraft that can travel less than 7000 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "less",
      "than",
      "7000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 7000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "7000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "List the names and distances of all aircraft with a maximum distance capability below 7000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "all",
      "aircraft",
      "with",
      "a",
      "maximum",
      "distance",
      "capability",
      "below",
      "7000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 7000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "7000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you show me the names and distances of aircraft that have a distance less than 7000?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "have",
      "a",
      "distance",
      "less",
      "than",
      "7000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, price FROM flight WHERE aid = 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "What are the names and prices of flights that use aircraft with an ID of 1?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "prices",
      "of",
      "flights",
      "that",
      "use",
      "aircraft",
      "with",
      "an",
      "ID",
      "of",
      "1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, price FROM flight WHERE aid = 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "List the flight names and their prices where the aircraft ID is 1.",
    "question_toks": [
      "List",
      "the",
      "flight",
      "names",
      "and",
      "their",
      "prices",
      "where",
      "the",
      "aircraft",
      "ID",
      "is",
      "1",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, price FROM flight WHERE aid = 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "Can you provide the names and prices of flights associated with aircraft ID 1?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "prices",
      "of",
      "flights",
      "associated",
      "with",
      "aircraft",
      "ID",
      "1",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "What are the names and salaries of employees earning more than 150,000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the names and salaries of employees whose salary exceeds 150,000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "whose",
      "salary",
      "exceeds",
      "150",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you show me the names and salaries of employees with salaries greater than 150,000?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "with",
      "salaries",
      "greater",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the minimum, average, and maximum distances of flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distances",
      "of",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the smallest, average, and largest flight distances for departures from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "smallest",
      ",",
      "average",
      ",",
      "and",
      "largest",
      "flight",
      "distances",
      "for",
      "departures",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What is the range of distances (min, avg, max) for flights that start in Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "range",
      "of",
      "distances",
      "(",
      "min",
      ",",
      "avg",
      ",",
      "max",
      ")",
      "for",
      "flights",
      "that",
      "start",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the minimum, average, and maximum prices for flights departing from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "prices",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you tell me the lowest, average, and highest prices for flights out of Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "prices",
      "for",
      "flights",
      "out",
      "of",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What is the price range (min, avg, max) for flights that leave Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "price",
      "range",
      "(",
      "min",
      ",",
      "avg",
      ",",
      "max",
      ")",
      "for",
      "flights",
      "that",
      "leave",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM aircraft",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft"
    ],
    "question": "What are the minimum, average, and maximum distances for the aircraft listed?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distances",
      "for",
      "the",
      "aircraft",
      "listed",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM aircraft",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft"
    ],
    "question": "Can you provide the smallest, average, and largest distances for the aircraft in the database?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "smallest",
      ",",
      "average",
      ",",
      "and",
      "largest",
      "distances",
      "for",
      "the",
      "aircraft",
      "in",
      "the",
      "database",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM aircraft",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft"
    ],
    "question": "What is the range of distances (min, avg, max) for the aircraft available?",
    "question_toks": [
      "What",
      "is",
      "the",
      "range",
      "of",
      "distances",
      "(",
      "min",
      ",",
      "avg",
      ",",
      "max",
      ")",
      "for",
      "the",
      "aircraft",
      "available",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the minimum, average, and maximum distances of flights from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distances",
      "of",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you provide the lowest, average, and highest distances for flights originating from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "distances",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "What is the range of distances for flights departing from Los Angeles, including the minimum and average?",
    "question_toks": [
      "What",
      "is",
      "the",
      "range",
      "of",
      "distances",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      ",",
      "including",
      "the",
      "minimum",
      "and",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "What is the minimum, average, and maximum price for flights from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you tell me the lowest, average, and highest prices for flights originating in Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "prices",
      "for",
      "flights",
      "originating",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the price extremes and average for flights departing from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "price",
      "extremes",
      "and",
      "average",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the minimum, average, and maximum aircraft IDs for flights from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "aircraft",
      "IDs",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you provide the range of aircraft IDs associated with flights originating from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "range",
      "of",
      "aircraft",
      "IDs",
      "associated",
      "with",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "What is the minimum, average, and maximum value of aircraft IDs for flights departing from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "value",
      "of",
      "aircraft",
      "IDs",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which flight has the longest distance and what is its aircraft ID and name?",
    "question_toks": [
      "Which",
      "flight",
      "has",
      "the",
      "longest",
      "distance",
      "and",
      "what",
      "is",
      "its",
      "aircraft",
      "ID",
      "and",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the aircraft ID and name of the flight with the greatest distance?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "of",
      "the",
      "flight",
      "with",
      "the",
      "greatest",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the aircraft ID and name of the flight that covers the most distance?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "of",
      "the",
      "flight",
      "that",
      "covers",
      "the",
      "most",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "limit",
      "value"
    ],
    "question": "Which aircraft has the shortest distance and what are its ID and name?",
    "question_toks": [
      "Which",
      "aircraft",
      "has",
      "the",
      "shortest",
      "distance",
      "and",
      "what",
      "are",
      "its",
      "ID",
      "and",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "limit",
      "value"
    ],
    "question": "Can you provide the ID and name of the aircraft with the least distance?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "ID",
      "and",
      "name",
      "of",
      "the",
      "aircraft",
      "with",
      "the",
      "least",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the aircraft ID and name for the aircraft that travels the shortest distance?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "for",
      "the",
      "aircraft",
      "that",
      "travels",
      "the",
      "shortest",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY price DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "price",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "price",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the aircraft ID and name of the most expensive flight originating from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "of",
      "the",
      "most",
      "expensive",
      "flight",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY price DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "price",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "price",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the aircraft ID and name of the flight that costs the most from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "of",
      "the",
      "flight",
      "that",
      "costs",
      "the",
      "most",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY price DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "price",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "price",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which flight from Los Angeles has the highest price, and what are its aircraft ID and name?",
    "question_toks": [
      "Which",
      "flight",
      "from",
      "Los",
      "Angeles",
      "has",
      "the",
      "highest",
      "price",
      ",",
      "and",
      "what",
      "are",
      "its",
      "aircraft",
      "ID",
      "and",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which flight from Los Angeles has the highest distance?",
    "question_toks": [
      "Which",
      "flight",
      "from",
      "Los",
      "Angeles",
      "has",
      "the",
      "highest",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the aid and name of the longest flight departing from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aid",
      "and",
      "name",
      "of",
      "the",
      "longest",
      "flight",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the longest flight from Los Angeles and its corresponding aid?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "longest",
      "flight",
      "from",
      "Los",
      "Angeles",
      "and",
      "its",
      "corresponding",
      "aid",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the aid and name of the aircraft with the greatest distance capability?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aid",
      "and",
      "name",
      "of",
      "the",
      "aircraft",
      "with",
      "the",
      "greatest",
      "distance",
      "capability",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide the details of the aircraft that can travel the farthest?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "details",
      "of",
      "the",
      "aircraft",
      "that",
      "can",
      "travel",
      "the",
      "farthest",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which aircraft has the highest distance, and what is its aid?",
    "question_toks": [
      "Which",
      "aircraft",
      "has",
      "the",
      "highest",
      "distance",
      ",",
      "and",
      "what",
      "is",
      "its",
      "aid",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "Who is the highest-paid employee and what is their salary?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "highest",
      "-",
      "paid",
      "employee",
      "and",
      "what",
      "is",
      "their",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the name and salary of the employee with the highest earnings?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "name",
      "and",
      "salary",
      "of",
      "the",
      "employee",
      "with",
      "the",
      "highest",
      "earnings",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the details of the employee earning the most?",
    "question_toks": [
      "What",
      "are",
      "the",
      "details",
      "of",
      "the",
      "employee",
      "earning",
      "the",
      "most",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the names of the three aircraft with the shortest distances?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "three",
      "aircraft",
      "with",
      "the",
      "shortest",
      "distances",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you list the top three aircraft based on their distance in ascending order?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "top",
      "three",
      "aircraft",
      "based",
      "on",
      "their",
      "distance",
      "in",
      "ascending",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Show me the names of the three closest aircraft by distance.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "names",
      "of",
      "the",
      "three",
      "closest",
      "aircraft",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 4000 ORDER BY distance ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "4000",
      "ORDER",
      "BY",
      "distance",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      "order",
      "by",
      "distance",
      "asc"
    ],
    "question": "Which aircraft have distances less than 4000, and what are their names?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "distances",
      "less",
      "than",
      "4000",
      ",",
      "and",
      "what",
      "are",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 4000 ORDER BY distance ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "4000",
      "ORDER",
      "BY",
      "distance",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      "order",
      "by",
      "distance",
      "asc"
    ],
    "question": "List the names of aircraft that have a distance under 4000, sorted by distance.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "have",
      "a",
      "distance",
      "under",
      "4000",
      ",",
      "sorted",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 4000 ORDER BY distance ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "4000",
      "ORDER",
      "BY",
      "distance",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      "order",
      "by",
      "distance",
      "asc"
    ],
    "question": "Can you provide the names of aircraft with distances below 4000 in order of increasing distance?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "aircraft",
      "with",
      "distances",
      "below",
      "4000",
      "in",
      "order",
      "of",
      "increasing",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance DESC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the names of the three aircraft with the longest distances?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "three",
      "aircraft",
      "with",
      "the",
      "longest",
      "distances",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance DESC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you list the top three aircraft based on their distance in descending order?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "top",
      "three",
      "aircraft",
      "based",
      "on",
      "their",
      "distance",
      "in",
      "descending",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance DESC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Show me the names of the three farthest aircraft by distance.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "names",
      "of",
      "the",
      "three",
      "farthest",
      "aircraft",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > (SELECT avg(distance) FROM aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "Which aircraft names have a distance greater than the average distance of all aircraft?",
    "question_toks": [
      "Which",
      "aircraft",
      "names",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "the",
      "average",
      "distance",
      "of",
      "all",
      "aircraft",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > (SELECT avg(distance) FROM aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "Can you list the names of aircraft that can fly farther than the average distance?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "fly",
      "farther",
      "than",
      "the",
      "average",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > (SELECT avg(distance) FROM aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "What are the names of the aircraft that exceed the average distance capability?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "that",
      "exceed",
      "the",
      "average",
      "distance",
      "capability",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > (SELECT avg(salary) FROM employee)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "salary",
      ")",
      "FROM",
      "employee",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "employee",
      ")"
    ],
    "question": "Which employees earn more than the average salary of all employees?",
    "question_toks": [
      "Which",
      "employees",
      "earn",
      "more",
      "than",
      "the",
      "average",
      "salary",
      "of",
      "all",
      "employees",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > (SELECT avg(salary) FROM employee)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "salary",
      ")",
      "FROM",
      "employee",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "employee",
      ")"
    ],
    "question": "Can you provide the names of employees whose salaries are above the average?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "employees",
      "whose",
      "salaries",
      "are",
      "above",
      "the",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > (SELECT avg(salary) FROM employee)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "salary",
      ")",
      "FROM",
      "employee",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "employee",
      ")"
    ],
    "question": "What are the names of employees that have a salary greater than the average salary?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "employees",
      "that",
      "have",
      "a",
      "salary",
      "greater",
      "than",
      "the",
      "average",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE distance > (SELECT avg(distance) FROM flight)",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      ")"
    ],
    "question": "Which flight destinations have a distance greater than the average distance of all flights?",
    "question_toks": [
      "Which",
      "flight",
      "destinations",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "the",
      "average",
      "distance",
      "of",
      "all",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE distance > (SELECT avg(distance) FROM flight)",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      ")"
    ],
    "question": "Can you list the destinations of flights that exceed the average distance?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "destinations",
      "of",
      "flights",
      "that",
      "exceed",
      "the",
      "average",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE distance > (SELECT avg(distance) FROM flight)",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      ")"
    ],
    "question": "What are the flight destinations that are farther than the average distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "flight",
      "destinations",
      "that",
      "are",
      "farther",
      "than",
      "the",
      "average",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 6000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "6000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aircraft have a distance capacity greater than 6000?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "capacity",
      "greater",
      "than",
      "6000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 6000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "6000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you list the names of aircraft that can travel more than 6000 miles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "more",
      "than",
      "6000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 6000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "6000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the names of the aircraft with a distance capability exceeding 6000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "with",
      "a",
      "distance",
      "capability",
      "exceeding",
      "6000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "What aircraft have a distance greater than the average distance of all aircraft?",
    "question_toks": [
      "What",
      "aircraft",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "the",
      "average",
      "distance",
      "of",
      "all",
      "aircraft",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "Can you identify the aircraft whose distance exceeds the average distance?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "aircraft",
      "whose",
      "distance",
      "exceeds",
      "the",
      "average",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "Which aircraft models have a distance rating above the average?",
    "question_toks": [
      "Which",
      "aircraft",
      "models",
      "have",
      "a",
      "distance",
      "rating",
      "above",
      "the",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 3000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aircraft can fly distances greater than 3000 miles?",
    "question_toks": [
      "Which",
      "aircraft",
      "can",
      "fly",
      "distances",
      "greater",
      "than",
      "3000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 3000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "List the aircraft capable of traveling more than 3000 miles.",
    "question_toks": [
      "List",
      "the",
      "aircraft",
      "capable",
      "of",
      "traveling",
      "more",
      "than",
      "3000",
      "miles",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 3000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the names of aircraft that have a distance capacity over 3000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "have",
      "a",
      "distance",
      "capacity",
      "over",
      "3000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary greater than 150,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "greater",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names of employees earning more than 150,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees with salaries exceeding 150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "salaries",
      "exceeding",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees with salaries above 120,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "salaries",
      "above",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names of employees earning more than 120,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary that exceeds 120,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "that",
      "exceeds",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary greater than 101,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "greater",
      "than",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names of employees earning above 101,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "earning",
      "above",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees with salaries higher than 101,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "salaries",
      "higher",
      "than",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary exceeding 150,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "exceeding",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names of employees earning more than 150,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees with salaries greater than 150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "salaries",
      "greater",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees earn more than 120,000?",
    "question_toks": [
      "Which",
      "employees",
      "earn",
      "more",
      "than",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide a list of employees with salaries above 120,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "list",
      "of",
      "employees",
      "with",
      "salaries",
      "above",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees that have a salary higher than 120,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "that",
      "have",
      "a",
      "salary",
      "higher",
      "than",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees with salaries that exceed 100,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "salaries",
      "that",
      "exceed",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you tell me the names of employees who earn over 100,000?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "names",
      "of",
      "employees",
      "who",
      "earn",
      "over",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary greater than 100,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "greater",
      "than",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "What are the names and salaries of employees earning more than 150,000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names and salaries for employees with a salary greater than 150,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "salaries",
      "for",
      "employees",
      "with",
      "a",
      "salary",
      "greater",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Show me the names and salaries of those employees whose salary exceeds 150,000.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "those",
      "employees",
      "whose",
      "salary",
      "exceeds",
      "150",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary < 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      "<",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      "<",
      "value"
    ],
    "question": "Which employees have a salary of less than 120,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "of",
      "less",
      "than",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary < 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      "<",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      "<",
      "value"
    ],
    "question": "Can you list the names of employees earning below 120,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "earning",
      "below",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary < 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      "<",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      "<",
      "value"
    ],
    "question": "Who are the employees with salaries under 120,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "salaries",
      "under",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name LIKE 'L%'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "L",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "like",
      "'",
      "l",
      "%",
      "'"
    ],
    "question": "What are the names and salaries of employees whose names start with 'L'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "whose",
      "names",
      "start",
      "with",
      "'",
      "L",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name LIKE 'L%'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "L",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "like",
      "'",
      "l",
      "%",
      "'"
    ],
    "question": "Can you provide the names and salaries of employees beginning with the letter 'L'?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "beginning",
      "with",
      "the",
      "letter",
      "'",
      "L",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name LIKE 'L%'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "L",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "like",
      "'",
      "l",
      "%",
      "'"
    ],
    "question": "Show me the names and salaries of employees whose names start with 'L'.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "whose",
      "names",
      "start",
      "with",
      "'",
      "L",
      "'",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "What are the names and salaries of employees earning more than 150,000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names and salaries of those employees whose salary exceeds 150,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "those",
      "employees",
      "whose",
      "salary",
      "exceeds",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the names and salaries of employees with a salary greater than 150,000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "with",
      "a",
      "salary",
      "greater",
      "than",
      "150",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE name LIKE 'L%'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "L",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "name",
      "like",
      "'",
      "l",
      "%",
      "'"
    ],
    "question": "Which employees have names that start with the letter 'L'?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "names",
      "that",
      "start",
      "with",
      "the",
      "letter",
      "'",
      "L",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE name LIKE 'L%'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "L",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "name",
      "like",
      "'",
      "l",
      "%",
      "'"
    ],
    "question": "Can you tell me the names of employees beginning with 'L'?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "names",
      "of",
      "employees",
      "beginning",
      "with",
      "'",
      "L",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE name LIKE 'L%'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "L",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "name",
      "like",
      "'",
      "l",
      "%",
      "'"
    ],
    "question": "List all employees whose names start with 'L'.",
    "question_toks": [
      "List",
      "all",
      "employees",
      "whose",
      "names",
      "start",
      "with",
      "'",
      "L",
      "'",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT eid FROM certificate WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "eid",
      "FROM",
      "certificate",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "eid",
      "from",
      "certificate",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "What are the employee IDs associated with aid number 3?",
    "question_toks": [
      "What",
      "are",
      "the",
      "employee",
      "IDs",
      "associated",
      "with",
      "aid",
      "number",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT eid FROM certificate WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "eid",
      "FROM",
      "certificate",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "eid",
      "from",
      "certificate",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "Can you provide the IDs of employees linked to aid 3?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "IDs",
      "of",
      "employees",
      "linked",
      "to",
      "aid",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT eid FROM certificate WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "eid",
      "FROM",
      "certificate",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "eid",
      "from",
      "certificate",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "List the employee IDs for those who have aid 3.",
    "question_toks": [
      "List",
      "the",
      "employee",
      "IDs",
      "for",
      "those",
      "who",
      "have",
      "aid",
      "3",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "What are the destinations for flights originating from Los Angeles, sorted by destination?",
    "question_toks": [
      "What",
      "are",
      "the",
      "destinations",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "by",
      "destination",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Can you list the flight destinations from Los Angeles in order?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "flight",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "in",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Show me the destinations of flights that leave from Los Angeles, arranged in alphabetical order.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "destinations",
      "of",
      "flights",
      "that",
      "leave",
      "from",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft ORDER BY distance",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "order",
      "by",
      "distance"
    ],
    "question": "What are the names and distances of the aircraft, sorted by their distance capabilities?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "the",
      "aircraft",
      ",",
      "sorted",
      "by",
      "their",
      "distance",
      "capabilities",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft ORDER BY distance",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "order",
      "by",
      "distance"
    ],
    "question": "Can you provide the aircraft names along with their distances, organized by distance?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "aircraft",
      "names",
      "along",
      "with",
      "their",
      "distances",
      ",",
      "organized",
      "by",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft ORDER BY distance",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "order",
      "by",
      "distance"
    ],
    "question": "List the aircraft and their respective distances, arranged from shortest to longest.",
    "question_toks": [
      "List",
      "the",
      "aircraft",
      "and",
      "their",
      "respective",
      "distances",
      ",",
      "arranged",
      "from",
      "shortest",
      "to",
      "longest",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc"
    ],
    "question": "Who are the employees and what are their salaries, listed from highest to lowest salary?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "and",
      "what",
      "are",
      "their",
      "salaries",
      ",",
      "listed",
      "from",
      "highest",
      "to",
      "lowest",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc"
    ],
    "question": "Can you show me the names of employees along with their salaries in descending order?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "names",
      "of",
      "employees",
      "along",
      "with",
      "their",
      "salaries",
      "in",
      "descending",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc"
    ],
    "question": "Provide a list of employees and their salaries, sorted with the highest salaries first.",
    "question_toks": [
      "Provide",
      "a",
      "list",
      "of",
      "employees",
      "and",
      "their",
      "salaries",
      ",",
      "sorted",
      "with",
      "the",
      "highest",
      "salaries",
      "first",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "What are the destinations from Los Angeles, sorted by destination?",
    "question_toks": [
      "What",
      "are",
      "the",
      "destinations",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "by",
      "destination",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Can you list the destinations for flights originating from Los Angeles in order?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "destinations",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "in",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Show me the flight destinations departing from Los Angeles, arranged by destination name.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "flight",
      "destinations",
      "departing",
      "from",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "by",
      "destination",
      "name",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT DISTINCT destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "What unique destinations can I fly to from Los Angeles, listed in order?",
    "question_toks": [
      "What",
      "unique",
      "destinations",
      "can",
      "I",
      "fly",
      "to",
      "from",
      "Los",
      "Angeles",
      ",",
      "listed",
      "in",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT DISTINCT destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Can you provide a list of different destinations available from Los Angeles, sorted alphabetically?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "list",
      "of",
      "different",
      "destinations",
      "available",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "alphabetically",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT DISTINCT destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "List the various flight destinations from Los Angeles, arranged by their names.",
    "question_toks": [
      "List",
      "the",
      "various",
      "flight",
      "destinations",
      "from",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "by",
      "their",
      "names",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, price FROM flight WHERE origin = 'Los Angeles' ORDER BY price",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "price"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "price"
    ],
    "question": "What are the flight prices for destinations from Los Angeles, sorted by price?",
    "question_toks": [
      "What",
      "are",
      "the",
      "flight",
      "prices",
      "for",
      "destinations",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "by",
      "price",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, price FROM flight WHERE origin = 'Los Angeles' ORDER BY price",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "price"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "price"
    ],
    "question": "Can you show me the prices of flights originating from Los Angeles, arranged from lowest to highest?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "prices",
      "of",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "from",
      "lowest",
      "to",
      "highest",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, price FROM flight WHERE origin = 'Los Angeles' ORDER BY price",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "price"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "price"
    ],
    "question": "List the costs of flights departing from Los Angeles, ordered by their price.",
    "question_toks": [
      "List",
      "the",
      "costs",
      "of",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      ",",
      "ordered",
      "by",
      "their",
      "price",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the destinations for flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "destinations",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "List all the destinations of flights that start in Los Angeles.",
    "question_toks": [
      "List",
      "all",
      "the",
      "destinations",
      "of",
      "flights",
      "that",
      "start",
      "in",
      "Los",
      "Angeles",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the destinations for flights that have Los Angeles as their origin?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "destinations",
      "for",
      "flights",
      "that",
      "have",
      "Los",
      "Angeles",
      "as",
      "their",
      "origin",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the prices for flights departing from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "prices",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you show me the prices of flights that originate in Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "prices",
      "of",
      "flights",
      "that",
      "originate",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "List the prices of flights that have Los Angeles as their starting point.",
    "question_toks": [
      "List",
      "the",
      "prices",
      "of",
      "flights",
      "that",
      "have",
      "Los",
      "Angeles",
      "as",
      "their",
      "starting",
      "point",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What is the distance for flights that leave from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "distance",
      "for",
      "flights",
      "that",
      "leave",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the distances for flights originating in Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "distances",
      "for",
      "flights",
      "originating",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "List the distances for flights that start from Los Angeles.",
    "question_toks": [
      "List",
      "the",
      "distances",
      "for",
      "flights",
      "that",
      "start",
      "from",
      "Los",
      "Angeles",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, price FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the distance and price for flights originating from Los Angeles to Chicago?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, price FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you provide the distance and cost for flights from Los Angeles to Chicago?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, price FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "I'm interested in the distance and fare for flights between Los Angeles and Chicago.",
    "question_toks": [
      "I",
      "'",
      "m",
      "interested",
      "in",
      "the",
      "distance",
      "and",
      "fare",
      "for",
      "flights",
      "between",
      "Los",
      "Angeles",
      "and",
      "Chicago",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, destination FROM flight WHERE origin = 'Los Angeles' AND distance < 3000",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "distance",
      "<",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "distance",
      "<",
      "value"
    ],
    "question": "Which destinations can be reached from Los Angeles with a distance of less than 3000 miles?",
    "question_toks": [
      "Which",
      "destinations",
      "can",
      "be",
      "reached",
      "from",
      "Los",
      "Angeles",
      "with",
      "a",
      "distance",
      "of",
      "less",
      "than",
      "3000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, destination FROM flight WHERE origin = 'Los Angeles' AND distance < 3000",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "distance",
      "<",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "distance",
      "<",
      "value"
    ],
    "question": "What are the available destinations from Los Angeles for flights shorter than 3000 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "available",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "for",
      "flights",
      "shorter",
      "than",
      "3000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, destination FROM flight WHERE origin = 'Los Angeles' AND distance < 3000",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "distance",
      "<",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you list the destinations from Los Angeles for flights that are under 3000 miles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "for",
      "flights",
      "that",
      "are",
      "under",
      "3000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees with a salary greater than 150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "a",
      "salary",
      "greater",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names and salaries of employees earning more than 150,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "I'm looking for employees that have salaries exceeding 150,000.",
    "question_toks": [
      "I",
      "'",
      "m",
      "looking",
      "for",
      "employees",
      "that",
      "have",
      "salaries",
      "exceeding",
      "150",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What is the average price of flights from Los Angeles to Chicago?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "of",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you tell me the mean price for flights originating in Los Angeles and heading to Chicago?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "mean",
      "price",
      "for",
      "flights",
      "originating",
      "in",
      "Los",
      "Angeles",
      "and",
      "heading",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What is the average cost for flights departing from Los Angeles and arriving in Chicago?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "cost",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "and",
      "arriving",
      "in",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "What is the average ticket price for flights from Los Angeles to Dallas?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "ticket",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "Can you provide the average cost of flights that go from Los Angeles to Dallas?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "cost",
      "of",
      "flights",
      "that",
      "go",
      "from",
      "Los",
      "Angeles",
      "to",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "What is the mean price for flights flying out of Los Angeles and into Dallas?",
    "question_toks": [
      "What",
      "is",
      "the",
      "mean",
      "price",
      "for",
      "flights",
      "flying",
      "out",
      "of",
      "Los",
      "Angeles",
      "and",
      "into",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Boston'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Boston",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "boston",
      "'"
    ],
    "question": "How much does it typically cost for flights from Los Angeles to Boston?",
    "question_toks": [
      "How",
      "much",
      "does",
      "it",
      "typically",
      "cost",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Boston",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Boston'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Boston",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "boston",
      "'"
    ],
    "question": "What is the average price for tickets on flights from Los Angeles to Boston?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "for",
      "tickets",
      "on",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Boston",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Boston'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Boston",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "boston",
      "'"
    ],
    "question": "Can you give me the average fare for flights departing from Los Angeles and arriving in Boston?",
    "question_toks": [
      "Can",
      "you",
      "give",
      "me",
      "the",
      "average",
      "fare",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "and",
      "arriving",
      "in",
      "Boston",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the top three destinations from Los Angeles based on the shortest distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "three",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "based",
      "on",
      "the",
      "shortest",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you list the three closest destinations from Los Angeles according to the distance?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "three",
      "closest",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "according",
      "to",
      "the",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Show me the three nearest destinations from Los Angeles sorted by distance.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "three",
      "nearest",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "sorted",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the IDs of the first three flights from Los Angeles when sorted by distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "IDs",
      "of",
      "the",
      "first",
      "three",
      "flights",
      "from",
      "Los",
      "Angeles",
      "when",
      "sorted",
      "by",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you provide the IDs of the three nearest flights departing from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "IDs",
      "of",
      "the",
      "three",
      "nearest",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "List the three flight IDs for flights leaving Los Angeles, arranged by their distance.",
    "question_toks": [
      "List",
      "the",
      "three",
      "flight",
      "IDs",
      "for",
      "flights",
      "leaving",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "by",
      "their",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the prices for the three shortest flights from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "prices",
      "for",
      "the",
      "three",
      "shortest",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you tell me the costs of the three closest flights originating from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "costs",
      "of",
      "the",
      "three",
      "closest",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Show me the prices for the three nearest flights departing from Los Angeles sorted by distance.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "prices",
      "for",
      "the",
      "three",
      "nearest",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "sorted",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance), AVG(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the average distance and price for flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance), AVG(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the average flight distance and cost for routes starting in Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "flight",
      "distance",
      "and",
      "cost",
      "for",
      "routes",
      "starting",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance), AVG(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "How much is the average distance and price for flights that depart from Los Angeles?",
    "question_toks": [
      "How",
      "much",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "that",
      "depart",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance) AS average_distance, AVG(price) AS average_price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "AS",
      "average_distance",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "AS",
      "average_price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "average_price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the average distance and price for flights going to Chicago?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "going",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance) AS average_distance, AVG(price) AS average_price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "AS",
      "average_distance",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "AS",
      "average_price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "average_price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you tell me the average distance and cost of flights that arrive in Chicago?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "of",
      "flights",
      "that",
      "arrive",
      "in",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance) AS average_distance, AVG(price) AS average_price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "AS",
      "average_distance",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "AS",
      "average_price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "average_price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "How much do flights to Chicago typically cost, and what is their average distance?",
    "question_toks": [
      "How",
      "much",
      "do",
      "flights",
      "to",
      "Chicago",
      "typically",
      "cost",
      ",",
      "and",
      "what",
      "is",
      "their",
      "average",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance) AS avg_distance, AVG(price) AS avg_price FROM flight WHERE distance < 3000",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "AS",
      "avg_distance",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "AS",
      "avg_price",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "<",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "avg_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "avg_price",
      "from",
      "flight",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What is the average distance and price for flights that have a distance of less than 3000 miles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "that",
      "have",
      "a",
      "distance",
      "of",
      "less",
      "than",
      "3000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance) AS avg_distance, AVG(price) AS avg_price FROM flight WHERE distance < 3000",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "AS",
      "avg_distance",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "AS",
      "avg_price",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "<",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "avg_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "avg_price",
      "from",
      "flight",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you provide the average cost and distance for shorter flights under 3000 miles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "cost",
      "and",
      "distance",
      "for",
      "shorter",
      "flights",
      "under",
      "3000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance) AS avg_distance, AVG(price) AS avg_price FROM flight WHERE distance < 3000",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "AS",
      "avg_distance",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "AS",
      "avg_price",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "<",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "avg_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "avg_price",
      "from",
      "flight",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "How far do shorter flights typically go, and what is their average price?",
    "question_toks": [
      "How",
      "far",
      "do",
      "shorter",
      "flights",
      "typically",
      "go",
      ",",
      "and",
      "what",
      "is",
      "their",
      "average",
      "price",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the average distance and price of flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "of",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the average distance and cost of flights that start in Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "of",
      "flights",
      "that",
      "start",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What is the average flight distance and fare for departures from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "flight",
      "distance",
      "and",
      "fare",
      "for",
      "departures",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the average distance and price of flights arriving in Chicago?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "of",
      "flights",
      "arriving",
      "in",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you tell me the average distance and fare for flights that land in Chicago?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "average",
      "distance",
      "and",
      "fare",
      "for",
      "flights",
      "that",
      "land",
      "in",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What is the average flight distance and cost for arrivals in Chicago?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "flight",
      "distance",
      "and",
      "cost",
      "for",
      "arrivals",
      "in",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "What are the average distance and price of flights associated with airline ID 3?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "of",
      "flights",
      "associated",
      "with",
      "airline",
      "ID",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "Can you provide the average distance and cost for flights operated by airline ID 3?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "operated",
      "by",
      "airline",
      "ID",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "What is the average flight distance and fare for flights linked to airline ID 3?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "flight",
      "distance",
      "and",
      "fare",
      "for",
      "flights",
      "linked",
      "to",
      "airline",
      "ID",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Which destination from Los Angeles has the highest number of flights?",
    "question_toks": [
      "Which",
      "destination",
      "from",
      "Los",
      "Angeles",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "What is the most frequently visited destination from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "frequently",
      "visited",
      "destination",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Can you tell me the top destination based on flight counts from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "top",
      "destination",
      "based",
      "on",
      "flight",
      "counts",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the most popular destination for flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "popular",
      "destination",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which destination has the most flights coming from Los Angeles?",
    "question_toks": [
      "Which",
      "destination",
      "has",
      "the",
      "most",
      "flights",
      "coming",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Identify the destination with the highest flight count from Los Angeles.",
    "question_toks": [
      "Identify",
      "the",
      "destination",
      "with",
      "the",
      "highest",
      "flight",
      "count",
      "from",
      "Los",
      "Angeles",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC OFFSET 0 ROWS FETCH NEXT 1 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "OFFSET",
      "0",
      "ROWS",
      "FETCH",
      "NEXT",
      "1",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "offset",
      "value",
      "rows",
      "fetch",
      "next",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you find the destination with the most flights from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "the",
      "destination",
      "with",
      "the",
      "most",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC OFFSET 0 ROWS FETCH NEXT 1 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "OFFSET",
      "0",
      "ROWS",
      "FETCH",
      "NEXT",
      "1",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "offset",
      "value",
      "rows",
      "fetch",
      "next",
      "value",
      "rows",
      "only"
    ],
    "question": "Which destination receives the most flights departing from Los Angeles?",
    "question_toks": [
      "Which",
      "destination",
      "receives",
      "the",
      "most",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC OFFSET 0 ROWS FETCH NEXT 1 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "OFFSET",
      "0",
      "ROWS",
      "FETCH",
      "NEXT",
      "1",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "offset",
      "value",
      "rows",
      "fetch",
      "next",
      "value",
      "rows",
      "only"
    ],
    "question": "What is the leading destination for flights that start in Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "leading",
      "destination",
      "for",
      "flights",
      "that",
      "start",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Which destination from Los Angeles has the most flights?",
    "question_toks": [
      "Which",
      "destination",
      "from",
      "Los",
      "Angeles",
      "has",
      "the",
      "most",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "What is the most popular flight destination from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "popular",
      "flight",
      "destination",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Which city do most flights from Los Angeles go to?",
    "question_toks": [
      "Which",
      "city",
      "do",
      "most",
      "flights",
      "from",
      "Los",
      "Angeles",
      "go",
      "to",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC OFFSET 0 ROWS FETCH NEXT 1 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "OFFSET",
      "0",
      "ROWS",
      "FETCH",
      "NEXT",
      "1",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "offset",
      "value",
      "rows",
      "fetch",
      "next",
      "value",
      "rows",
      "only"
    ],
    "question": "What is the top destination for flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "top",
      "destination",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC OFFSET 0 ROWS FETCH NEXT 1 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "OFFSET",
      "0",
      "ROWS",
      "FETCH",
      "NEXT",
      "1",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "offset",
      "value",
      "rows",
      "fetch",
      "next",
      "value",
      "rows",
      "only"
    ],
    "question": "Which flight destination is the most frequently traveled from Los Angeles?",
    "question_toks": [
      "Which",
      "flight",
      "destination",
      "is",
      "the",
      "most",
      "frequently",
      "traveled",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC OFFSET 0 ROWS FETCH NEXT 1 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "OFFSET",
      "0",
      "ROWS",
      "FETCH",
      "NEXT",
      "1",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "offset",
      "value",
      "rows",
      "fetch",
      "next",
      "value",
      "rows",
      "only"
    ],
    "question": "From Los Angeles, which destination has the highest number of flights?",
    "question_toks": [
      "From",
      "Los",
      "Angeles",
      ",",
      "which",
      "destination",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What destination has the highest number of flights from Los Angeles?",
    "question_toks": [
      "What",
      "destination",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which city is the most common destination for flights leaving Los Angeles?",
    "question_toks": [
      "Which",
      "city",
      "is",
      "the",
      "most",
      "common",
      "destination",
      "for",
      "flights",
      "leaving",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "From Los Angeles, where do most flights go?",
    "question_toks": [
      "From",
      "Los",
      "Angeles",
      ",",
      "where",
      "do",
      "most",
      "flights",
      "go",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the most common destination from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "common",
      "destination",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which destination has the highest number of flights originating from Los Angeles?",
    "question_toks": [
      "Which",
      "destination",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the destination with the most flights departing from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "destination",
      "with",
      "the",
      "most",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which destination has the most flights coming from Los Angeles?",
    "question_toks": [
      "Which",
      "destination",
      "has",
      "the",
      "most",
      "flights",
      "coming",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the most frequently traveled destination from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "frequently",
      "traveled",
      "destination",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you identify the destination that is flown to the most from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "destination",
      "that",
      "is",
      "flown",
      "to",
      "the",
      "most",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE aid IN (SELECT aid FROM flight GROUP BY aid HAVING COUNT(*) > 0) GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "IN",
      "(",
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "aid",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "0",
      ")",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "aid",
      "in",
      "(",
      "select",
      "aid",
      "from",
      "flight",
      "group",
      "by",
      "aid",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value",
      ")",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What destination has the highest flight count based on available aircraft?",
    "question_toks": [
      "What",
      "destination",
      "has",
      "the",
      "highest",
      "flight",
      "count",
      "based",
      "on",
      "available",
      "aircraft",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE aid IN (SELECT aid FROM flight GROUP BY aid HAVING COUNT(*) > 0) GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "IN",
      "(",
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "aid",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "0",
      ")",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "aid",
      "in",
      "(",
      "select",
      "aid",
      "from",
      "flight",
      "group",
      "by",
      "aid",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value",
      ")",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which destination is most popular among flights that have aircraft assigned?",
    "question_toks": [
      "Which",
      "destination",
      "is",
      "most",
      "popular",
      "among",
      "flights",
      "that",
      "have",
      "aircraft",
      "assigned",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE aid IN (SELECT aid FROM flight GROUP BY aid HAVING COUNT(*) > 0) GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "IN",
      "(",
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "aid",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "0",
      ")",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "aid",
      "in",
      "(",
      "select",
      "aid",
      "from",
      "flight",
      "group",
      "by",
      "aid",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value",
      ")",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you find the destination with the most flights that are linked to aircraft?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "the",
      "destination",
      "with",
      "the",
      "most",
      "flights",
      "that",
      "are",
      "linked",
      "to",
      "aircraft",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aid values are associated with flights that have a distance greater than 1000?",
    "question_toks": [
      "Which",
      "aid",
      "values",
      "are",
      "associated",
      "with",
      "flights",
      "that",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you list the aid numbers for flights exceeding a distance of 1000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "aid",
      "numbers",
      "for",
      "flights",
      "exceeding",
      "a",
      "distance",
      "of",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the aid identifiers for flights with a distance over 1000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aid",
      "identifiers",
      "for",
      "flights",
      "with",
      "a",
      "distance",
      "over",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE price < 250",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "250"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "What aid values correspond to flights priced below 250?",
    "question_toks": [
      "What",
      "aid",
      "values",
      "correspond",
      "to",
      "flights",
      "priced",
      "below",
      "250",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE price < 250",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "250"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Can you provide the aid numbers for flights that cost less than 250?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "aid",
      "numbers",
      "for",
      "flights",
      "that",
      "cost",
      "less",
      "than",
      "250",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE price < 250",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "250"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Which aid identifiers are linked to flights with a price under 250?",
    "question_toks": [
      "Which",
      "aid",
      "identifiers",
      "are",
      "linked",
      "to",
      "flights",
      "with",
      "a",
      "price",
      "under",
      "250",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the aid values for flights that fly to Chicago?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aid",
      "values",
      "for",
      "flights",
      "that",
      "fly",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you list the aid numbers for flights heading to Chicago?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "aid",
      "numbers",
      "for",
      "flights",
      "heading",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Which aid identifiers are associated with flights going to Chicago?",
    "question_toks": [
      "Which",
      "aid",
      "identifiers",
      "are",
      "associated",
      "with",
      "flights",
      "going",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aid values can be retrieved from the flight table where the distance exceeds 1000?",
    "question_toks": [
      "Which",
      "aid",
      "values",
      "can",
      "be",
      "retrieved",
      "from",
      "the",
      "flight",
      "table",
      "where",
      "the",
      "distance",
      "exceeds",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the aid numbers for flights that have a distance greater than 1000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aid",
      "numbers",
      "for",
      "flights",
      "that",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you list the aid associated with flights that travel more than 1000 miles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "aid",
      "associated",
      "with",
      "flights",
      "that",
      "travel",
      "more",
      "than",
      "1000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What aircraft names are available for those with a distance capability over 1500?",
    "question_toks": [
      "What",
      "aircraft",
      "names",
      "are",
      "available",
      "for",
      "those",
      "with",
      "a",
      "distance",
      "capability",
      "over",
      "1500",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you provide the names of aircraft that can travel more than 1500 miles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "more",
      "than",
      "1500",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aircraft are listed that have a distance greater than 1500?",
    "question_toks": [
      "Which",
      "aircraft",
      "are",
      "listed",
      "that",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "1500",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary that exceeds 100,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "that",
      "exceeds",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names of employees earning more than 100,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "What are the names of employees whose salaries are above 100,000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "employees",
      "whose",
      "salaries",
      "are",
      "above",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "How many flights have a distance between 1000 and 5000 miles?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "have",
      "a",
      "distance",
      "between",
      "1000",
      "and",
      "5000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What is the total number of flights that fall within the distance range of 1000 to 5000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "flights",
      "that",
      "fall",
      "within",
      "the",
      "distance",
      "range",
      "of",
      "1000",
      "to",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Can you count the number of flights that have a distance in the range of 1000 to 5000?",
    "question_toks": [
      "Can",
      "you",
      "count",
      "the",
      "number",
      "of",
      "flights",
      "that",
      "have",
      "a",
      "distance",
      "in",
      "the",
      "range",
      "of",
      "1000",
      "to",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "How many aircraft have a distance less than 5000 miles?",
    "question_toks": [
      "How",
      "many",
      "aircraft",
      "have",
      "a",
      "distance",
      "less",
      "than",
      "5000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What is the total number of aircraft that can fly less than 5000 miles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "aircraft",
      "that",
      "can",
      "fly",
      "less",
      "than",
      "5000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you tell me how many aircraft are capable of flying under 5000 miles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "how",
      "many",
      "aircraft",
      "are",
      "capable",
      "of",
      "flying",
      "under",
      "5000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "How many flights are priced below 300 dollars?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "are",
      "priced",
      "below",
      "300",
      "dollars",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "What is the total number of flights that cost less than 300?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "flights",
      "that",
      "cost",
      "less",
      "than",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Can you count the flights that have a price under 300 dollars?",
    "question_toks": [
      "Can",
      "you",
      "count",
      "the",
      "flights",
      "that",
      "have",
      "a",
      "price",
      "under",
      "300",
      "dollars",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What are the names and distances of aircraft that can travel less than 8000 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "less",
      "than",
      "8000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you provide the names and distances for aircraft with a range under 8000 miles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "distances",
      "for",
      "aircraft",
      "with",
      "a",
      "range",
      "under",
      "8000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "List the names and distances of all aircraft that have a maximum distance of less than 8000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "all",
      "aircraft",
      "that",
      "have",
      "a",
      "maximum",
      "distance",
      "of",
      "less",
      "than",
      "8000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, price FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "What destinations and prices are associated with flights that have an aid of 3?",
    "question_toks": [
      "What",
      "destinations",
      "and",
      "prices",
      "are",
      "associated",
      "with",
      "flights",
      "that",
      "have",
      "an",
      "aid",
      "of",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, price FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "Can you show me the destinations and prices for flights where the aid is 3?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "destinations",
      "and",
      "prices",
      "for",
      "flights",
      "where",
      "the",
      "aid",
      "is",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, price FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "List the destinations and prices for flights linked to an aid of 3.",
    "question_toks": [
      "List",
      "the",
      "destinations",
      "and",
      "prices",
      "for",
      "flights",
      "linked",
      "to",
      "an",
      "aid",
      "of",
      "3",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees earning more than 150,000, and what are their salaries?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "earning",
      "more",
      "than",
      "150",
      ",",
      "000",
      ",",
      "and",
      "what",
      "are",
      "their",
      "salaries",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names and salaries of employees with salaries exceeding 150,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "with",
      "salaries",
      "exceeding",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the employees and their salaries for those making over 150,000.",
    "question_toks": [
      "List",
      "the",
      "employees",
      "and",
      "their",
      "salaries",
      "for",
      "those",
      "making",
      "over",
      "150",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8500",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What are the names and distances of aircraft that have a distance less than 8500?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "have",
      "a",
      "distance",
      "less",
      "than",
      "8500",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8500",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you list the aircraft names along with their distances that are under 8500?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "aircraft",
      "names",
      "along",
      "with",
      "their",
      "distances",
      "that",
      "are",
      "under",
      "8500",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8500",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Show me the names and distances of all aircraft with a distance measurement below 8500.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "all",
      "aircraft",
      "with",
      "a",
      "distance",
      "measurement",
      "below",
      "8500",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary greater than 100000, and what are their names?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "greater",
      "than",
      "100000",
      ",",
      "and",
      "what",
      "are",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names and salaries of employees earning more than 100000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "100000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the names and salaries of all employees whose salary exceeds 100000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "all",
      "employees",
      "whose",
      "salary",
      "exceeds",
      "100000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "What are the origins and destinations of flights that cost less than 300?",
    "question_toks": [
      "What",
      "are",
      "the",
      "origins",
      "and",
      "destinations",
      "of",
      "flights",
      "that",
      "cost",
      "less",
      "than",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Can you show me the flight origins and destinations for those priced below 300?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "flight",
      "origins",
      "and",
      "destinations",
      "for",
      "those",
      "priced",
      "below",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "List the origins and destinations of all flights that have a price under 300.",
    "question_toks": [
      "List",
      "the",
      "origins",
      "and",
      "destinations",
      "of",
      "all",
      "flights",
      "that",
      "have",
      "a",
      "price",
      "under",
      "300",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the minimum, average, and maximum distances for flights?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distances",
      "for",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you provide the smallest, average, and largest flight distances?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "smallest",
      ",",
      "average",
      ",",
      "and",
      "largest",
      "flight",
      "distances",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "How do the distances of flights compare in terms of minimum, average, and maximum values?",
    "question_toks": [
      "How",
      "do",
      "the",
      "distances",
      "of",
      "flights",
      "compare",
      "in",
      "terms",
      "of",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "values",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the lowest, average, and highest prices for flights?",
    "question_toks": [
      "What",
      "are",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "prices",
      "for",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you tell me the minimum, average, and maximum prices of flights?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "prices",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "How do the prices of flights vary in terms of minimum, average, and maximum?",
    "question_toks": [
      "How",
      "do",
      "the",
      "prices",
      "of",
      "flights",
      "vary",
      "in",
      "terms",
      "of",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the minimum, average, and maximum aircraft IDs for the flights?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "aircraft",
      "IDs",
      "for",
      "the",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you provide the smallest, average, and largest aircraft IDs associated with the flights?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "smallest",
      ",",
      "average",
      ",",
      "and",
      "largest",
      "aircraft",
      "IDs",
      "associated",
      "with",
      "the",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "How do the aircraft IDs for the flights range from minimum to maximum, including the average?",
    "question_toks": [
      "How",
      "do",
      "the",
      "aircraft",
      "IDs",
      "for",
      "the",
      "flights",
      "range",
      "from",
      "minimum",
      "to",
      "maximum",
      ",",
      "including",
      "the",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the minimum, average, and maximum distances of flights from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distances",
      "of",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you provide the smallest, average, and largest flight distances originating from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "smallest",
      ",",
      "average",
      ",",
      "and",
      "largest",
      "flight",
      "distances",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "What is the range of flight distances, including the minimum, average, and maximum, for flights departing from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "range",
      "of",
      "flight",
      "distances",
      ",",
      "including",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      ",",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM aircraft",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft"
    ],
    "question": "What are the minimum, average, and maximum distances that the aircraft can cover?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distances",
      "that",
      "the",
      "aircraft",
      "can",
      "cover",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM aircraft",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft"
    ],
    "question": "Can you tell me the smallest, average, and largest distances available for the aircraft listed?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "smallest",
      ",",
      "average",
      ",",
      "and",
      "largest",
      "distances",
      "available",
      "for",
      "the",
      "aircraft",
      "listed",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM aircraft",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft"
    ],
    "question": "What is the range of distances, including the minimum, average, and maximum, for the different types of aircraft?",
    "question_toks": [
      "What",
      "is",
      "the",
      "range",
      "of",
      "distances",
      ",",
      "including",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      ",",
      "for",
      "the",
      "different",
      "types",
      "of",
      "aircraft",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(salary), AVG(salary), MAX(salary) FROM employee",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "salary",
      ")",
      ",",
      "AVG",
      "(",
      "salary",
      ")",
      ",",
      "MAX",
      "(",
      "salary",
      ")",
      "FROM",
      "employee"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "salary",
      ")",
      ",",
      "avg",
      "(",
      "salary",
      ")",
      ",",
      "max",
      "(",
      "salary",
      ")",
      "from",
      "employee"
    ],
    "question": "What are the lowest, average, and highest salaries among the employees?",
    "question_toks": [
      "What",
      "are",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "salaries",
      "among",
      "the",
      "employees",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(salary), AVG(salary), MAX(salary) FROM employee",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "salary",
      ")",
      ",",
      "AVG",
      "(",
      "salary",
      ")",
      ",",
      "MAX",
      "(",
      "salary",
      ")",
      "FROM",
      "employee"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "salary",
      ")",
      ",",
      "avg",
      "(",
      "salary",
      ")",
      ",",
      "max",
      "(",
      "salary",
      ")",
      "from",
      "employee"
    ],
    "question": "Can you provide the minimum, average, and maximum salary figures for the employees listed?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "salary",
      "figures",
      "for",
      "the",
      "employees",
      "listed",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(salary), AVG(salary), MAX(salary) FROM employee",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "salary",
      ")",
      ",",
      "AVG",
      "(",
      "salary",
      ")",
      ",",
      "MAX",
      "(",
      "salary",
      ")",
      "FROM",
      "employee"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "salary",
      ")",
      ",",
      "avg",
      "(",
      "salary",
      ")",
      ",",
      "max",
      "(",
      "salary",
      ")",
      "from",
      "employee"
    ],
    "question": "What is the range of employee salaries, including the minimum, average, and maximum values?",
    "question_toks": [
      "What",
      "is",
      "the",
      "range",
      "of",
      "employee",
      "salaries",
      ",",
      "including",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "values",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which aircraft has the highest distance from Los Angeles?",
    "question_toks": [
      "Which",
      "aircraft",
      "has",
      "the",
      "highest",
      "distance",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the aid and name of the flight originating from Los Angeles with the longest distance?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aid",
      "and",
      "name",
      "of",
      "the",
      "flight",
      "originating",
      "from",
      "Los",
      "Angeles",
      "with",
      "the",
      "longest",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the aircraft ID and name for the longest flight departing from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "for",
      "the",
      "longest",
      "flight",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the aircraft ID and name for the plane with the shortest distance?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "for",
      "the",
      "plane",
      "with",
      "the",
      "shortest",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "limit",
      "value"
    ],
    "question": "Can you provide the ID and name of the aircraft that travels the least distance?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "ID",
      "and",
      "name",
      "of",
      "the",
      "aircraft",
      "that",
      "travels",
      "the",
      "least",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "limit",
      "value"
    ],
    "question": "Which aircraft has the lowest distance value and what is its ID?",
    "question_toks": [
      "Which",
      "aircraft",
      "has",
      "the",
      "lowest",
      "distance",
      "value",
      "and",
      "what",
      "is",
      "its",
      "ID",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "Who is the highest-paid employee and what is their salary?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "highest",
      "-",
      "paid",
      "employee",
      "and",
      "what",
      "is",
      "their",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the name and salary of the employee with the highest earnings?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "name",
      "and",
      "salary",
      "of",
      "the",
      "employee",
      "with",
      "the",
      "highest",
      "earnings",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which employee has the highest salary and what is their name?",
    "question_toks": [
      "Which",
      "employee",
      "has",
      "the",
      "highest",
      "salary",
      "and",
      "what",
      "is",
      "their",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which aircraft ID and name correspond to the longest flight distance from Los Angeles?",
    "question_toks": [
      "Which",
      "aircraft",
      "ID",
      "and",
      "name",
      "correspond",
      "to",
      "the",
      "longest",
      "flight",
      "distance",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the ID and name of the aircraft with the highest distance for flights originating in Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "ID",
      "and",
      "name",
      "of",
      "the",
      "aircraft",
      "with",
      "the",
      "highest",
      "distance",
      "for",
      "flights",
      "originating",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the aircraft ID and name for the flight that covers the greatest distance from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "for",
      "the",
      "flight",
      "that",
      "covers",
      "the",
      "greatest",
      "distance",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the ID and name of the aircraft with the maximum distance capability?",
    "question_toks": [
      "What",
      "is",
      "the",
      "ID",
      "and",
      "name",
      "of",
      "the",
      "aircraft",
      "with",
      "the",
      "maximum",
      "distance",
      "capability",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide the aircraft ID and name that is designed for the longest distance?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "that",
      "is",
      "designed",
      "for",
      "the",
      "longest",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which aircraft has the highest distance rating, and what is its ID?",
    "question_toks": [
      "Which",
      "aircraft",
      "has",
      "the",
      "highest",
      "distance",
      "rating",
      ",",
      "and",
      "what",
      "is",
      "its",
      "ID",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE destination = 'Sydney' ORDER BY price ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Sydney",
      "'",
      "ORDER",
      "BY",
      "price",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "sydney",
      "'",
      "order",
      "by",
      "price",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the ID and name of the flight to Sydney with the lowest price?",
    "question_toks": [
      "What",
      "is",
      "the",
      "ID",
      "and",
      "name",
      "of",
      "the",
      "flight",
      "to",
      "Sydney",
      "with",
      "the",
      "lowest",
      "price",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE destination = 'Sydney' ORDER BY price ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Sydney",
      "'",
      "ORDER",
      "BY",
      "price",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "sydney",
      "'",
      "order",
      "by",
      "price",
      "asc",
      "limit",
      "value"
    ],
    "question": "Can you find the aircraft ID and name for the cheapest flight to Sydney?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "for",
      "the",
      "cheapest",
      "flight",
      "to",
      "Sydney",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE destination = 'Sydney' ORDER BY price ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Sydney",
      "'",
      "ORDER",
      "BY",
      "price",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "sydney",
      "'",
      "order",
      "by",
      "price",
      "asc",
      "limit",
      "value"
    ],
    "question": "Which flight to Sydney is the most affordable, and what are its ID and name?",
    "question_toks": [
      "Which",
      "flight",
      "to",
      "Sydney",
      "is",
      "the",
      "most",
      "affordable",
      ",",
      "and",
      "what",
      "are",
      "its",
      "ID",
      "and",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "List the names of the aircraft sorted by distance, limiting the results to the top three.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "sorted",
      "by",
      "distance",
      ",",
      "limiting",
      "the",
      "results",
      "to",
      "the",
      "top",
      "three",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Retrieve the names of the three closest aircraft based on their distance.",
    "question_toks": [
      "Retrieve",
      "the",
      "names",
      "of",
      "the",
      "three",
      "closest",
      "aircraft",
      "based",
      "on",
      "their",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Show the names of the aircraft ordered by distance, showing only the first three entries.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "ordered",
      "by",
      "distance",
      ",",
      "showing",
      "only",
      "the",
      "first",
      "three",
      "entries",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 5000 ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Find the names of aircraft with a distance less than 5000, sorted by distance, and return the first three.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "aircraft",
      "with",
      "a",
      "distance",
      "less",
      "than",
      "5000",
      ",",
      "sorted",
      "by",
      "distance",
      ",",
      "and",
      "return",
      "the",
      "first",
      "three",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 5000 ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Get the names of the three aircraft that are closest, considering only those with a distance under 5000.",
    "question_toks": [
      "Get",
      "the",
      "names",
      "of",
      "the",
      "three",
      "aircraft",
      "that",
      "are",
      "closest",
      ",",
      "considering",
      "only",
      "those",
      "with",
      "a",
      "distance",
      "under",
      "5000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 5000 ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Select the names of the three nearest aircraft based on distance, filtering those that are under 5000.",
    "question_toks": [
      "Select",
      "the",
      "names",
      "of",
      "the",
      "three",
      "nearest",
      "aircraft",
      "based",
      "on",
      "distance",
      ",",
      "filtering",
      "those",
      "that",
      "are",
      "under",
      "5000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance IN (1502, 1530, 3383) ORDER BY distance ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "IN",
      "(",
      "1502",
      ",",
      "1530",
      ",",
      "3383",
      ")",
      "ORDER",
      "BY",
      "distance",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "in",
      "(",
      "value",
      ",",
      "value",
      ",",
      "value",
      ")",
      "order",
      "by",
      "distance",
      "asc"
    ],
    "question": "Retrieve the names of aircraft whose distances are specifically 1502, 1530, or 3383, sorted by distance.",
    "question_toks": [
      "Retrieve",
      "the",
      "names",
      "of",
      "aircraft",
      "whose",
      "distances",
      "are",
      "specifically",
      "1502",
      ",",
      "1530",
      ",",
      "or",
      "3383",
      ",",
      "sorted",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance IN (1502, 1530, 3383) ORDER BY distance ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "IN",
      "(",
      "1502",
      ",",
      "1530",
      ",",
      "3383",
      ")",
      "ORDER",
      "BY",
      "distance",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "in",
      "(",
      "value",
      ",",
      "value",
      ",",
      "value",
      ")",
      "order",
      "by",
      "distance",
      "asc"
    ],
    "question": "List the aircraft names from the specified distances of 1502, 1530, and 3383, ordered by distance.",
    "question_toks": [
      "List",
      "the",
      "aircraft",
      "names",
      "from",
      "the",
      "specified",
      "distances",
      "of",
      "1502",
      ",",
      "1530",
      ",",
      "and",
      "3383",
      ",",
      "ordered",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance IN (1502, 1530, 3383) ORDER BY distance ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "IN",
      "(",
      "1502",
      ",",
      "1530",
      ",",
      "3383",
      ")",
      "ORDER",
      "BY",
      "distance",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "in",
      "(",
      "value",
      ",",
      "value",
      ",",
      "value",
      ")",
      "order",
      "by",
      "distance",
      "asc"
    ],
    "question": "Show the names of aircraft that have distances of 1502, 1530, or 3383, sorted in ascending order.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "have",
      "distances",
      "of",
      "1502",
      ",",
      "1530",
      ",",
      "or",
      "3383",
      ",",
      "sorted",
      "in",
      "ascending",
      "order",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 5000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aircraft have a distance capacity greater than 5000?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "capacity",
      "greater",
      "than",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 5000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you list the names of aircraft that can travel more than 5000 miles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "more",
      "than",
      "5000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 5000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the names of the aircraft with a distance rating exceeding 5000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "with",
      "a",
      "distance",
      "rating",
      "exceeding",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT distance FROM Aircraft WHERE name = 'Boeing 737-800')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "distance",
      "FROM",
      "Aircraft",
      "WHERE",
      "name",
      "=",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "=",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ")"
    ],
    "question": "Which aircraft have a distance capacity greater than that of the Boeing 737-800?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "capacity",
      "greater",
      "than",
      "that",
      "of",
      "the",
      "Boeing",
      "737",
      "-",
      "800",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT distance FROM Aircraft WHERE name = 'Boeing 737-800')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "distance",
      "FROM",
      "Aircraft",
      "WHERE",
      "name",
      "=",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "=",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ")"
    ],
    "question": "Can you tell me the names of aircraft that can fly farther than the Boeing 737-800?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "fly",
      "farther",
      "than",
      "the",
      "Boeing",
      "737",
      "-",
      "800",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT distance FROM Aircraft WHERE name = 'Boeing 737-800')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "distance",
      "FROM",
      "Aircraft",
      "WHERE",
      "name",
      "=",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "=",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ")"
    ],
    "question": "What are the names of aircraft that exceed the distance of the Boeing 737-800?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "exceed",
      "the",
      "distance",
      "of",
      "the",
      "Boeing",
      "737",
      "-",
      "800",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT avg(distance) FROM Aircraft WHERE name != 'Embraer ERJ-145')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      "WHERE",
      "name",
      "!",
      "=",
      "'",
      "Embraer",
      "ERJ",
      "-",
      "145",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      "where",
      "name",
      "!",
      "=",
      "'",
      "embraer",
      "erj",
      "-",
      "value",
      "'",
      ")"
    ],
    "question": "Which aircraft have a distance capacity greater than the average of all aircraft except the Embraer ERJ-145?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "capacity",
      "greater",
      "than",
      "the",
      "average",
      "of",
      "all",
      "aircraft",
      "except",
      "the",
      "Embraer",
      "ERJ",
      "-",
      "145",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT avg(distance) FROM Aircraft WHERE name != 'Embraer ERJ-145')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      "WHERE",
      "name",
      "!",
      "=",
      "'",
      "Embraer",
      "ERJ",
      "-",
      "145",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      "where",
      "name",
      "!",
      "=",
      "'",
      "embraer",
      "erj",
      "-",
      "value",
      "'",
      ")"
    ],
    "question": "Can you provide the names of aircraft that can travel more than the average distance of all aircraft excluding the Embraer ERJ-145?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "more",
      "than",
      "the",
      "average",
      "distance",
      "of",
      "all",
      "aircraft",
      "excluding",
      "the",
      "Embraer",
      "ERJ",
      "-",
      "145",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT avg(distance) FROM Aircraft WHERE name != 'Embraer ERJ-145')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      "WHERE",
      "name",
      "!",
      "=",
      "'",
      "Embraer",
      "ERJ",
      "-",
      "145",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      "where",
      "name",
      "!",
      "=",
      "'",
      "embraer",
      "erj",
      "-",
      "value",
      "'",
      ")"
    ],
    "question": "What are the names of the aircraft that exceed the average distance of all but the Embraer ERJ-145?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "that",
      "exceed",
      "the",
      "average",
      "distance",
      "of",
      "all",
      "but",
      "the",
      "Embraer",
      "ERJ",
      "-",
      "145",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > (SELECT avg(distance) FROM aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "Which aircraft have a distance greater than the average distance of all aircraft?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "the",
      "average",
      "distance",
      "of",
      "all",
      "aircraft",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > (SELECT avg(distance) FROM aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "Can you list the names of aircraft that exceed the average distance?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "exceed",
      "the",
      "average",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > (SELECT avg(distance) FROM aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "What are the names of the aircraft that have a distance greater than the average distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "that",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "the",
      "average",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > (SELECT avg(salary) FROM employee)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "salary",
      ")",
      "FROM",
      "employee",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "employee",
      ")"
    ],
    "question": "Which employees earn more than the average salary?",
    "question_toks": [
      "Which",
      "employees",
      "earn",
      "more",
      "than",
      "the",
      "average",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > (SELECT avg(salary) FROM employee)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "salary",
      ")",
      "FROM",
      "employee",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "employee",
      ")"
    ],
    "question": "Can you provide the names of employees whose salaries are above the average?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "employees",
      "whose",
      "salaries",
      "are",
      "above",
      "the",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > (SELECT avg(salary) FROM employee)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "salary",
      ")",
      "FROM",
      "employee",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "employee",
      ")"
    ],
    "question": "What are the names of employees that have salaries exceeding the average salary?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "employees",
      "that",
      "have",
      "salaries",
      "exceeding",
      "the",
      "average",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE distance < (SELECT avg(distance) FROM flight)",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "distance",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      ")"
    ],
    "question": "Which flight destinations are associated with distances shorter than the average distance?",
    "question_toks": [
      "Which",
      "flight",
      "destinations",
      "are",
      "associated",
      "with",
      "distances",
      "shorter",
      "than",
      "the",
      "average",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE distance < (SELECT avg(distance) FROM flight)",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "distance",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      ")"
    ],
    "question": "Can you list the destinations of flights that have a distance less than the average?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "destinations",
      "of",
      "flights",
      "that",
      "have",
      "a",
      "distance",
      "less",
      "than",
      "the",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE distance < (SELECT avg(distance) FROM flight)",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "<",
      "(",
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "distance",
      "<",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      ")"
    ],
    "question": "What are the flight destinations that have distances below the average distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "flight",
      "destinations",
      "that",
      "have",
      "distances",
      "below",
      "the",
      "average",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees earn more than $150,000?",
    "question_toks": [
      "Which",
      "employees",
      "earn",
      "more",
      "than",
      "$",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names of employees with salaries exceeding $150,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "with",
      "salaries",
      "exceeding",
      "$",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees that have salaries greater than $150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "that",
      "have",
      "salaries",
      "greater",
      "than",
      "$",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary higher than $120,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "higher",
      "than",
      "$",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names of employees earning above $120,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "employees",
      "earning",
      "above",
      "$",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees that make more than $120,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "that",
      "make",
      "more",
      "than",
      "$",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have salaries that exceed $100,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "salaries",
      "that",
      "exceed",
      "$",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names of employees with salaries over $100,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "with",
      "salaries",
      "over",
      "$",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees earning more than $100,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "earning",
      "more",
      "than",
      "$",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees earn more than $150,000?",
    "question_toks": [
      "Which",
      "employees",
      "earn",
      "more",
      "than",
      "$",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names of employees with salaries exceeding $150,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "with",
      "salaries",
      "exceeding",
      "$",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees that have a salary greater than $150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "that",
      "have",
      "a",
      "salary",
      "greater",
      "than",
      "$",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE price > 250",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "price",
      ">",
      "250"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "price",
      ">",
      "value"
    ],
    "question": "What are the aircraft IDs for flights priced above $250?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aircraft",
      "IDs",
      "for",
      "flights",
      "priced",
      "above",
      "$",
      "250",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE price > 250",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "price",
      ">",
      "250"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "price",
      ">",
      "value"
    ],
    "question": "Can you provide the IDs of flights that have a ticket price over $250?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "IDs",
      "of",
      "flights",
      "that",
      "have",
      "a",
      "ticket",
      "price",
      "over",
      "$",
      "250",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE price > 250",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "price",
      ">",
      "250"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "price",
      ">",
      "value"
    ],
    "question": "Which flights have a price greater than $250, and what are their aircraft IDs?",
    "question_toks": [
      "Which",
      "flights",
      "have",
      "a",
      "price",
      "greater",
      "than",
      "$",
      "250",
      ",",
      "and",
      "what",
      "are",
      "their",
      "aircraft",
      "IDs",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 4000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "4000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Which aircraft can travel less than 4000 miles?",
    "question_toks": [
      "Which",
      "aircraft",
      "can",
      "travel",
      "less",
      "than",
      "4000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 4000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "4000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you list the names of aircraft with a maximum distance under 4000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "aircraft",
      "with",
      "a",
      "maximum",
      "distance",
      "under",
      "4000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 4000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "4000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What are the names of aircraft that have a range of less than 4000 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "have",
      "a",
      "range",
      "of",
      "less",
      "than",
      "4000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "What is the salary of James Smith?",
    "question_toks": [
      "What",
      "is",
      "the",
      "salary",
      "of",
      "James",
      "Smith",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "Can you provide the salary information for James Smith?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "salary",
      "information",
      "for",
      "James",
      "Smith",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "I'd like to know how much James Smith earns.",
    "question_toks": [
      "I",
      "'",
      "d",
      "like",
      "to",
      "know",
      "how",
      "much",
      "James",
      "Smith",
      "earns",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'Mary Johnson'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "Mary",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "mary",
      "johnson",
      "'"
    ],
    "question": "What is Mary Johnson's salary?",
    "question_toks": [
      "What",
      "is",
      "Mary",
      "Johnson",
      "'",
      "s",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'Mary Johnson'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "Mary",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "mary",
      "johnson",
      "'"
    ],
    "question": "Can you tell me how much Mary Johnson makes?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "how",
      "much",
      "Mary",
      "Johnson",
      "makes",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'Mary Johnson'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "Mary",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "mary",
      "johnson",
      "'"
    ],
    "question": "I'd like to find out the earnings of Mary Johnson.",
    "question_toks": [
      "I",
      "'",
      "d",
      "like",
      "to",
      "find",
      "out",
      "the",
      "earnings",
      "of",
      "Mary",
      "Johnson",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'John Williams'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "John",
      "Williams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "john",
      "williams",
      "'"
    ],
    "question": "How much does John Williams earn?",
    "question_toks": [
      "How",
      "much",
      "does",
      "John",
      "Williams",
      "earn",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'John Williams'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "John",
      "Williams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "john",
      "williams",
      "'"
    ],
    "question": "What is the salary of John Williams?",
    "question_toks": [
      "What",
      "is",
      "the",
      "salary",
      "of",
      "John",
      "Williams",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'John Williams'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "John",
      "Williams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "john",
      "williams",
      "'"
    ],
    "question": "Can you provide salary details for John Williams?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "salary",
      "details",
      "for",
      "John",
      "Williams",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "Can you show me the salary of James Smith from the employee table?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "salary",
      "of",
      "James",
      "Smith",
      "from",
      "the",
      "employee",
      "table",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "What is the salary for the employee named James Smith?",
    "question_toks": [
      "What",
      "is",
      "the",
      "salary",
      "for",
      "the",
      "employee",
      "named",
      "James",
      "Smith",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "Please provide the salary information for James Smith.",
    "question_toks": [
      "Please",
      "provide",
      "the",
      "salary",
      "information",
      "for",
      "James",
      "Smith",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What is the price and aid for flights going to Chicago?",
    "question_toks": [
      "What",
      "is",
      "the",
      "price",
      "and",
      "aid",
      "for",
      "flights",
      "going",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you give me the aid and price details for flights heading to Chicago?",
    "question_toks": [
      "Can",
      "you",
      "give",
      "me",
      "the",
      "aid",
      "and",
      "price",
      "details",
      "for",
      "flights",
      "heading",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Show me the aid and price for flights with Chicago as the destination.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "aid",
      "and",
      "price",
      "for",
      "flights",
      "with",
      "Chicago",
      "as",
      "the",
      "destination",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE name = 'Boeing 737-800'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "name",
      "=",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "=",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "What is the distance for the aircraft named Boeing 737-800?",
    "question_toks": [
      "What",
      "is",
      "the",
      "distance",
      "for",
      "the",
      "aircraft",
      "named",
      "Boeing",
      "737",
      "-",
      "800",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE name = 'Boeing 737-800'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "name",
      "=",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "=",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Can you provide the distance details for the Boeing 737-800?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "distance",
      "details",
      "for",
      "the",
      "Boeing",
      "737",
      "-",
      "800",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE name = 'Boeing 737-800'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "name",
      "=",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "=",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'"
    ],
    "question": "Please tell me the distance for the aircraft called Boeing 737-800.",
    "question_toks": [
      "Please",
      "tell",
      "me",
      "the",
      "distance",
      "for",
      "the",
      "aircraft",
      "called",
      "Boeing",
      "737",
      "-",
      "800",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination, price FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "What are the destinations and prices for flights originating from Los Angeles, sorted by destination?",
    "question_toks": [
      "What",
      "are",
      "the",
      "destinations",
      "and",
      "prices",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "by",
      "destination",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination, price FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Can you list the destinations and their associated prices for flights that start in Los Angeles, ordered by destination?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "destinations",
      "and",
      "their",
      "associated",
      "prices",
      "for",
      "flights",
      "that",
      "start",
      "in",
      "Los",
      "Angeles",
      ",",
      "ordered",
      "by",
      "destination",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination, price FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Please provide the destinations and prices for flights departing from Los Angeles, arranged in order of destination.",
    "question_toks": [
      "Please",
      "provide",
      "the",
      "destinations",
      "and",
      "prices",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "in",
      "order",
      "of",
      "destination",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft ORDER BY distance",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "order",
      "by",
      "distance"
    ],
    "question": "What are the names and distances of all aircraft, sorted by distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "all",
      "aircraft",
      ",",
      "sorted",
      "by",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft ORDER BY distance",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "order",
      "by",
      "distance"
    ],
    "question": "Can you list the aircraft names along with their distances, organized in ascending order of distance?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "aircraft",
      "names",
      "along",
      "with",
      "their",
      "distances",
      ",",
      "organized",
      "in",
      "ascending",
      "order",
      "of",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft ORDER BY distance",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "order",
      "by",
      "distance"
    ],
    "question": "Please provide the names and distances of the aircraft, arranged from the shortest to the longest distance.",
    "question_toks": [
      "Please",
      "provide",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "the",
      "aircraft",
      ",",
      "arranged",
      "from",
      "the",
      "shortest",
      "to",
      "the",
      "longest",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc"
    ],
    "question": "What are the names and salaries of employees, sorted from highest to lowest salary?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      ",",
      "sorted",
      "from",
      "highest",
      "to",
      "lowest",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc"
    ],
    "question": "Can you provide a list of employee names along with their salaries, organized in descending order of salary?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "list",
      "of",
      "employee",
      "names",
      "along",
      "with",
      "their",
      "salaries",
      ",",
      "organized",
      "in",
      "descending",
      "order",
      "of",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc"
    ],
    "question": "Please show the names and salaries of employees, arranged from the highest salary to the lowest.",
    "question_toks": [
      "Please",
      "show",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      ",",
      "arranged",
      "from",
      "the",
      "highest",
      "salary",
      "to",
      "the",
      "lowest",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "What are the destinations from Los Angeles, sorted in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "destinations",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "List the destinations available from Los Angeles, ordered by name.",
    "question_toks": [
      "List",
      "the",
      "destinations",
      "available",
      "from",
      "Los",
      "Angeles",
      ",",
      "ordered",
      "by",
      "name",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Show me the destinations departing from Los Angeles, arranged in order.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "destinations",
      "departing",
      "from",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "in",
      "order",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, price FROM flight WHERE origin = 'Los Angeles' ORDER BY price",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "price"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "price"
    ],
    "question": "What are the prices for flights originating from Los Angeles, sorted from lowest to highest?",
    "question_toks": [
      "What",
      "are",
      "the",
      "prices",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "from",
      "lowest",
      "to",
      "highest",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, price FROM flight WHERE origin = 'Los Angeles' ORDER BY price",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "price"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "price"
    ],
    "question": "List the flight prices from Los Angeles, organized by cost.",
    "question_toks": [
      "List",
      "the",
      "flight",
      "prices",
      "from",
      "Los",
      "Angeles",
      ",",
      "organized",
      "by",
      "cost",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, price FROM flight WHERE origin = 'Los Angeles' ORDER BY price",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "price"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "price"
    ],
    "question": "Show me the prices of flights departing from Los Angeles, arranged in ascending order.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "prices",
      "of",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "in",
      "ascending",
      "order",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, distance FROM flight WHERE origin = 'Los Angeles' ORDER BY distance",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance"
    ],
    "question": "What are the distances for flights leaving from Los Angeles, sorted by distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distances",
      "for",
      "flights",
      "leaving",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "by",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, distance FROM flight WHERE origin = 'Los Angeles' ORDER BY distance",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance"
    ],
    "question": "List the distances for flights originating in Los Angeles, arranged from shortest to longest.",
    "question_toks": [
      "List",
      "the",
      "distances",
      "for",
      "flights",
      "originating",
      "in",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "from",
      "shortest",
      "to",
      "longest",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, distance FROM flight WHERE origin = 'Los Angeles' ORDER BY distance",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance"
    ],
    "question": "Show me the distances of flights departing from Los Angeles, ordered by the distance covered.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "distances",
      "of",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      ",",
      "ordered",
      "by",
      "the",
      "distance",
      "covered",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the destinations for flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "destinations",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you list the destinations for flights that depart from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "destinations",
      "for",
      "flights",
      "that",
      "depart",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Which places can I fly to from Los Angeles?",
    "question_toks": [
      "Which",
      "places",
      "can",
      "I",
      "fly",
      "to",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the prices for flights leaving from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "prices",
      "for",
      "flights",
      "leaving",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the flight prices for trips starting in Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "flight",
      "prices",
      "for",
      "trips",
      "starting",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "How much do flights cost that originate in Los Angeles?",
    "question_toks": [
      "How",
      "much",
      "do",
      "flights",
      "cost",
      "that",
      "originate",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the distances for flights that start from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distances",
      "for",
      "flights",
      "that",
      "start",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you tell me the distances of flights departing from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "distances",
      "of",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "How far do flights travel that originate in Los Angeles?",
    "question_toks": [
      "How",
      "far",
      "do",
      "flights",
      "travel",
      "that",
      "originate",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, price FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the distance and price for flights from Los Angeles to Chicago?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, price FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you provide the distance and cost for flights originating in Los Angeles and heading to Chicago?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "originating",
      "in",
      "Los",
      "Angeles",
      "and",
      "heading",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, price FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Show me the distance and price of flights departing from Los Angeles to Chicago.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "distance",
      "and",
      "price",
      "of",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Which aircraft have a distance capacity of less than 5000?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "capacity",
      "of",
      "less",
      "than",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you list the names and distances of aircraft that can travel under 5000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "under",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What are the names and ranges of aircraft that have a distance capability of below 5000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "ranges",
      "of",
      "aircraft",
      "that",
      "have",
      "a",
      "distance",
      "capability",
      "of",
      "below",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees with a salary greater than 150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "a",
      "salary",
      "greater",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you tell me the names and salaries of employees earning over 150,000?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "earning",
      "over",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the names and salaries of employees that make more than 150,000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "that",
      "make",
      "more",
      "than",
      "150",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Washington D.C.'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'"
    ],
    "question": "What is the average price for flights departing from Los Angeles to Washington D.C.?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Washington D.C.'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'"
    ],
    "question": "Can you tell me the average cost of flights from Los Angeles to Washington D.C.?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "average",
      "cost",
      "of",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Washington D.C.'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'"
    ],
    "question": "How much do flights from Los Angeles to Washington D.C. typically cost on average?",
    "question_toks": [
      "How",
      "much",
      "do",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "typically",
      "cost",
      "on",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What is the average ticket price for flights from Los Angeles to Chicago?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "ticket",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you provide the average price for flights that go from Los Angeles to Chicago?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "price",
      "for",
      "flights",
      "that",
      "go",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "How much do flights from Los Angeles to Chicago generally cost on average?",
    "question_toks": [
      "How",
      "much",
      "do",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "generally",
      "cost",
      "on",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "What is the average price for flights from Los Angeles to Dallas?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "Can you tell me the average cost of flights from Los Angeles to Dallas?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "average",
      "cost",
      "of",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "How much do flights from Los Angeles to Dallas usually cost on average?",
    "question_toks": [
      "How",
      "much",
      "do",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Dallas",
      "usually",
      "cost",
      "on",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the top three destinations from Los Angeles based on the shortest distances and their prices?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "three",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "based",
      "on",
      "the",
      "shortest",
      "distances",
      "and",
      "their",
      "prices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you list the three destinations from Los Angeles that are closest, along with their prices?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "three",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "that",
      "are",
      "closest",
      ",",
      "along",
      "with",
      "their",
      "prices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Please provide the three nearest destinations from Los Angeles and their respective prices.",
    "question_toks": [
      "Please",
      "provide",
      "the",
      "three",
      "nearest",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "and",
      "their",
      "respective",
      "prices",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance IN (SELECT distance FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "IN",
      "(",
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "in",
      "(",
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only",
      ")"
    ],
    "question": "Which aircraft have distances that match the three shortest flights originating from Los Angeles?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "distances",
      "that",
      "match",
      "the",
      "three",
      "shortest",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance IN (SELECT distance FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "IN",
      "(",
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "in",
      "(",
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only",
      ")"
    ],
    "question": "Can you identify the aircraft with the same distances as the three closest flights from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "aircraft",
      "with",
      "the",
      "same",
      "distances",
      "as",
      "the",
      "three",
      "closest",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance IN (SELECT distance FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "IN",
      "(",
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "in",
      "(",
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only",
      ")"
    ],
    "question": "What are the names and distances of aircraft that correspond to the three shortest flights from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "correspond",
      "to",
      "the",
      "three",
      "shortest",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary IN (SELECT price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      "IN",
      "(",
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      "in",
      "(",
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only",
      ")"
    ],
    "question": "Which employees have salaries that match the prices of the three cheapest flights from Los Angeles?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "salaries",
      "that",
      "match",
      "the",
      "prices",
      "of",
      "the",
      "three",
      "cheapest",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary IN (SELECT price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      "IN",
      "(",
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      "in",
      "(",
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only",
      ")"
    ],
    "question": "Can you provide the names and salaries of employees whose salaries correspond to the prices of the three lowest flights from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "whose",
      "salaries",
      "correspond",
      "to",
      "the",
      "prices",
      "of",
      "the",
      "three",
      "lowest",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary IN (SELECT price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      "IN",
      "(",
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      "in",
      "(",
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only",
      ")"
    ],
    "question": "What are the names and salaries of employees that align with the prices of the three most affordable flights from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "that",
      "align",
      "with",
      "the",
      "prices",
      "of",
      "the",
      "three",
      "most",
      "affordable",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance), AVG(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the average distance and price for flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance), AVG(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the average distance and cost of flights that depart from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "of",
      "flights",
      "that",
      "depart",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance), AVG(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "How much is the average distance and fare for flights starting in Los Angeles?",
    "question_toks": [
      "How",
      "much",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "fare",
      "for",
      "flights",
      "starting",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance), AVG(price) FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What is the average distance and price for flights that arrive in Chicago?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "that",
      "arrive",
      "in",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance), AVG(price) FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you tell me the average distance and cost of flights heading to Chicago?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "of",
      "flights",
      "heading",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance), AVG(price) FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "How much do flights to Chicago typically cost, and what is their average distance?",
    "question_toks": [
      "How",
      "much",
      "do",
      "flights",
      "to",
      "Chicago",
      "typically",
      "cost",
      ",",
      "and",
      "what",
      "is",
      "their",
      "average",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance), AVG(price) FROM flight WHERE destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "What are the average distance and price for flights going to Dallas?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "going",
      "to",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance), AVG(price) FROM flight WHERE destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "Can you provide the average distance and fare for flights that land in Dallas?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "distance",
      "and",
      "fare",
      "for",
      "flights",
      "that",
      "land",
      "in",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT AVG(distance), AVG(price) FROM flight WHERE destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "How much is the average distance and cost for flights flying to Dallas?",
    "question_toks": [
      "How",
      "much",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "flying",
      "to",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the average distance and price of flights departing from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "of",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the average distance and cost for flights that have Los Angeles as their origin?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "that",
      "have",
      "Los",
      "Angeles",
      "as",
      "their",
      "origin",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "How much is the average distance and price for flights originating from Los Angeles?",
    "question_toks": [
      "How",
      "much",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the average distance and price for flights heading to Chicago?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "heading",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you tell me the average distance and cost for flights that go to Chicago?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "that",
      "go",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "How much is the average distance and price for flights with Chicago as their destination?",
    "question_toks": [
      "How",
      "much",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "with",
      "Chicago",
      "as",
      "their",
      "destination",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "What is the average distance and price for flights associated with aid number 3?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "associated",
      "with",
      "aid",
      "number",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "Can you provide the average distance and cost for flights linked to aid 3?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "linked",
      "to",
      "aid",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "How much is the average distance and price for flights that have aid 3?",
    "question_toks": [
      "How",
      "much",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "that",
      "have",
      "aid",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin FROM flight GROUP BY origin ORDER BY count(*) LIMIT 1",
    "query_toks": [
      "SELECT",
      "origin",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "origin",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      "from",
      "flight",
      "group",
      "by",
      "origin",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "limit",
      "value"
    ],
    "question": "Which origin appears most frequently in the flight records?",
    "question_toks": [
      "Which",
      "origin",
      "appears",
      "most",
      "frequently",
      "in",
      "the",
      "flight",
      "records",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin FROM flight GROUP BY origin ORDER BY count(*) LIMIT 1",
    "query_toks": [
      "SELECT",
      "origin",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "origin",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      "from",
      "flight",
      "group",
      "by",
      "origin",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "limit",
      "value"
    ],
    "question": "What is the most common origin for flights in the dataset?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "common",
      "origin",
      "for",
      "flights",
      "in",
      "the",
      "dataset",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin FROM flight GROUP BY origin ORDER BY count(*) LIMIT 1",
    "query_toks": [
      "SELECT",
      "origin",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "origin",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      "from",
      "flight",
      "group",
      "by",
      "origin",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "limit",
      "value"
    ],
    "question": "Identify the origin with the highest number of flight entries.",
    "question_toks": [
      "Identify",
      "the",
      "origin",
      "with",
      "the",
      "highest",
      "number",
      "of",
      "flight",
      "entries",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, COUNT(*) AS flight_count FROM flight GROUP BY destination ORDER BY flight_count DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "AS",
      "flight_count",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "flight_count",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "flight_count",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "flight_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which destination has the highest number of flights recorded?",
    "question_toks": [
      "Which",
      "destination",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "flights",
      "recorded",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, COUNT(*) AS flight_count FROM flight GROUP BY destination ORDER BY flight_count DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "AS",
      "flight_count",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "flight_count",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "flight_count",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "flight_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the most popular destination based on flight frequency?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "popular",
      "destination",
      "based",
      "on",
      "flight",
      "frequency",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, COUNT(*) AS flight_count FROM flight GROUP BY destination ORDER BY flight_count DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "AS",
      "flight_count",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "flight_count",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "flight_count",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "flight_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "Identify the destination with the greatest number of flight entries.",
    "question_toks": [
      "Identify",
      "the",
      "destination",
      "with",
      "the",
      "greatest",
      "number",
      "of",
      "flight",
      "entries",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE price = (SELECT MAX(price) FROM flight) GROUP BY destination",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      ")",
      "GROUP",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      "=",
      "(",
      "select",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight",
      ")",
      "group",
      "by",
      "destination"
    ],
    "question": "Which destination corresponds to the highest flight price?",
    "question_toks": [
      "Which",
      "destination",
      "corresponds",
      "to",
      "the",
      "highest",
      "flight",
      "price",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE price = (SELECT MAX(price) FROM flight) GROUP BY destination",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      ")",
      "GROUP",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      "=",
      "(",
      "select",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight",
      ")",
      "group",
      "by",
      "destination"
    ],
    "question": "What destination is associated with the most expensive flight?",
    "question_toks": [
      "What",
      "destination",
      "is",
      "associated",
      "with",
      "the",
      "most",
      "expensive",
      "flight",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE price = (SELECT MAX(price) FROM flight) GROUP BY destination",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      ")",
      "GROUP",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      "=",
      "(",
      "select",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight",
      ")",
      "group",
      "by",
      "destination"
    ],
    "question": "Identify the destination that has the highest fare in the flight records.",
    "question_toks": [
      "Identify",
      "the",
      "destination",
      "that",
      "has",
      "the",
      "highest",
      "fare",
      "in",
      "the",
      "flight",
      "records",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, COUNT(*) as flight_count FROM flight GROUP BY destination ORDER BY flight_count DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "as",
      "flight_count",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "flight_count",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "flight_count",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "flight_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which destination has the highest number of flights from Los Angeles?",
    "question_toks": [
      "Which",
      "destination",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, COUNT(*) as flight_count FROM flight GROUP BY destination ORDER BY flight_count DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "as",
      "flight_count",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "flight_count",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "flight_count",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "flight_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the most popular flight destination based on the number of departures?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "popular",
      "flight",
      "destination",
      "based",
      "on",
      "the",
      "number",
      "of",
      "departures",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, COUNT(*) as flight_count FROM flight GROUP BY destination ORDER BY flight_count DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "as",
      "flight_count",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "flight_count",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "flight_count",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "flight_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "Identify the destination with the greatest frequency of flights originating from Los Angeles.",
    "question_toks": [
      "Identify",
      "the",
      "destination",
      "with",
      "the",
      "greatest",
      "frequency",
      "of",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Can you tell me the most frequently flown destination from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "most",
      "frequently",
      "flown",
      "destination",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "What destination has the most flights departing from Los Angeles?",
    "question_toks": [
      "What",
      "destination",
      "has",
      "the",
      "most",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Which destination is the top choice for flights leaving Los Angeles?",
    "question_toks": [
      "Which",
      "destination",
      "is",
      "the",
      "top",
      "choice",
      "for",
      "flights",
      "leaving",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1 OFFSET 0",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      "OFFSET",
      "0"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      "offset",
      "value"
    ],
    "question": "What is the leading destination based on the count of flights?",
    "question_toks": [
      "What",
      "is",
      "the",
      "leading",
      "destination",
      "based",
      "on",
      "the",
      "count",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1 OFFSET 0",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      "OFFSET",
      "0"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      "offset",
      "value"
    ],
    "question": "Which destination ranks highest in terms of flight frequency?",
    "question_toks": [
      "Which",
      "destination",
      "ranks",
      "highest",
      "in",
      "terms",
      "of",
      "flight",
      "frequency",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1 OFFSET 0",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      "OFFSET",
      "0"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      "offset",
      "value"
    ],
    "question": "Identify the destination with the most flights scheduled.",
    "question_toks": [
      "Identify",
      "the",
      "destination",
      "with",
      "the",
      "most",
      "flights",
      "scheduled",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which flight IDs correspond to distances greater than 1000?",
    "question_toks": [
      "Which",
      "flight",
      "IDs",
      "correspond",
      "to",
      "distances",
      "greater",
      "than",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you list the aid values for flights that have a distance exceeding 1000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "aid",
      "values",
      "for",
      "flights",
      "that",
      "have",
      "a",
      "distance",
      "exceeding",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the aid numbers for flights with a distance over 1000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aid",
      "numbers",
      "for",
      "flights",
      "with",
      "a",
      "distance",
      "over",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "What flight IDs have prices below 300?",
    "question_toks": [
      "What",
      "flight",
      "IDs",
      "have",
      "prices",
      "below",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Can you provide the aid values for flights that cost less than 300?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "aid",
      "values",
      "for",
      "flights",
      "that",
      "cost",
      "less",
      "than",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Which aid numbers correspond to flights priced under 300?",
    "question_toks": [
      "Which",
      "aid",
      "numbers",
      "correspond",
      "to",
      "flights",
      "priced",
      "under",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the aid values for flights heading to Chicago?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aid",
      "values",
      "for",
      "flights",
      "heading",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you list the flight IDs for destinations that are Chicago?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "flight",
      "IDs",
      "for",
      "destinations",
      "that",
      "are",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Which flight IDs correspond to flights with Chicago as the destination?",
    "question_toks": [
      "Which",
      "flight",
      "IDs",
      "correspond",
      "to",
      "flights",
      "with",
      "Chicago",
      "as",
      "the",
      "destination",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which flight IDs correspond to distances greater than 1000?",
    "question_toks": [
      "Which",
      "flight",
      "IDs",
      "correspond",
      "to",
      "distances",
      "greater",
      "than",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you list the aid values for flights that have a distance exceeding 1000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "aid",
      "values",
      "for",
      "flights",
      "that",
      "have",
      "a",
      "distance",
      "exceeding",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the aid numbers for flights with distances over 1000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aid",
      "numbers",
      "for",
      "flights",
      "with",
      "distances",
      "over",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the names of the aircraft that can travel more than 1500 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "that",
      "can",
      "travel",
      "more",
      "than",
      "1500",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you provide the names of aircraft with a distance capacity greater than 1500?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "aircraft",
      "with",
      "a",
      "distance",
      "capacity",
      "greater",
      "than",
      "1500",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aircraft have a range that exceeds 1500 miles?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "range",
      "that",
      "exceeds",
      "1500",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE distance > 2000",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the prices for flights that travel over 2000 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "prices",
      "for",
      "flights",
      "that",
      "travel",
      "over",
      "2000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE distance > 2000",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you tell me the flight prices for distances greater than 2000?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "flight",
      "prices",
      "for",
      "distances",
      "greater",
      "than",
      "2000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE distance > 2000",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the costs associated with flights that have a distance of more than 2000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "costs",
      "associated",
      "with",
      "flights",
      "that",
      "have",
      "a",
      "distance",
      "of",
      "more",
      "than",
      "2000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "How many flights have a distance between 1000 and 5000?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "have",
      "a",
      "distance",
      "between",
      "1000",
      "and",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What is the total number of flights that fall within the distance range of 1000 to 5000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "flights",
      "that",
      "fall",
      "within",
      "the",
      "distance",
      "range",
      "of",
      "1000",
      "to",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Can you tell me the count of flights whose distances are between 1000 and 5000?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "count",
      "of",
      "flights",
      "whose",
      "distances",
      "are",
      "between",
      "1000",
      "and",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "How many aircraft are there with a distance less than 5000?",
    "question_toks": [
      "How",
      "many",
      "aircraft",
      "are",
      "there",
      "with",
      "a",
      "distance",
      "less",
      "than",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What is the total count of aircraft that have a distance under 5000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "count",
      "of",
      "aircraft",
      "that",
      "have",
      "a",
      "distance",
      "under",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you provide the number of aircraft with distances below 5000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "number",
      "of",
      "aircraft",
      "with",
      "distances",
      "below",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "How many flights are priced under 300?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "are",
      "priced",
      "under",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "What is the total number of flights with prices below 300?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "flights",
      "with",
      "prices",
      "below",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Can you tell me the count of flights that cost less than 300?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "count",
      "of",
      "flights",
      "that",
      "cost",
      "less",
      "than",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What are the names and distances of aircraft that have a distance less than 8000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "have",
      "a",
      "distance",
      "less",
      "than",
      "8000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you list the names and distances of all aircraft with a distance under 8000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "all",
      "aircraft",
      "with",
      "a",
      "distance",
      "under",
      "8000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Show me the names and distances of aircraft that travel less than 8000 miles.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "travel",
      "less",
      "than",
      "8000",
      "miles",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary greater than 100,000 and what are their names?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "greater",
      "than",
      "100",
      ",",
      "000",
      "and",
      "what",
      "are",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names and salaries of employees earning over 100,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "earning",
      "over",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the names and salaries of employees who make more than 100,000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "who",
      "make",
      "more",
      "than",
      "100",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "What are the origins and destinations of flights that cost less than 300?",
    "question_toks": [
      "What",
      "are",
      "the",
      "origins",
      "and",
      "destinations",
      "of",
      "flights",
      "that",
      "cost",
      "less",
      "than",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Can you show me the origin and destination of flights priced under 300?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "origin",
      "and",
      "destination",
      "of",
      "flights",
      "priced",
      "under",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "List the origins and destinations of flights that are cheaper than 300.",
    "question_toks": [
      "List",
      "the",
      "origins",
      "and",
      "destinations",
      "of",
      "flights",
      "that",
      "are",
      "cheaper",
      "than",
      "300",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Which aircraft have a distance capacity of less than 8000?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "capacity",
      "of",
      "less",
      "than",
      "8000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you list the names and distances of aircraft that can fly under 8000 miles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "can",
      "fly",
      "under",
      "8000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What are the names and distances of the aircraft with a maximum distance under 8000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "the",
      "aircraft",
      "with",
      "a",
      "maximum",
      "distance",
      "under",
      "8000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees earning more than 150000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "earning",
      "more",
      "than",
      "150000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names and salaries of employees whose salary exceeds 150000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "whose",
      "salary",
      "exceeds",
      "150000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "What are the names and salaries of employees that have a salary greater than 150000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "that",
      "have",
      "a",
      "salary",
      "greater",
      "than",
      "150000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, price FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "What destinations have flight prices below 300?",
    "question_toks": [
      "What",
      "destinations",
      "have",
      "flight",
      "prices",
      "below",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, price FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Can you list the destinations along with their prices for flights costing less than 300?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "destinations",
      "along",
      "with",
      "their",
      "prices",
      "for",
      "flights",
      "costing",
      "less",
      "than",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, price FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Which flight destinations are available for under 300?",
    "question_toks": [
      "Which",
      "flight",
      "destinations",
      "are",
      "available",
      "for",
      "under",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the minimum, average, and maximum distances of flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distances",
      "of",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the lowest, average, and highest flight distances for departures from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "flight",
      "distances",
      "for",
      "departures",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "I would like to know the minimum, average, and maximum distances for flights that leave from Los Angeles.",
    "question_toks": [
      "I",
      "would",
      "like",
      "to",
      "know",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distances",
      "for",
      "flights",
      "that",
      "leave",
      "from",
      "Los",
      "Angeles",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the minimum, average, and maximum prices for flights departing from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "prices",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you tell me the lowest, average, and highest prices of flights that start from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "prices",
      "of",
      "flights",
      "that",
      "start",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "I'd like to find out the minimum, average, and maximum flight prices for departures from Los Angeles.",
    "question_toks": [
      "I",
      "'",
      "d",
      "like",
      "to",
      "find",
      "out",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "flight",
      "prices",
      "for",
      "departures",
      "from",
      "Los",
      "Angeles",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM aircraft",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft"
    ],
    "question": "What are the minimum, average, and maximum distances for the aircraft listed?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distances",
      "for",
      "the",
      "aircraft",
      "listed",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM aircraft",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft"
    ],
    "question": "Can you provide the lowest, average, and highest distances for the aircraft?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "distances",
      "for",
      "the",
      "aircraft",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM aircraft",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft"
    ],
    "question": "I want to know the minimum, average, and maximum distances associated with the aircraft in the database.",
    "question_toks": [
      "I",
      "want",
      "to",
      "know",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distances",
      "associated",
      "with",
      "the",
      "aircraft",
      "in",
      "the",
      "database",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the minimum, average, and maximum distances for flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distances",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the least, average, and greatest flight distances from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "least",
      ",",
      "average",
      ",",
      "and",
      "greatest",
      "flight",
      "distances",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What is the range of flight distances (minimum, average, maximum) for departures from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "range",
      "of",
      "flight",
      "distances",
      "(",
      "minimum",
      ",",
      "average",
      ",",
      "maximum",
      ")",
      "for",
      "departures",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the lowest, average, and highest prices for flights departing from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "prices",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you tell me the minimum, average, and maximum ticket prices for flights from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "ticket",
      "prices",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What is the price range (minimum, average, maximum) for flights that start from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "price",
      "range",
      "(",
      "minimum",
      ",",
      "average",
      ",",
      "maximum",
      ")",
      "for",
      "flights",
      "that",
      "start",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(destination), AVG(distance), MAX(distance) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "destination",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "destination",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the closest, average, and farthest destinations for flights from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "closest",
      ",",
      "average",
      ",",
      "and",
      "farthest",
      "destinations",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(destination), AVG(distance), MAX(distance) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "destination",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "destination",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the nearest, average, and furthest flight destinations from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "nearest",
      ",",
      "average",
      ",",
      "and",
      "furthest",
      "flight",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(destination), AVG(distance), MAX(distance) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "destination",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "destination",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What is the range of flight distances (closest, average, farthest) for destinations from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "range",
      "of",
      "flight",
      "distances",
      "(",
      "closest",
      ",",
      "average",
      ",",
      "farthest",
      ")",
      "for",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which aircraft ID and name correspond to the longest flight distance from Los Angeles?",
    "question_toks": [
      "Which",
      "aircraft",
      "ID",
      "and",
      "name",
      "correspond",
      "to",
      "the",
      "longest",
      "flight",
      "distance",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the aircraft ID and name for the flight with the greatest distance originating from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "for",
      "the",
      "flight",
      "with",
      "the",
      "greatest",
      "distance",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the aircraft ID and name for the longest flight departing from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "for",
      "the",
      "longest",
      "flight",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name and distance of the aircraft with the longest range?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "distance",
      "of",
      "the",
      "aircraft",
      "with",
      "the",
      "longest",
      "range",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide the name and distance of the aircraft that can fly the furthest?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "name",
      "and",
      "distance",
      "of",
      "the",
      "aircraft",
      "that",
      "can",
      "fly",
      "the",
      "furthest",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which aircraft has the longest distance capability, and what is its name?",
    "question_toks": [
      "Which",
      "aircraft",
      "has",
      "the",
      "longest",
      "distance",
      "capability",
      ",",
      "and",
      "what",
      "is",
      "its",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "Who is the employee with the highest salary, and what is their name?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "employee",
      "with",
      "the",
      "highest",
      "salary",
      ",",
      "and",
      "what",
      "is",
      "their",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the name of the employee earning the most?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "name",
      "of",
      "the",
      "employee",
      "earning",
      "the",
      "most",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the highest-paid employee, and what is their salary?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "highest",
      "-",
      "paid",
      "employee",
      ",",
      "and",
      "what",
      "is",
      "their",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which aircraft ID and name correspond to the longest flight distance from Los Angeles?",
    "question_toks": [
      "Which",
      "aircraft",
      "ID",
      "and",
      "name",
      "correspond",
      "to",
      "the",
      "longest",
      "flight",
      "distance",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the aircraft ID and name for the flight with the greatest distance originating from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "for",
      "the",
      "flight",
      "with",
      "the",
      "greatest",
      "distance",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the aircraft ID and name associated with the farthest flight departing from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "associated",
      "with",
      "the",
      "farthest",
      "flight",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the aircraft ID and name for the aircraft with the shortest flight distance?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "for",
      "the",
      "aircraft",
      "with",
      "the",
      "shortest",
      "flight",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "limit",
      "value"
    ],
    "question": "Can you provide the aircraft ID and name of the plane that has the least distance capacity?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "aircraft",
      "ID",
      "and",
      "name",
      "of",
      "the",
      "plane",
      "that",
      "has",
      "the",
      "least",
      "distance",
      "capacity",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "limit",
      "value"
    ],
    "question": "Which aircraft has the smallest distance capability, and what is its ID and name?",
    "question_toks": [
      "Which",
      "aircraft",
      "has",
      "the",
      "smallest",
      "distance",
      "capability",
      ",",
      "and",
      "what",
      "is",
      "its",
      "ID",
      "and",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "Who is the employee with the highest salary and what is their name?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "employee",
      "with",
      "the",
      "highest",
      "salary",
      "and",
      "what",
      "is",
      "their",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the name of the employee who earns the most?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "name",
      "of",
      "the",
      "employee",
      "who",
      "earns",
      "the",
      "most",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the highest-paid employee and how much do they earn?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "highest",
      "-",
      "paid",
      "employee",
      "and",
      "how",
      "much",
      "do",
      "they",
      "earn",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "List the names of the first three aircraft based on their distance in ascending order.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "the",
      "first",
      "three",
      "aircraft",
      "based",
      "on",
      "their",
      "distance",
      "in",
      "ascending",
      "order",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Retrieve the names of the three closest aircraft sorted by distance.",
    "question_toks": [
      "Retrieve",
      "the",
      "names",
      "of",
      "the",
      "three",
      "closest",
      "aircraft",
      "sorted",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Show me the names of the top three aircraft with the shortest distances.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "names",
      "of",
      "the",
      "top",
      "three",
      "aircraft",
      "with",
      "the",
      "shortest",
      "distances",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 4000 ORDER BY distance ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "4000",
      "ORDER",
      "BY",
      "distance",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      "order",
      "by",
      "distance",
      "asc"
    ],
    "question": "Find the names of aircraft with distances less than 4000 and list them by distance.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "aircraft",
      "with",
      "distances",
      "less",
      "than",
      "4000",
      "and",
      "list",
      "them",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 4000 ORDER BY distance ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "4000",
      "ORDER",
      "BY",
      "distance",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      "order",
      "by",
      "distance",
      "asc"
    ],
    "question": "Get the names of all aircraft that can travel less than 4000 miles, ordered by their distance.",
    "question_toks": [
      "Get",
      "the",
      "names",
      "of",
      "all",
      "aircraft",
      "that",
      "can",
      "travel",
      "less",
      "than",
      "4000",
      "miles",
      ",",
      "ordered",
      "by",
      "their",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 4000 ORDER BY distance ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "4000",
      "ORDER",
      "BY",
      "distance",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      "order",
      "by",
      "distance",
      "asc"
    ],
    "question": "Provide the names of aircraft with a distance under 4000, sorted from shortest to longest.",
    "question_toks": [
      "Provide",
      "the",
      "names",
      "of",
      "aircraft",
      "with",
      "a",
      "distance",
      "under",
      "4000",
      ",",
      "sorted",
      "from",
      "shortest",
      "to",
      "longest",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance DESC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Show the names of the three aircraft with the longest distances in descending order.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "the",
      "three",
      "aircraft",
      "with",
      "the",
      "longest",
      "distances",
      "in",
      "descending",
      "order",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance DESC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "List the names of the top three aircraft based on their maximum distance.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "the",
      "top",
      "three",
      "aircraft",
      "based",
      "on",
      "their",
      "maximum",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance DESC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Retrieve the names of the three aircraft that can travel the farthest, sorted by distance.",
    "question_toks": [
      "Retrieve",
      "the",
      "names",
      "of",
      "the",
      "three",
      "aircraft",
      "that",
      "can",
      "travel",
      "the",
      "farthest",
      ",",
      "sorted",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 7120",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "7120"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aircraft have a distance capability greater than 7120?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "capability",
      "greater",
      "than",
      "7120",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 7120",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "7120"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the names of the aircraft that can fly more than 7120 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "that",
      "can",
      "fly",
      "more",
      "than",
      "7120",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 7120",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "7120"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you list the aircraft that have a distance exceeding 7120?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "aircraft",
      "that",
      "have",
      "a",
      "distance",
      "exceeding",
      "7120",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT distance FROM Aircraft WHERE name = 'Boeing 737-800')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "distance",
      "FROM",
      "Aircraft",
      "WHERE",
      "name",
      "=",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "=",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ")"
    ],
    "question": "Which aircraft have a distance greater than that of the Boeing 737-800?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "that",
      "of",
      "the",
      "Boeing",
      "737",
      "-",
      "800",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT distance FROM Aircraft WHERE name = 'Boeing 737-800')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "distance",
      "FROM",
      "Aircraft",
      "WHERE",
      "name",
      "=",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "=",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ")"
    ],
    "question": "What are the names of aircraft that can travel farther than the Boeing 737-800?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "farther",
      "than",
      "the",
      "Boeing",
      "737",
      "-",
      "800",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT distance FROM Aircraft WHERE name = 'Boeing 737-800')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "distance",
      "FROM",
      "Aircraft",
      "WHERE",
      "name",
      "=",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "=",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ")"
    ],
    "question": "Can you identify the aircraft with a longer distance range than the Boeing 737-800?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "aircraft",
      "with",
      "a",
      "longer",
      "distance",
      "range",
      "than",
      "the",
      "Boeing",
      "737",
      "-",
      "800",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft WHERE distance < 7000)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      "<",
      "7000",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      ")"
    ],
    "question": "Which aircraft exceed the average distance of those under 7000?",
    "question_toks": [
      "Which",
      "aircraft",
      "exceed",
      "the",
      "average",
      "distance",
      "of",
      "those",
      "under",
      "7000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft WHERE distance < 7000)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      "<",
      "7000",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      ")"
    ],
    "question": "What are the names of the aircraft that can fly more than the average distance of those below 7000 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "that",
      "can",
      "fly",
      "more",
      "than",
      "the",
      "average",
      "distance",
      "of",
      "those",
      "below",
      "7000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft WHERE distance < 7000)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      "<",
      "7000",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      ")"
    ],
    "question": "Can you list aircraft that have a distance greater than the average for those under 7000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "aircraft",
      "that",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "the",
      "average",
      "for",
      "those",
      "under",
      "7000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "Which aircraft names have a distance greater than the average distance of all aircraft?",
    "question_toks": [
      "Which",
      "aircraft",
      "names",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "the",
      "average",
      "distance",
      "of",
      "all",
      "aircraft",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "What are the names of the aircraft that can fly farther than the average distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "that",
      "can",
      "fly",
      "farther",
      "than",
      "the",
      "average",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "Can you provide the names of planes with distances exceeding the average distance?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "planes",
      "with",
      "distances",
      "exceeding",
      "the",
      "average",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM Flight WHERE distance > (SELECT AVG(distance) FROM Flight)",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "Flight",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Flight",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      ")"
    ],
    "question": "Which flight destinations have a distance greater than the average distance of all flights?",
    "question_toks": [
      "Which",
      "flight",
      "destinations",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "the",
      "average",
      "distance",
      "of",
      "all",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM Flight WHERE distance > (SELECT AVG(distance) FROM Flight)",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "Flight",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Flight",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      ")"
    ],
    "question": "What are the destinations of flights that are farther than the average flight distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "destinations",
      "of",
      "flights",
      "that",
      "are",
      "farther",
      "than",
      "the",
      "average",
      "flight",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM Flight WHERE distance > (SELECT AVG(distance) FROM Flight)",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "Flight",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Flight",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "flight",
      ")"
    ],
    "question": "Can you list the flight destinations that exceed the average distance?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "flight",
      "destinations",
      "that",
      "exceed",
      "the",
      "average",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Employee WHERE salary > (SELECT AVG(salary) FROM Employee)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Employee",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "salary",
      ")",
      "FROM",
      "Employee",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "employee",
      ")"
    ],
    "question": "Which employees have a salary that is higher than the average salary?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "that",
      "is",
      "higher",
      "than",
      "the",
      "average",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Employee WHERE salary > (SELECT AVG(salary) FROM Employee)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Employee",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "salary",
      ")",
      "FROM",
      "Employee",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "employee",
      ")"
    ],
    "question": "What are the names of employees earning more than the average salary?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "the",
      "average",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Employee WHERE salary > (SELECT AVG(salary) FROM Employee)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Employee",
      "WHERE",
      "salary",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "salary",
      ")",
      "FROM",
      "Employee",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "salary",
      ")",
      "from",
      "employee",
      ")"
    ],
    "question": "Can you provide the names of employees whose salaries exceed the average salary?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "employees",
      "whose",
      "salaries",
      "exceed",
      "the",
      "average",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees earn more than $150,000?",
    "question_toks": [
      "Which",
      "employees",
      "earn",
      "more",
      "than",
      "$",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names of employees with salaries exceeding $150,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "with",
      "salaries",
      "exceeding",
      "$",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees that have a salary greater than $150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "that",
      "have",
      "a",
      "salary",
      "greater",
      "than",
      "$",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees with salaries over $120,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "salaries",
      "over",
      "$",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names of employees earning more than $120,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "$",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary that exceeds $120,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "that",
      "exceeds",
      "$",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you identify the employees whose salaries are above $101,000?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "employees",
      "whose",
      "salaries",
      "are",
      "above",
      "$",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have salaries greater than $101,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "salaries",
      "greater",
      "than",
      "$",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the names of employees earning more than $101,000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "$",
      "101",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary greater than 150,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "greater",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the names of employees earning more than 150,000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "150",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees with salaries above 150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "salaries",
      "above",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names of employees with salaries greater than 120,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "employees",
      "with",
      "salaries",
      "greater",
      "than",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary exceeding 120,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "exceeding",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the employees whose salary is above 120,000.",
    "question_toks": [
      "List",
      "the",
      "employees",
      "whose",
      "salary",
      "is",
      "above",
      "120",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees that earn more than 101,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "that",
      "earn",
      "more",
      "than",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names of employees with salaries higher than 101,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "with",
      "salaries",
      "higher",
      "than",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary that exceeds 101,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "that",
      "exceeds",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "What are the names and salaries of employees earning more than 150,000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the employees with salaries greater than 150,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "employees",
      "with",
      "salaries",
      "greater",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees that have a salary exceeding 150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "that",
      "have",
      "a",
      "salary",
      "exceeding",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary < 120000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      "<",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      "<",
      "value"
    ],
    "question": "Which employees have salaries less than 120,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "salaries",
      "less",
      "than",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary < 120000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      "<",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      "<",
      "value"
    ],
    "question": "Can you provide the names and salaries of employees earning under 120,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "earning",
      "under",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary < 120000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      "<",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      "<",
      "value"
    ],
    "question": "Who are the employees with a salary below 120,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "a",
      "salary",
      "below",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name LIKE 'J%'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "J",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "like",
      "'",
      "j",
      "%",
      "'"
    ],
    "question": "What are the names and salaries of employees whose names start with 'J'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "whose",
      "names",
      "start",
      "with",
      "'",
      "J",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name LIKE 'J%'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "J",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "like",
      "'",
      "j",
      "%",
      "'"
    ],
    "question": "Can you list the employees with names beginning with the letter 'J'?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "employees",
      "with",
      "names",
      "beginning",
      "with",
      "the",
      "letter",
      "'",
      "J",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name LIKE 'J%'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "J",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "like",
      "'",
      "j",
      "%",
      "'"
    ],
    "question": "Who are the employees that have names starting with 'J' and what are their salaries?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "that",
      "have",
      "names",
      "starting",
      "with",
      "'",
      "J",
      "'",
      "and",
      "what",
      "are",
      "their",
      "salaries",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What is the aid and price for flights going to Chicago?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aid",
      "and",
      "price",
      "for",
      "flights",
      "going",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you tell me the aid and cost of flights with Chicago as the destination?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "aid",
      "and",
      "cost",
      "of",
      "flights",
      "with",
      "Chicago",
      "as",
      "the",
      "destination",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Show me the aid and price for flights that arrive in Chicago.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "aid",
      "and",
      "price",
      "for",
      "flights",
      "that",
      "arrive",
      "in",
      "Chicago",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees earning more than 150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "earning",
      "more",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the names and salaries of employees with salaries above 150,000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "with",
      "salaries",
      "above",
      "150",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names and salaries of those employees whose salary exceeds 150,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "those",
      "employees",
      "whose",
      "salary",
      "exceeds",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, distance FROM flight WHERE price < 250",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "250"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "distance",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "What are the origins and distances of flights that cost less than 250?",
    "question_toks": [
      "What",
      "are",
      "the",
      "origins",
      "and",
      "distances",
      "of",
      "flights",
      "that",
      "cost",
      "less",
      "than",
      "250",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, distance FROM flight WHERE price < 250",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "250"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "distance",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Can you show me the origin and distance for flights priced under 250?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "origin",
      "and",
      "distance",
      "for",
      "flights",
      "priced",
      "under",
      "250",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, distance FROM flight WHERE price < 250",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "250"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "distance",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "List the origins and distances for flights that are cheaper than 250.",
    "question_toks": [
      "List",
      "the",
      "origins",
      "and",
      "distances",
      "for",
      "flights",
      "that",
      "are",
      "cheaper",
      "than",
      "250",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "What are the destinations from Los Angeles, sorted by destination?",
    "question_toks": [
      "What",
      "are",
      "the",
      "destinations",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "by",
      "destination",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "List all the flight destinations from Los Angeles in alphabetical order.",
    "question_toks": [
      "List",
      "all",
      "the",
      "flight",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Can you show me the destinations for flights originating in Los Angeles, arranged by destination?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "destinations",
      "for",
      "flights",
      "originating",
      "in",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "by",
      "destination",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, origin FROM flight WHERE origin = 'Los Angeles' ORDER BY aid",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "origin",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "aid"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "origin",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "aid"
    ],
    "question": "Can you provide the aid numbers for flights from Los Angeles, sorted by aid?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "aid",
      "numbers",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "by",
      "aid",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, origin FROM flight WHERE origin = 'Los Angeles' ORDER BY aid",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "origin",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "aid"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "origin",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "aid"
    ],
    "question": "What are the aid identifiers for flights originating in Los Angeles, arranged in order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aid",
      "identifiers",
      "for",
      "flights",
      "originating",
      "in",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "in",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, origin FROM flight WHERE origin = 'Los Angeles' ORDER BY aid",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "origin",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "aid"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "origin",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "aid"
    ],
    "question": "List the aid codes for flights from Los Angeles in ascending order.",
    "question_toks": [
      "List",
      "the",
      "aid",
      "codes",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "in",
      "ascending",
      "order",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY distance",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance"
    ],
    "question": "What are the distances to each destination from Los Angeles, sorted by distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distances",
      "to",
      "each",
      "destination",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "by",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY distance",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance"
    ],
    "question": "Can you show me the distances to destinations from Los Angeles, arranged in order of distance?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "distances",
      "to",
      "destinations",
      "from",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "in",
      "order",
      "of",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY distance",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance"
    ],
    "question": "List the distances for flights from Los Angeles to each destination, sorted by distance.",
    "question_toks": [
      "List",
      "the",
      "distances",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "each",
      "destination",
      ",",
      "sorted",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Can you list the destinations for flights originating from Los Angeles, sorted by destination?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "destinations",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "by",
      "destination",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "What are the destinations for flights that start in Los Angeles, ordered by the destination name?",
    "question_toks": [
      "What",
      "are",
      "the",
      "destinations",
      "for",
      "flights",
      "that",
      "start",
      "in",
      "Los",
      "Angeles",
      ",",
      "ordered",
      "by",
      "the",
      "destination",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Show me the flights from Los Angeles, focusing on their destinations and sorted accordingly.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "flights",
      "from",
      "Los",
      "Angeles",
      ",",
      "focusing",
      "on",
      "their",
      "destinations",
      "and",
      "sorted",
      "accordingly",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE name IN ('Boeing 747-400', 'Boeing 737-800', 'Airbus A340-300', 'British Aerospace Jetstream 41', 'Embraer ERJ-145') ORDER BY distance",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "name",
      "IN",
      "(",
      "'",
      "Boeing",
      "747",
      "-",
      "400",
      "'",
      ",",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'",
      ",",
      "'",
      "Airbus",
      "A340",
      "-",
      "300",
      "'",
      ",",
      "'",
      "British",
      "Aerospace",
      "Jetstream",
      "41",
      "'",
      ",",
      "'",
      "Embraer",
      "ERJ",
      "-",
      "145",
      "'",
      ")",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "in",
      "(",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ",",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ",",
      "'",
      "airbus",
      "a340",
      "-",
      "value",
      "'",
      ",",
      "'",
      "british",
      "aerospace",
      "jetstream",
      "value",
      "'",
      ",",
      "'",
      "embraer",
      "erj",
      "-",
      "value",
      "'",
      ")",
      "order",
      "by",
      "distance"
    ],
    "question": "What are the names and distances of the specified aircraft, arranged by distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "the",
      "specified",
      "aircraft",
      ",",
      "arranged",
      "by",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE name IN ('Boeing 747-400', 'Boeing 737-800', 'Airbus A340-300', 'British Aerospace Jetstream 41', 'Embraer ERJ-145') ORDER BY distance",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "name",
      "IN",
      "(",
      "'",
      "Boeing",
      "747",
      "-",
      "400",
      "'",
      ",",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'",
      ",",
      "'",
      "Airbus",
      "A340",
      "-",
      "300",
      "'",
      ",",
      "'",
      "British",
      "Aerospace",
      "Jetstream",
      "41",
      "'",
      ",",
      "'",
      "Embraer",
      "ERJ",
      "-",
      "145",
      "'",
      ")",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "in",
      "(",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ",",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ",",
      "'",
      "airbus",
      "a340",
      "-",
      "value",
      "'",
      ",",
      "'",
      "british",
      "aerospace",
      "jetstream",
      "value",
      "'",
      ",",
      "'",
      "embraer",
      "erj",
      "-",
      "value",
      "'",
      ")",
      "order",
      "by",
      "distance"
    ],
    "question": "Can you provide the distances and names of certain aircraft, sorted by how far they can fly?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "distances",
      "and",
      "names",
      "of",
      "certain",
      "aircraft",
      ",",
      "sorted",
      "by",
      "how",
      "far",
      "they",
      "can",
      "fly",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE name IN ('Boeing 747-400', 'Boeing 737-800', 'Airbus A340-300', 'British Aerospace Jetstream 41', 'Embraer ERJ-145') ORDER BY distance",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "name",
      "IN",
      "(",
      "'",
      "Boeing",
      "747",
      "-",
      "400",
      "'",
      ",",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'",
      ",",
      "'",
      "Airbus",
      "A340",
      "-",
      "300",
      "'",
      ",",
      "'",
      "British",
      "Aerospace",
      "Jetstream",
      "41",
      "'",
      ",",
      "'",
      "Embraer",
      "ERJ",
      "-",
      "145",
      "'",
      ")",
      "ORDER",
      "BY",
      "distance"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "in",
      "(",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ",",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ",",
      "'",
      "airbus",
      "a340",
      "-",
      "value",
      "'",
      ",",
      "'",
      "british",
      "aerospace",
      "jetstream",
      "value",
      "'",
      ",",
      "'",
      "embraer",
      "erj",
      "-",
      "value",
      "'",
      ")",
      "order",
      "by",
      "distance"
    ],
    "question": "List the aircraft names along with their distances, ordered from shortest to longest distance.",
    "question_toks": [
      "List",
      "the",
      "aircraft",
      "names",
      "along",
      "with",
      "their",
      "distances",
      ",",
      "ordered",
      "from",
      "shortest",
      "to",
      "longest",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc"
    ],
    "question": "Can you display the names of employees along with their salaries, sorted from highest to lowest salary?",
    "question_toks": [
      "Can",
      "you",
      "display",
      "the",
      "names",
      "of",
      "employees",
      "along",
      "with",
      "their",
      "salaries",
      ",",
      "sorted",
      "from",
      "highest",
      "to",
      "lowest",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc"
    ],
    "question": "What are the salaries and names of the employees, arranged in descending order of salary?",
    "question_toks": [
      "What",
      "are",
      "the",
      "salaries",
      "and",
      "names",
      "of",
      "the",
      "employees",
      ",",
      "arranged",
      "in",
      "descending",
      "order",
      "of",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc"
    ],
    "question": "Show me the list of employees with their salaries, starting from the one with the highest salary.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "list",
      "of",
      "employees",
      "with",
      "their",
      "salaries",
      ",",
      "starting",
      "from",
      "the",
      "one",
      "with",
      "the",
      "highest",
      "salary",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the destinations for flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "destinations",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you list the destinations for flights that leave from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "destinations",
      "for",
      "flights",
      "that",
      "leave",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Which destinations are available for flights that start in Los Angeles?",
    "question_toks": [
      "Which",
      "destinations",
      "are",
      "available",
      "for",
      "flights",
      "that",
      "start",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the prices for flights departing from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "prices",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the flight prices for routes starting in Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "flight",
      "prices",
      "for",
      "routes",
      "starting",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What is the cost of flights that originate from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "cost",
      "of",
      "flights",
      "that",
      "originate",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the distances for flights that leave from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distances",
      "for",
      "flights",
      "that",
      "leave",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you tell me the distances of flights originating in Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "distances",
      "of",
      "flights",
      "originating",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What is the distance for flights that start in Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "distance",
      "for",
      "flights",
      "that",
      "start",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, price FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the distance and price for flights from Los Angeles to Chicago?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, price FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you provide the distance and cost of flights originating from Los Angeles to Chicago?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "distance",
      "and",
      "cost",
      "of",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance, price FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "distance",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Show me the distance and fare for flights departing from Los Angeles to Chicago.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "distance",
      "and",
      "fare",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance >= 2000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "=",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "=",
      "value"
    ],
    "question": "Which aircraft have a distance capacity of at least 2000 miles?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "capacity",
      "of",
      "at",
      "least",
      "2000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance >= 2000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "=",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "=",
      "value"
    ],
    "question": "List the names and distances of aircraft that can travel 2000 miles or more.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "2000",
      "miles",
      "or",
      "more",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance >= 2000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "=",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "=",
      "value"
    ],
    "question": "Can you tell me the names and distances of planes that can cover a distance of 2000 miles or greater?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "planes",
      "that",
      "can",
      "cover",
      "a",
      "distance",
      "of",
      "2000",
      "miles",
      "or",
      "greater",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees earning more than 150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "earning",
      "more",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you give me the names and salaries of employees with a salary exceeding 150,000?",
    "question_toks": [
      "Can",
      "you",
      "give",
      "me",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "with",
      "a",
      "salary",
      "exceeding",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the employees with salaries greater than 150,000.",
    "question_toks": [
      "List",
      "the",
      "employees",
      "with",
      "salaries",
      "greater",
      "than",
      "150",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Washington D.C.'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'"
    ],
    "question": "What is the average price for flights from Los Angeles to Washington D.C.?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Washington D.C.'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'"
    ],
    "question": "Can you provide the mean ticket cost for flights departing from Los Angeles to Washington D.C.?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "mean",
      "ticket",
      "cost",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Washington D.C.'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'"
    ],
    "question": "How much does a flight from Los Angeles to Washington D.C. typically cost on average?",
    "question_toks": [
      "How",
      "much",
      "does",
      "a",
      "flight",
      "from",
      "Los",
      "Angeles",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "typically",
      "cost",
      "on",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What is the average fare for flights from Los Angeles to Chicago?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "fare",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Could you tell me the mean price for flights going from Los Angeles to Chicago?",
    "question_toks": [
      "Could",
      "you",
      "tell",
      "me",
      "the",
      "mean",
      "price",
      "for",
      "flights",
      "going",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What is the typical cost for a flight from Los Angeles to Chicago?",
    "question_toks": [
      "What",
      "is",
      "the",
      "typical",
      "cost",
      "for",
      "a",
      "flight",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "What is the average price for flights from Los Angeles to Dallas?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "Can you give me the mean ticket price for flights from Los Angeles to Dallas?",
    "question_toks": [
      "Can",
      "you",
      "give",
      "me",
      "the",
      "mean",
      "ticket",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "How much does it usually cost for a flight from Los Angeles to Dallas on average?",
    "question_toks": [
      "How",
      "much",
      "does",
      "it",
      "usually",
      "cost",
      "for",
      "a",
      "flight",
      "from",
      "Los",
      "Angeles",
      "to",
      "Dallas",
      "on",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the top three destinations from Los Angeles based on the shortest distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "three",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "based",
      "on",
      "the",
      "shortest",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you provide the three closest destinations from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "three",
      "closest",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "List the three nearest destinations to Los Angeles by distance.",
    "question_toks": [
      "List",
      "the",
      "three",
      "nearest",
      "destinations",
      "to",
      "Los",
      "Angeles",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the IDs of the three shortest flights from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "IDs",
      "of",
      "the",
      "three",
      "shortest",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you show me the three flight IDs with the least distance from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "three",
      "flight",
      "IDs",
      "with",
      "the",
      "least",
      "distance",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "List the three flight IDs that have the shortest distances from Los Angeles.",
    "question_toks": [
      "List",
      "the",
      "three",
      "flight",
      "IDs",
      "that",
      "have",
      "the",
      "shortest",
      "distances",
      "from",
      "Los",
      "Angeles",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the prices for the three shortest flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "prices",
      "for",
      "the",
      "three",
      "shortest",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you give me the prices of the three closest flights from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "give",
      "me",
      "the",
      "prices",
      "of",
      "the",
      "three",
      "closest",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "List the prices of the three nearest flights departing from Los Angeles.",
    "question_toks": [
      "List",
      "the",
      "prices",
      "of",
      "the",
      "three",
      "nearest",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the average distance and price for flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the average distance and cost of flights that start in Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "of",
      "flights",
      "that",
      "start",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "How much is the average distance and fare for flights that depart from Los Angeles?",
    "question_toks": [
      "How",
      "much",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "fare",
      "for",
      "flights",
      "that",
      "depart",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS average_distance, avg(price) AS average_price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "average_price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "average_price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What is the average distance and price for flights heading to Chicago?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "heading",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS average_distance, avg(price) AS average_price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "average_price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "average_price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Could you tell me the average fare and distance for flights going to Chicago?",
    "question_toks": [
      "Could",
      "you",
      "tell",
      "me",
      "the",
      "average",
      "fare",
      "and",
      "distance",
      "for",
      "flights",
      "going",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS average_distance, avg(price) AS average_price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "average_price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "average_price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the average cost and distance for flights that arrive in Chicago?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "cost",
      "and",
      "distance",
      "for",
      "flights",
      "that",
      "arrive",
      "in",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS avg_dist, avg(price) AS avg_cost FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "avg_dist",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "avg_cost",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "avg_dist",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "avg_cost",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "What are the average distance and price for flights associated with aid number 3?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "associated",
      "with",
      "aid",
      "number",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS avg_dist, avg(price) AS avg_cost FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "avg_dist",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "avg_cost",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "avg_dist",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "avg_cost",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "Can you provide the average fare and distance for flights linked to aid 3?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "fare",
      "and",
      "distance",
      "for",
      "flights",
      "linked",
      "to",
      "aid",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS avg_dist, avg(price) AS avg_cost FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "avg_dist",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "avg_cost",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "avg_dist",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "avg_cost",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "How much is the average distance and cost for flights that have aid 3?",
    "question_toks": [
      "How",
      "much",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "that",
      "have",
      "aid",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the average distance and price of flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "of",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the mean distance and cost for flights that start in Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "mean",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "that",
      "start",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What is the average flight distance and fare for departures from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "flight",
      "distance",
      "and",
      "fare",
      "for",
      "departures",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS average_distance, avg(price) AS average_price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "average_price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "average_price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the average distance and price of flights going to Chicago?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "of",
      "flights",
      "going",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS average_distance, avg(price) AS average_price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "average_price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "average_price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you tell me the mean distance and cost for flights that arrive in Chicago?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "mean",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "that",
      "arrive",
      "in",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS average_distance, avg(price) AS average_price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "average_price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "average_price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What is the average flight distance and price for arrivals in Chicago?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "flight",
      "distance",
      "and",
      "price",
      "for",
      "arrivals",
      "in",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS avg_distance, avg(price) AS avg_price FROM flight WHERE distance < 3000",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "avg_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "avg_price",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "<",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "avg_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "avg_price",
      "from",
      "flight",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What are the average distance and price of flights that are less than 3000 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "of",
      "flights",
      "that",
      "are",
      "less",
      "than",
      "3000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS avg_distance, avg(price) AS avg_price FROM flight WHERE distance < 3000",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "avg_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "avg_price",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "<",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "avg_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "avg_price",
      "from",
      "flight",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you give me the mean distance and fare for flights under 3000 miles?",
    "question_toks": [
      "Can",
      "you",
      "give",
      "me",
      "the",
      "mean",
      "distance",
      "and",
      "fare",
      "for",
      "flights",
      "under",
      "3000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS avg_distance, avg(price) AS avg_price FROM flight WHERE distance < 3000",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "avg_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "avg_price",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "<",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "avg_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "avg_price",
      "from",
      "flight",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What is the average flight distance and cost for short-haul flights?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "flight",
      "distance",
      "and",
      "cost",
      "for",
      "short",
      "-",
      "haul",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Which destination from Los Angeles has the highest number of flights?",
    "question_toks": [
      "Which",
      "destination",
      "from",
      "Los",
      "Angeles",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "What is the most popular flight destination from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "popular",
      "flight",
      "destination",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Can you tell me the destination with the most flights originating from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "destination",
      "with",
      "the",
      "most",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the destination with the most flights departing from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "destination",
      "with",
      "the",
      "most",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Identify the most frequently traveled destination from Los Angeles.",
    "question_toks": [
      "Identify",
      "the",
      "most",
      "frequently",
      "traveled",
      "destination",
      "from",
      "Los",
      "Angeles",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which destination has the highest count of flights from Los Angeles?",
    "question_toks": [
      "Which",
      "destination",
      "has",
      "the",
      "highest",
      "count",
      "of",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC OFFSET 0 ROWS FETCH NEXT 1 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "OFFSET",
      "0",
      "ROWS",
      "FETCH",
      "NEXT",
      "1",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "offset",
      "value",
      "rows",
      "fetch",
      "next",
      "value",
      "rows",
      "only"
    ],
    "question": "Which destination has the highest number of flights from Los Angeles?",
    "question_toks": [
      "Which",
      "destination",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC OFFSET 0 ROWS FETCH NEXT 1 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "OFFSET",
      "0",
      "ROWS",
      "FETCH",
      "NEXT",
      "1",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "offset",
      "value",
      "rows",
      "fetch",
      "next",
      "value",
      "rows",
      "only"
    ],
    "question": "What is the top destination for flights leaving Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "top",
      "destination",
      "for",
      "flights",
      "leaving",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC OFFSET 0 ROWS FETCH NEXT 1 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "OFFSET",
      "0",
      "ROWS",
      "FETCH",
      "NEXT",
      "1",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "offset",
      "value",
      "rows",
      "fetch",
      "next",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you list the destination with the most departures from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "destination",
      "with",
      "the",
      "most",
      "departures",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY SUM(price) LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "SUM",
      "(",
      "price",
      ")",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "sum",
      "(",
      "price",
      ")",
      "limit",
      "value"
    ],
    "question": "What is the destination with the highest total price from Los Angeles flights?",
    "question_toks": [
      "What",
      "is",
      "the",
      "destination",
      "with",
      "the",
      "highest",
      "total",
      "price",
      "from",
      "Los",
      "Angeles",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY SUM(price) LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "SUM",
      "(",
      "price",
      ")",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "sum",
      "(",
      "price",
      ")",
      "limit",
      "value"
    ],
    "question": "Which destination has the greatest cumulative price for flights originating from Los Angeles?",
    "question_toks": [
      "Which",
      "destination",
      "has",
      "the",
      "greatest",
      "cumulative",
      "price",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY SUM(price) LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "SUM",
      "(",
      "price",
      ")",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "sum",
      "(",
      "price",
      ")",
      "limit",
      "value"
    ],
    "question": "Can you tell me the destination that results in the highest overall price for flights from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "destination",
      "that",
      "results",
      "in",
      "the",
      "highest",
      "overall",
      "price",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY AVG(distance) LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "AVG",
      "(",
      "distance",
      ")",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "avg",
      "(",
      "distance",
      ")",
      "limit",
      "value"
    ],
    "question": "Which destination has the shortest average distance from Los Angeles?",
    "question_toks": [
      "Which",
      "destination",
      "has",
      "the",
      "shortest",
      "average",
      "distance",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY AVG(distance) LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "AVG",
      "(",
      "distance",
      ")",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "avg",
      "(",
      "distance",
      ")",
      "limit",
      "value"
    ],
    "question": "What is the destination with the lowest average distance for flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "destination",
      "with",
      "the",
      "lowest",
      "average",
      "distance",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY AVG(distance) LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "AVG",
      "(",
      "distance",
      ")",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "avg",
      "(",
      "distance",
      ")",
      "limit",
      "value"
    ],
    "question": "Can you identify the destination that is closest on average to Los Angeles flights?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "destination",
      "that",
      "is",
      "closest",
      "on",
      "average",
      "to",
      "Los",
      "Angeles",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY COUNT(aid) LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "aid",
      ")",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "aid",
      ")",
      "limit",
      "value"
    ],
    "question": "What is the most frequently chosen destination for flights from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "frequently",
      "chosen",
      "destination",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY COUNT(aid) LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "aid",
      ")",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "aid",
      ")",
      "limit",
      "value"
    ],
    "question": "Which destination has the highest number of flights originating from Los Angeles?",
    "question_toks": [
      "Which",
      "destination",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY COUNT(aid) LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "aid",
      ")",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "aid",
      ")",
      "limit",
      "value"
    ],
    "question": "Can you find out which destination is most popular for flights leaving Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "out",
      "which",
      "destination",
      "is",
      "most",
      "popular",
      "for",
      "flights",
      "leaving",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which flight IDs have a distance greater than 1000?",
    "question_toks": [
      "Which",
      "flight",
      "IDs",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you list the aid values for flights that cover more than 1000 miles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "aid",
      "values",
      "for",
      "flights",
      "that",
      "cover",
      "more",
      "than",
      "1000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the IDs of flights with a distance exceeding 1000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "IDs",
      "of",
      "flights",
      "with",
      "a",
      "distance",
      "exceeding",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the names of aircraft that can travel more than 1500 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "more",
      "than",
      "1500",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you provide the names of planes with a range exceeding 1500 miles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "planes",
      "with",
      "a",
      "range",
      "exceeding",
      "1500",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aircraft are capable of flying distances greater than 1500?",
    "question_toks": [
      "Which",
      "aircraft",
      "are",
      "capable",
      "of",
      "flying",
      "distances",
      "greater",
      "than",
      "1500",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees earning more than 150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "earning",
      "more",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names of employees with salaries above 150,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "with",
      "salaries",
      "above",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary that exceeds 150,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "that",
      "exceeds",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aid values correspond to flights with a distance greater than 1000?",
    "question_toks": [
      "Which",
      "aid",
      "values",
      "correspond",
      "to",
      "flights",
      "with",
      "a",
      "distance",
      "greater",
      "than",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you list the aid numbers for flights that travel more than 1000 miles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "aid",
      "numbers",
      "for",
      "flights",
      "that",
      "travel",
      "more",
      "than",
      "1000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE distance > 1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the aid identifiers for flights exceeding a distance of 1000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "aid",
      "identifiers",
      "for",
      "flights",
      "exceeding",
      "a",
      "distance",
      "of",
      "1000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What aircraft names are associated with distances greater than 1500?",
    "question_toks": [
      "What",
      "aircraft",
      "names",
      "are",
      "associated",
      "with",
      "distances",
      "greater",
      "than",
      "1500",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you provide the names of aircraft that can fly over 1500 miles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "fly",
      "over",
      "1500",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance > 1500",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      ">",
      "1500"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aircraft are capable of traveling a distance exceeding 1500?",
    "question_toks": [
      "Which",
      "aircraft",
      "are",
      "capable",
      "of",
      "traveling",
      "a",
      "distance",
      "exceeding",
      "1500",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees earning more than 150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "earning",
      "more",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you identify the names of employees with salaries above 150,000?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "names",
      "of",
      "employees",
      "with",
      "salaries",
      "above",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary that exceeds 150,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "that",
      "exceeds",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "How many flights have a distance between 1000 and 5000?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "have",
      "a",
      "distance",
      "between",
      "1000",
      "and",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What is the number of flights that fall within the distance range of 1000 to 5000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "flights",
      "that",
      "fall",
      "within",
      "the",
      "distance",
      "range",
      "of",
      "1000",
      "to",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE distance BETWEEN 1000 AND 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "BETWEEN",
      "1000",
      "AND",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Can you tell me the count of flights that have distances in the range of 1000 to 5000?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "count",
      "of",
      "flights",
      "that",
      "have",
      "distances",
      "in",
      "the",
      "range",
      "of",
      "1000",
      "to",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "How many aircraft have a distance less than 5000?",
    "question_toks": [
      "How",
      "many",
      "aircraft",
      "have",
      "a",
      "distance",
      "less",
      "than",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What is the total count of aircraft with distances below 5000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "count",
      "of",
      "aircraft",
      "with",
      "distances",
      "below",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you provide the number of aircraft that have distances under 5000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "number",
      "of",
      "aircraft",
      "that",
      "have",
      "distances",
      "under",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "How many flights are priced below 300?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "are",
      "priced",
      "below",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "What is the count of flights that cost less than 300?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "flights",
      "that",
      "cost",
      "less",
      "than",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM flight WHERE price < 300",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Can you tell me the number of flights that have prices under 300?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "number",
      "of",
      "flights",
      "that",
      "have",
      "prices",
      "under",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What are the names and distances of aircraft that can travel less than 8000 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "less",
      "than",
      "8000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you provide the names and distances of all aircraft with a range under 8000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "all",
      "aircraft",
      "with",
      "a",
      "range",
      "under",
      "8000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 8000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "8000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "List the names and distances of aircraft that have a maximum distance of less than 8000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "have",
      "a",
      "maximum",
      "distance",
      "of",
      "less",
      "than",
      "8000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE price < 250",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "250"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Which flights have an origin and destination with a price below 250?",
    "question_toks": [
      "Which",
      "flights",
      "have",
      "an",
      "origin",
      "and",
      "destination",
      "with",
      "a",
      "price",
      "below",
      "250",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE price < 250",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "250"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "Can you show me the origin and destination of flights that cost less than 250?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "origin",
      "and",
      "destination",
      "of",
      "flights",
      "that",
      "cost",
      "less",
      "than",
      "250",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE price < 250",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "price",
      "<",
      "250"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "price",
      "<",
      "value"
    ],
    "question": "List the origin and destination of all flights priced under 250.",
    "question_toks": [
      "List",
      "the",
      "origin",
      "and",
      "destination",
      "of",
      "all",
      "flights",
      "priced",
      "under",
      "250",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "What are the names and salaries of employees earning more than 100,000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names and salaries of employees with salaries exceeding 100,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "with",
      "salaries",
      "exceeding",
      "100",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 100000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the names and salaries of all employees who have a salary greater than 100,000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "all",
      "employees",
      "who",
      "have",
      "a",
      "salary",
      "greater",
      "than",
      "100",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What are the names and distances of aircraft that can travel less than 5000 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "less",
      "than",
      "5000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you show me the names and distances of aircraft with a distance capability under 5000?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "with",
      "a",
      "distance",
      "capability",
      "under",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE distance < 5000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "List the names and distances of planes that have a maximum distance of less than 5000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "planes",
      "that",
      "have",
      "a",
      "maximum",
      "distance",
      "of",
      "less",
      "than",
      "5000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE aid IN (1, 2, 3)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "aid",
      "IN",
      "(",
      "1",
      ",",
      "2",
      ",",
      "3",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "aid",
      "in",
      "(",
      "value",
      ",",
      "value",
      ",",
      "value",
      ")"
    ],
    "question": "Which aircraft names and distances correspond to aid values of 1, 2, or 3?",
    "question_toks": [
      "Which",
      "aircraft",
      "names",
      "and",
      "distances",
      "correspond",
      "to",
      "aid",
      "values",
      "of",
      "1",
      ",",
      "2",
      ",",
      "or",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE aid IN (1, 2, 3)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "aid",
      "IN",
      "(",
      "1",
      ",",
      "2",
      ",",
      "3",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "aid",
      "in",
      "(",
      "value",
      ",",
      "value",
      ",",
      "value",
      ")"
    ],
    "question": "Can you provide the names and distances of aircraft that have aid numbers of 1, 2, or 3?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "have",
      "aid",
      "numbers",
      "of",
      "1",
      ",",
      "2",
      ",",
      "or",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE aid IN (1, 2, 3)",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "aid",
      "IN",
      "(",
      "1",
      ",",
      "2",
      ",",
      "3",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "aid",
      "in",
      "(",
      "value",
      ",",
      "value",
      ",",
      "value",
      ")"
    ],
    "question": "Show me the names and distances of the aircraft associated with aid values 1, 2, or 3.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "the",
      "aircraft",
      "associated",
      "with",
      "aid",
      "values",
      "1",
      ",",
      "2",
      ",",
      "or",
      "3",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE name LIKE 'Boeing%'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "Boeing",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "like",
      "'",
      "boeing",
      "%",
      "'"
    ],
    "question": "What are the names and distances of all Boeing aircraft?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "all",
      "Boeing",
      "aircraft",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE name LIKE 'Boeing%'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "Boeing",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "like",
      "'",
      "boeing",
      "%",
      "'"
    ],
    "question": "Can you list the names and distances of aircraft that start with 'Boeing'?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "aircraft",
      "that",
      "start",
      "with",
      "'",
      "Boeing",
      "'",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft WHERE name LIKE 'Boeing%'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "Boeing",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "like",
      "'",
      "boeing",
      "%",
      "'"
    ],
    "question": "Show me the names and distances of the aircraft whose names begin with 'Boeing'.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "the",
      "aircraft",
      "whose",
      "names",
      "begin",
      "with",
      "'",
      "Boeing",
      "'",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the minimum, average, and maximum distances for flights?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distances",
      "for",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you provide the lowest, average, and highest flight distances?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "flight",
      "distances",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "What is the range of distances for the flights, including the minimum, average, and maximum?",
    "question_toks": [
      "What",
      "is",
      "the",
      "range",
      "of",
      "distances",
      "for",
      "the",
      "flights",
      ",",
      "including",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the lowest, average, and highest prices for the flights?",
    "question_toks": [
      "What",
      "are",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "prices",
      "for",
      "the",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you tell me the minimum, average, and maximum ticket prices for the flights?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "ticket",
      "prices",
      "for",
      "the",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "What is the price range for the flights, including the minimum, average, and maximum?",
    "question_toks": [
      "What",
      "is",
      "the",
      "price",
      "range",
      "for",
      "the",
      "flights",
      ",",
      "including",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the minimum, average, and maximum aircraft IDs for the flights?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "aircraft",
      "IDs",
      "for",
      "the",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you provide the lowest, average, and highest aircraft IDs associated with the flights?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "aircraft",
      "IDs",
      "associated",
      "with",
      "the",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "What is the range of aircraft IDs for the flights, including the minimum, average, and maximum?",
    "question_toks": [
      "What",
      "is",
      "the",
      "range",
      "of",
      "aircraft",
      "IDs",
      "for",
      "the",
      "flights",
      ",",
      "including",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the minimum, average, and maximum distances for flights?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "distances",
      "for",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you provide the lowest, average, and highest flight distances?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "flight",
      "distances",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "distance",
      ")",
      ",",
      "AVG",
      "(",
      "distance",
      ")",
      ",",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "flight"
    ],
    "question": "What is the range of flight distances in terms of minimum, average, and maximum?",
    "question_toks": [
      "What",
      "is",
      "the",
      "range",
      "of",
      "flight",
      "distances",
      "in",
      "terms",
      "of",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the lowest, average, and highest prices for flights?",
    "question_toks": [
      "What",
      "are",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "prices",
      "for",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you tell me the minimum, average, and maximum flight prices?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "flight",
      "prices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(price), AVG(price), MAX(price) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "price",
      ")",
      ",",
      "AVG",
      "(",
      "price",
      ")",
      ",",
      "MAX",
      "(",
      "price",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "price",
      ")",
      "from",
      "flight"
    ],
    "question": "What is the range of flight prices, including the minimum, average, and maximum?",
    "question_toks": [
      "What",
      "is",
      "the",
      "range",
      "of",
      "flight",
      "prices",
      ",",
      "including",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "What are the minimum, average, and maximum aircraft IDs in the flight data?",
    "question_toks": [
      "What",
      "are",
      "the",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "aircraft",
      "IDs",
      "in",
      "the",
      "flight",
      "data",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "Can you provide the lowest, average, and highest aircraft identifiers for flights?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "lowest",
      ",",
      "average",
      ",",
      "and",
      "highest",
      "aircraft",
      "identifiers",
      "for",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT MIN(aid), AVG(aid), MAX(aid) FROM flight",
    "query_toks": [
      "SELECT",
      "MIN",
      "(",
      "aid",
      ")",
      ",",
      "AVG",
      "(",
      "aid",
      ")",
      ",",
      "MAX",
      "(",
      "aid",
      ")",
      "FROM",
      "flight"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "aid",
      ")",
      ",",
      "avg",
      "(",
      "aid",
      ")",
      ",",
      "max",
      "(",
      "aid",
      ")",
      "from",
      "flight"
    ],
    "question": "What is the range of aircraft IDs associated with the flights, including minimum, average, and maximum?",
    "question_toks": [
      "What",
      "is",
      "the",
      "range",
      "of",
      "aircraft",
      "IDs",
      "associated",
      "with",
      "the",
      "flights",
      ",",
      "including",
      "minimum",
      ",",
      "average",
      ",",
      "and",
      "maximum",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which flight from Los Angeles has the highest distance?",
    "question_toks": [
      "Which",
      "flight",
      "from",
      "Los",
      "Angeles",
      "has",
      "the",
      "highest",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the aid and name of the longest flight originating from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "aid",
      "and",
      "name",
      "of",
      "the",
      "longest",
      "flight",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the longest distance flight from Los Angeles, and what are its aid and name?",
    "question_toks": [
      "What",
      "is",
      "the",
      "longest",
      "distance",
      "flight",
      "from",
      "Los",
      "Angeles",
      ",",
      "and",
      "what",
      "are",
      "its",
      "aid",
      "and",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name and aid of the aircraft with the greatest distance capacity?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "aid",
      "of",
      "the",
      "aircraft",
      "with",
      "the",
      "greatest",
      "distance",
      "capacity",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide the details of the aircraft that can travel the farthest?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "details",
      "of",
      "the",
      "aircraft",
      "that",
      "can",
      "travel",
      "the",
      "farthest",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which aircraft has the highest distance capability, and what is its aid and name?",
    "question_toks": [
      "Which",
      "aircraft",
      "has",
      "the",
      "highest",
      "distance",
      "capability",
      ",",
      "and",
      "what",
      "is",
      "its",
      "aid",
      "and",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "Who is the highest-paid employee, and what is their salary?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "highest",
      "-",
      "paid",
      "employee",
      ",",
      "and",
      "what",
      "is",
      "their",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the name and salary of the employee with the highest earnings?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "name",
      "and",
      "salary",
      "of",
      "the",
      "employee",
      "with",
      "the",
      "highest",
      "earnings",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which employee has the largest salary, and what is their name?",
    "question_toks": [
      "Which",
      "employee",
      "has",
      "the",
      "largest",
      "salary",
      ",",
      "and",
      "what",
      "is",
      "their",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which flight from Los Angeles has the highest distance?",
    "question_toks": [
      "Which",
      "flight",
      "from",
      "Los",
      "Angeles",
      "has",
      "the",
      "highest",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the aid and name of the longest flight originating from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aid",
      "and",
      "name",
      "of",
      "the",
      "longest",
      "flight",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM flight WHERE origin = 'Los Angeles' ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the details of the flight with the greatest distance from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "details",
      "of",
      "the",
      "flight",
      "with",
      "the",
      "greatest",
      "distance",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which aircraft has the longest distance capability?",
    "question_toks": [
      "Which",
      "aircraft",
      "has",
      "the",
      "longest",
      "distance",
      "capability",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the aid and name of the aircraft that can fly the farthest?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aid",
      "and",
      "name",
      "of",
      "the",
      "aircraft",
      "that",
      "can",
      "fly",
      "the",
      "farthest",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you provide details about the aircraft with the highest distance rating?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "details",
      "about",
      "the",
      "aircraft",
      "with",
      "the",
      "highest",
      "distance",
      "rating",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "Who is the highest-paid employee?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "highest",
      "-",
      "paid",
      "employee",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name and salary of the employee earning the most?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "salary",
      "of",
      "the",
      "employee",
      "earning",
      "the",
      "most",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY salary DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you identify the employee with the top salary?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "employee",
      "with",
      "the",
      "top",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the names of the three aircraft with the shortest distances?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "three",
      "aircraft",
      "with",
      "the",
      "shortest",
      "distances",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you list the top three aircraft based on their distance in ascending order?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "top",
      "three",
      "aircraft",
      "based",
      "on",
      "their",
      "distance",
      "in",
      "ascending",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Show me the names of the three closest aircraft by distance.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "names",
      "of",
      "the",
      "three",
      "closest",
      "aircraft",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 4000 ORDER BY distance ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "4000",
      "ORDER",
      "BY",
      "distance",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      "order",
      "by",
      "distance",
      "asc"
    ],
    "question": "Which aircraft have a distance of less than 4000 and what are their names?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "of",
      "less",
      "than",
      "4000",
      "and",
      "what",
      "are",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 4000 ORDER BY distance ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "4000",
      "ORDER",
      "BY",
      "distance",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      "order",
      "by",
      "distance",
      "asc"
    ],
    "question": "List the names of aircraft that are under 4000 in distance, sorted by distance.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "are",
      "under",
      "4000",
      "in",
      "distance",
      ",",
      "sorted",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft WHERE distance < 4000 ORDER BY distance ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "WHERE",
      "distance",
      "<",
      "4000",
      "ORDER",
      "BY",
      "distance",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      "<",
      "value",
      "order",
      "by",
      "distance",
      "asc"
    ],
    "question": "Can you provide the names of aircraft with distances less than 4000, ordered from shortest to longest?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "aircraft",
      "with",
      "distances",
      "less",
      "than",
      "4000",
      ",",
      "ordered",
      "from",
      "shortest",
      "to",
      "longest",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance DESC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the names of the three aircraft with the longest distances?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "three",
      "aircraft",
      "with",
      "the",
      "longest",
      "distances",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance DESC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you show me the top three aircraft with the greatest distances?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "top",
      "three",
      "aircraft",
      "with",
      "the",
      "greatest",
      "distances",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM aircraft ORDER BY distance DESC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "distance",
      "DESC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "desc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "List the names of the three furthest aircraft by distance.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "the",
      "three",
      "furthest",
      "aircraft",
      "by",
      "distance",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 5000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aircraft have a distance capability greater than 5000?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "capability",
      "greater",
      "than",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 5000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you list the names of aircraft that can travel more than 5000 miles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "more",
      "than",
      "5000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 5000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the names of aircraft with a distance exceeding 5000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "aircraft",
      "with",
      "a",
      "distance",
      "exceeding",
      "5000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT distance FROM Aircraft WHERE name = 'Boeing 737-800')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "distance",
      "FROM",
      "Aircraft",
      "WHERE",
      "name",
      "=",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "=",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ")"
    ],
    "question": "Which aircraft have a distance greater than that of the Boeing 737-800?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "that",
      "of",
      "the",
      "Boeing",
      "737",
      "-",
      "800",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT distance FROM Aircraft WHERE name = 'Boeing 737-800')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "distance",
      "FROM",
      "Aircraft",
      "WHERE",
      "name",
      "=",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "=",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ")"
    ],
    "question": "Can you provide the names of aircraft that can travel further than the Boeing 737-800?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "further",
      "than",
      "the",
      "Boeing",
      "737",
      "-",
      "800",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT distance FROM Aircraft WHERE name = 'Boeing 737-800')",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "distance",
      "FROM",
      "Aircraft",
      "WHERE",
      "name",
      "=",
      "'",
      "Boeing",
      "737",
      "-",
      "800",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "distance",
      "from",
      "aircraft",
      "where",
      "name",
      "=",
      "'",
      "boeing",
      "value",
      "-",
      "value",
      "'",
      ")"
    ],
    "question": "What are the names of aircraft that exceed the distance of the Boeing 737-800?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "exceed",
      "the",
      "distance",
      "of",
      "the",
      "Boeing",
      "737",
      "-",
      "800",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT MAX(distance) FROM Aircraft) - 1000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")",
      "-",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")",
      "-",
      "value"
    ],
    "question": "Which aircraft have a distance greater than 1000 miles less than the maximum distance?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "1000",
      "miles",
      "less",
      "than",
      "the",
      "maximum",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT MAX(distance) FROM Aircraft) - 1000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")",
      "-",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")",
      "-",
      "value"
    ],
    "question": "Can you list the names of aircraft that can travel more than 1000 miles less than the furthest flying aircraft?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "can",
      "travel",
      "more",
      "than",
      "1000",
      "miles",
      "less",
      "than",
      "the",
      "furthest",
      "flying",
      "aircraft",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT MAX(distance) FROM Aircraft) - 1000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "MAX",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")",
      "-",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "max",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")",
      "-",
      "value"
    ],
    "question": "What are the names of aircraft with a distance capability exceeding 1000 miles below the maximum distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "aircraft",
      "with",
      "a",
      "distance",
      "capability",
      "exceeding",
      "1000",
      "miles",
      "below",
      "the",
      "maximum",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 3383",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "3383"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aircraft have a distance capability greater than 3383?",
    "question_toks": [
      "Which",
      "aircraft",
      "have",
      "a",
      "distance",
      "capability",
      "greater",
      "than",
      "3383",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 3383",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "3383"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the names of the aircraft that can fly further than 3383?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "that",
      "can",
      "fly",
      "further",
      "than",
      "3383",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 3383",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "3383"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you list the aircraft with a distance exceeding 3383?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "aircraft",
      "with",
      "a",
      "distance",
      "exceeding",
      "3383",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "What are the names of the aircraft that have a distance greater than the average distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "that",
      "have",
      "a",
      "distance",
      "greater",
      "than",
      "the",
      "average",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "Can you provide the names of aircraft that exceed the average distance capability?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "aircraft",
      "that",
      "exceed",
      "the",
      "average",
      "distance",
      "capability",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "(",
      "SELECT",
      "AVG",
      "(",
      "distance",
      ")",
      "FROM",
      "Aircraft",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "from",
      "aircraft",
      ")"
    ],
    "question": "Which aircraft are capable of flying further than the average distance of all aircraft?",
    "question_toks": [
      "Which",
      "aircraft",
      "are",
      "capable",
      "of",
      "flying",
      "further",
      "than",
      "the",
      "average",
      "distance",
      "of",
      "all",
      "aircraft",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 7120",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "7120"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Which aircraft can travel more than 7120 distance units?",
    "question_toks": [
      "Which",
      "aircraft",
      "can",
      "travel",
      "more",
      "than",
      "7120",
      "distance",
      "units",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 7120",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "7120"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the names of the aircraft that have a distance capacity above 7120?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "that",
      "have",
      "a",
      "distance",
      "capacity",
      "above",
      "7120",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft WHERE distance > 7120",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "7120"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Can you tell me the names of the aircraft that can fly further than 7120?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "names",
      "of",
      "the",
      "aircraft",
      "that",
      "can",
      "fly",
      "further",
      "than",
      "7120",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary greater than 150,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "greater",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names of employees earning more than 150,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees that earn above 150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "that",
      "earn",
      "above",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees with salaries exceeding 120,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "salaries",
      "exceeding",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you identify employees earning more than 120,000?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "employees",
      "earning",
      "more",
      "than",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the names of employees whose salary is over 120,000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "employees",
      "whose",
      "salary",
      "is",
      "over",
      "120",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary that is higher than 101,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "that",
      "is",
      "higher",
      "than",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names of employees who earn more than 101,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "employees",
      "who",
      "earn",
      "more",
      "than",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees with salaries over 101,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "salaries",
      "over",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees earn more than $150,000?",
    "question_toks": [
      "Which",
      "employees",
      "earn",
      "more",
      "than",
      "$",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you list the names of employees with salaries exceeding $150,000?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "names",
      "of",
      "employees",
      "with",
      "salaries",
      "exceeding",
      "$",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees that have a salary greater than $150,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "that",
      "have",
      "a",
      "salary",
      "greater",
      "than",
      "$",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees with salaries above $120,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "salaries",
      "above",
      "$",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the names of employees earning more than $120,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "names",
      "of",
      "employees",
      "earning",
      "more",
      "than",
      "$",
      "120",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 120000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "120000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the employees whose salaries are greater than $120,000.",
    "question_toks": [
      "List",
      "the",
      "employees",
      "whose",
      "salaries",
      "are",
      "greater",
      "than",
      "$",
      "120",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees have a salary greater than $101,000?",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "a",
      "salary",
      "greater",
      "than",
      "$",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you identify the employees that earn more than $101,000?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "employees",
      "that",
      "earn",
      "more",
      "than",
      "$",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM employee WHERE salary > 101000",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "101000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Who are the employees with salaries exceeding $101,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "salaries",
      "exceeding",
      "$",
      "101",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "Can you show me the salary of James Smith?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "salary",
      "of",
      "James",
      "Smith",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "What is the salary associated with James Smith?",
    "question_toks": [
      "What",
      "is",
      "the",
      "salary",
      "associated",
      "with",
      "James",
      "Smith",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "I would like to know how much James Smith earns.",
    "question_toks": [
      "I",
      "would",
      "like",
      "to",
      "know",
      "how",
      "much",
      "James",
      "Smith",
      "earns",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'Mary Johnson'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "Mary",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "mary",
      "johnson",
      "'"
    ],
    "question": "What is the salary of Mary Johnson?",
    "question_toks": [
      "What",
      "is",
      "the",
      "salary",
      "of",
      "Mary",
      "Johnson",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'Mary Johnson'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "Mary",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "mary",
      "johnson",
      "'"
    ],
    "question": "Can you provide the salary details for Mary Johnson?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "salary",
      "details",
      "for",
      "Mary",
      "Johnson",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'Mary Johnson'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "Mary",
      "Johnson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "mary",
      "johnson",
      "'"
    ],
    "question": "How much does Mary Johnson make?",
    "question_toks": [
      "How",
      "much",
      "does",
      "Mary",
      "Johnson",
      "make",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'John Williams'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "John",
      "Williams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "john",
      "williams",
      "'"
    ],
    "question": "Could you tell me the salary of John Williams?",
    "question_toks": [
      "Could",
      "you",
      "tell",
      "me",
      "the",
      "salary",
      "of",
      "John",
      "Williams",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'John Williams'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "John",
      "Williams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "john",
      "williams",
      "'"
    ],
    "question": "What is John Williams' salary?",
    "question_toks": [
      "What",
      "is",
      "John",
      "Williams",
      "'",
      "salary",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'John Williams'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "John",
      "Williams",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "john",
      "williams",
      "'"
    ],
    "question": "I want to know the earnings of John Williams.",
    "question_toks": [
      "I",
      "want",
      "to",
      "know",
      "the",
      "earnings",
      "of",
      "John",
      "Williams",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "Can you show me the salary of James Smith from the employee table?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "salary",
      "of",
      "James",
      "Smith",
      "from",
      "the",
      "employee",
      "table",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "What is the salary of the employee named James Smith?",
    "question_toks": [
      "What",
      "is",
      "the",
      "salary",
      "of",
      "the",
      "employee",
      "named",
      "James",
      "Smith",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE name = 'James Smith'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "name",
      "=",
      "'",
      "James",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "name",
      "=",
      "'",
      "james",
      "smith",
      "'"
    ],
    "question": "Retrieve the salary information for James Smith.",
    "question_toks": [
      "Retrieve",
      "the",
      "salary",
      "information",
      "for",
      "James",
      "Smith",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Which employees earn more than 150,000?",
    "question_toks": [
      "Which",
      "employees",
      "earn",
      "more",
      "than",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "List the names and salaries of employees with a salary above 150,000.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "with",
      "a",
      "salary",
      "above",
      "150",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary > 150000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      ">",
      "150000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Can you provide the salary details for employees whose salaries exceed 150,000?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "salary",
      "details",
      "for",
      "employees",
      "whose",
      "salaries",
      "exceed",
      "150",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary < 200000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      "<",
      "200000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      "<",
      "value"
    ],
    "question": "Who are the employees with a salary less than 200,000?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "employees",
      "with",
      "a",
      "salary",
      "less",
      "than",
      "200",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary < 200000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      "<",
      "200000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      "<",
      "value"
    ],
    "question": "Can you give me the names and salaries of employees earning below 200,000?",
    "question_toks": [
      "Can",
      "you",
      "give",
      "me",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "employees",
      "earning",
      "below",
      "200",
      ",",
      "000",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee WHERE salary < 200000",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "WHERE",
      "salary",
      "<",
      "200000"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "where",
      "salary",
      "<",
      "value"
    ],
    "question": "Retrieve the salary details for employees whose salaries are under 200,000.",
    "question_toks": [
      "Retrieve",
      "the",
      "salary",
      "details",
      "for",
      "employees",
      "whose",
      "salaries",
      "are",
      "under",
      "200",
      ",",
      "000",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY origin",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "origin"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "origin"
    ],
    "question": "What are the flight IDs, origins, and destinations for flights originating from Los Angeles, sorted by origin?",
    "question_toks": [
      "What",
      "are",
      "the",
      "flight",
      "IDs",
      ",",
      "origins",
      ",",
      "and",
      "destinations",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "by",
      "origin",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY origin",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "origin"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "origin"
    ],
    "question": "Can you list the flight IDs along with their origins and destinations for flights that start from Los Angeles, ordered by origin?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "flight",
      "IDs",
      "along",
      "with",
      "their",
      "origins",
      "and",
      "destinations",
      "for",
      "flights",
      "that",
      "start",
      "from",
      "Los",
      "Angeles",
      ",",
      "ordered",
      "by",
      "origin",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid, origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY origin",
    "query_toks": [
      "SELECT",
      "aid",
      ",",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "origin"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      ",",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "origin"
    ],
    "question": "Show me the flight IDs, origin cities, and destination cities for flights leaving from Los Angeles, arranged by the origin.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "flight",
      "IDs",
      ",",
      "origin",
      "cities",
      ",",
      "and",
      "destination",
      "cities",
      "for",
      "flights",
      "leaving",
      "from",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "by",
      "the",
      "origin",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft ORDER BY name",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "order",
      "by",
      "name"
    ],
    "question": "What are the names and distances of the aircraft, sorted by their names?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "distances",
      "of",
      "the",
      "aircraft",
      ",",
      "sorted",
      "by",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft ORDER BY name",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "order",
      "by",
      "name"
    ],
    "question": "Can you provide a list of aircraft names along with their distances, organized by the name of the aircraft?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "a",
      "list",
      "of",
      "aircraft",
      "names",
      "along",
      "with",
      "their",
      "distances",
      ",",
      "organized",
      "by",
      "the",
      "name",
      "of",
      "the",
      "aircraft",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, distance FROM aircraft ORDER BY name",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "distance",
      "FROM",
      "aircraft",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "distance",
      "from",
      "aircraft",
      "order",
      "by",
      "name"
    ],
    "question": "List the names and corresponding distances of the aircraft in alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "corresponding",
      "distances",
      "of",
      "the",
      "aircraft",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY name",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "name"
    ],
    "question": "What are the names and salaries of the employees, arranged by their names?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "salaries",
      "of",
      "the",
      "employees",
      ",",
      "arranged",
      "by",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY name",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "name"
    ],
    "question": "Can you show me the names along with the salaries of the employees, sorted by employee name?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "names",
      "along",
      "with",
      "the",
      "salaries",
      "of",
      "the",
      "employees",
      ",",
      "sorted",
      "by",
      "employee",
      "name",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name, salary FROM employee ORDER BY name",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "salary",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "salary",
      "from",
      "employee",
      "order",
      "by",
      "name"
    ],
    "question": "List the employees' names and their salaries in alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "employees",
      "'",
      "names",
      "and",
      "their",
      "salaries",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "What are the destinations from Los Angeles, sorted alphabetically?",
    "question_toks": [
      "What",
      "are",
      "the",
      "destinations",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "alphabetically",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Can you list the destinations departing from Los Angeles in order?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "destinations",
      "departing",
      "from",
      "Los",
      "Angeles",
      "in",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, destination FROM flight WHERE origin = 'Los Angeles' ORDER BY destination",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "destination"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "destination"
    ],
    "question": "Show me the destinations available from Los Angeles, arranged by name.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "destinations",
      "available",
      "from",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "by",
      "name",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, price FROM flight WHERE origin = 'Los Angeles' ORDER BY price",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "price"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "price"
    ],
    "question": "What are the prices for flights originating from Los Angeles, listed from lowest to highest?",
    "question_toks": [
      "What",
      "are",
      "the",
      "prices",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      ",",
      "listed",
      "from",
      "lowest",
      "to",
      "highest",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, price FROM flight WHERE origin = 'Los Angeles' ORDER BY price",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "price"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "price"
    ],
    "question": "Can you provide the flight prices from Los Angeles sorted in ascending order?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "flight",
      "prices",
      "from",
      "Los",
      "Angeles",
      "sorted",
      "in",
      "ascending",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin, price FROM flight WHERE origin = 'Los Angeles' ORDER BY price",
    "query_toks": [
      "SELECT",
      "origin",
      ",",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "price"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      ",",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "price"
    ],
    "question": "List the costs of flights departing from Los Angeles, organized by price.",
    "question_toks": [
      "List",
      "the",
      "costs",
      "of",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      ",",
      "organized",
      "by",
      "price",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, aid FROM flight WHERE origin = 'Los Angeles' ORDER BY aid",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "aid"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "aid"
    ],
    "question": "What are the available flight aids for destinations from Los Angeles, sorted by aid number?",
    "question_toks": [
      "What",
      "are",
      "the",
      "available",
      "flight",
      "aids",
      "for",
      "destinations",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "by",
      "aid",
      "number",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, aid FROM flight WHERE origin = 'Los Angeles' ORDER BY aid",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "aid"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "aid"
    ],
    "question": "Can you show me the aid numbers for destinations departing from Los Angeles, arranged in order?",
    "question_toks": [
      "Can",
      "you",
      "show",
      "me",
      "the",
      "aid",
      "numbers",
      "for",
      "destinations",
      "departing",
      "from",
      "Los",
      "Angeles",
      ",",
      "arranged",
      "in",
      "order",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, aid FROM flight WHERE origin = 'Los Angeles' ORDER BY aid",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "aid"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "aid"
    ],
    "question": "List the flight aids associated with destinations from Los Angeles, sorted by aid.",
    "question_toks": [
      "List",
      "the",
      "flight",
      "aids",
      "associated",
      "with",
      "destinations",
      "from",
      "Los",
      "Angeles",
      ",",
      "sorted",
      "by",
      "aid",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the destinations from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you list the destinations available from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "destinations",
      "available",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Which places can I fly to from Los Angeles?",
    "question_toks": [
      "Which",
      "places",
      "can",
      "I",
      "fly",
      "to",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the prices for flights departing from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "prices",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the flight prices from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "flight",
      "prices",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "How much do flights from Los Angeles cost?",
    "question_toks": [
      "How",
      "much",
      "do",
      "flights",
      "from",
      "Los",
      "Angeles",
      "cost",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What is the distance for flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "distance",
      "for",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you tell me the distances for flights from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "distances",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "How far are the flights that depart from Los Angeles?",
    "question_toks": [
      "How",
      "far",
      "are",
      "the",
      "flights",
      "that",
      "depart",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What is the price of flights from Los Angeles to Chicago?",
    "question_toks": [
      "What",
      "is",
      "the",
      "price",
      "of",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you tell me the cost of flying from Los Angeles to Chicago?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "cost",
      "of",
      "flying",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "How much does a ticket cost for a flight from Los Angeles to Chicago?",
    "question_toks": [
      "How",
      "much",
      "does",
      "a",
      "ticket",
      "cost",
      "for",
      "a",
      "flight",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "What is the distance for flights from Los Angeles to Dallas?",
    "question_toks": [
      "What",
      "is",
      "the",
      "distance",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "How far is the flight route from Los Angeles to Dallas?",
    "question_toks": [
      "How",
      "far",
      "is",
      "the",
      "flight",
      "route",
      "from",
      "Los",
      "Angeles",
      "to",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT distance FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "distance",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distance",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "Can you provide the distance for flights going from Los Angeles to Dallas?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "distance",
      "for",
      "flights",
      "going",
      "from",
      "Los",
      "Angeles",
      "to",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE origin = 'Los Angeles' AND destination = 'Boston'",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Boston",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "boston",
      "'"
    ],
    "question": "What is the aircraft ID for flights from Los Angeles to Boston?",
    "question_toks": [
      "What",
      "is",
      "the",
      "aircraft",
      "ID",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Boston",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE origin = 'Los Angeles' AND destination = 'Boston'",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Boston",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "boston",
      "'"
    ],
    "question": "Can you give me the aid for flights departing from Los Angeles to Boston?",
    "question_toks": [
      "Can",
      "you",
      "give",
      "me",
      "the",
      "aid",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "to",
      "Boston",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE origin = 'Los Angeles' AND destination = 'Boston'",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Boston",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "boston",
      "'"
    ],
    "question": "What aircraft ID is associated with flights from Los Angeles to Boston?",
    "question_toks": [
      "What",
      "aircraft",
      "ID",
      "is",
      "associated",
      "with",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Boston",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Washington D.C.'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'"
    ],
    "question": "What is the average price of flights from Los Angeles to Washington D.C.?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "of",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Washington D.C.'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'"
    ],
    "question": "Can you tell me the average cost of flights originating in Los Angeles and heading to Washington D.C.?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "average",
      "cost",
      "of",
      "flights",
      "originating",
      "in",
      "Los",
      "Angeles",
      "and",
      "heading",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Washington D.C.'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "washington",
      "d",
      ".",
      "c",
      ".",
      "'"
    ],
    "question": "How much do flights from Los Angeles to Washington D.C. typically cost on average?",
    "question_toks": [
      "How",
      "much",
      "do",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Washington",
      "D",
      ".",
      "C",
      ".",
      "typically",
      "cost",
      "on",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What is the average price of flights from Los Angeles to Chicago?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "of",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you provide the average cost for flights that leave from Los Angeles and arrive in Chicago?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "cost",
      "for",
      "flights",
      "that",
      "leave",
      "from",
      "Los",
      "Angeles",
      "and",
      "arrive",
      "in",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "How much do flights from Los Angeles to Chicago usually cost on average?",
    "question_toks": [
      "How",
      "much",
      "do",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Chicago",
      "usually",
      "cost",
      "on",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "What is the average fare for flights from Los Angeles to Dallas?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "fare",
      "for",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "Can you tell me the average price of flights departing from Los Angeles and going to Dallas?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "average",
      "price",
      "of",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "and",
      "going",
      "to",
      "Dallas",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "destination",
      "=",
      "'",
      "Dallas",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "destination",
      "=",
      "'",
      "dallas",
      "'"
    ],
    "question": "How much do flights from Los Angeles to Dallas generally cost on average?",
    "question_toks": [
      "How",
      "much",
      "do",
      "flights",
      "from",
      "Los",
      "Angeles",
      "to",
      "Dallas",
      "generally",
      "cost",
      "on",
      "average",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the top three destinations from Los Angeles based on the shortest distance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "top",
      "three",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "based",
      "on",
      "the",
      "shortest",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you list the three closest destinations from Los Angeles according to distance?",
    "question_toks": [
      "Can",
      "you",
      "list",
      "the",
      "three",
      "closest",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "according",
      "to",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Which three destinations from Los Angeles have the least distance?",
    "question_toks": [
      "Which",
      "three",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "have",
      "the",
      "least",
      "distance",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the prices for the three shortest flights from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "prices",
      "for",
      "the",
      "three",
      "shortest",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you provide the prices for the three closest flights departing from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "prices",
      "for",
      "the",
      "three",
      "closest",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT price FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "price",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Which three flights from Los Angeles have the lowest distance and what are their prices?",
    "question_toks": [
      "Which",
      "three",
      "flights",
      "from",
      "Los",
      "Angeles",
      "have",
      "the",
      "lowest",
      "distance",
      "and",
      "what",
      "are",
      "their",
      "prices",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "What are the airline IDs for the three shortest flights from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "airline",
      "IDs",
      "for",
      "the",
      "three",
      "shortest",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Can you tell me the airline IDs associated with the three closest destinations from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "airline",
      "IDs",
      "associated",
      "with",
      "the",
      "three",
      "closest",
      "destinations",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM flight WHERE origin = 'Los Angeles' ORDER BY distance ASC FETCH FIRST 3 ROWS ONLY",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "FETCH",
      "FIRST",
      "3",
      "ROWS",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "order",
      "by",
      "distance",
      "asc",
      "fetch",
      "first",
      "value",
      "rows",
      "only"
    ],
    "question": "Which three airline IDs correspond to the shortest flights from Los Angeles?",
    "question_toks": [
      "Which",
      "three",
      "airline",
      "IDs",
      "correspond",
      "to",
      "the",
      "shortest",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the average distance and price of flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "of",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the average distance and cost for flights that start in Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "that",
      "start",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "How much is the average distance and price for flights departing from Los Angeles?",
    "question_toks": [
      "How",
      "much",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the average distance and price of flights going to Chicago?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "of",
      "flights",
      "going",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you tell me the average distance and cost for flights that arrive in Chicago?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "that",
      "arrive",
      "in",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "How much is the average distance and price for flights heading to Chicago?",
    "question_toks": [
      "How",
      "much",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "heading",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE distance < 3000",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "<",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "What are the average distance and price for flights that are less than 3000 miles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "that",
      "are",
      "less",
      "than",
      "3000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE distance < 3000",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "<",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "Can you provide the average distance and cost for shorter flights under 3000 miles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "for",
      "shorter",
      "flights",
      "under",
      "3000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE distance < 3000",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "distance",
      "<",
      "3000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "distance",
      "<",
      "value"
    ],
    "question": "How much is the average distance and price for flights that cover less than 3000 miles?",
    "question_toks": [
      "How",
      "much",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "that",
      "cover",
      "less",
      "than",
      "3000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "What are the average distance and price of flights originating from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "of",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "Can you provide the average distance and cost for flights that start in Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "that",
      "start",
      "in",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'"
    ],
    "question": "How much is the average distance and price for flights departing from Los Angeles?",
    "question_toks": [
      "How",
      "much",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS average_distance, avg(price) AS average_price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "average_price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "average_price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "What are the average distance and price of flights going to Chicago?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "of",
      "flights",
      "going",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS average_distance, avg(price) AS average_price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "average_price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "average_price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "Can you tell me the average distance and cost for flights that arrive in Chicago?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "that",
      "arrive",
      "in",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS average_distance, avg(price) AS average_price FROM flight WHERE destination = 'Chicago'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "average_price",
      "FROM",
      "flight",
      "WHERE",
      "destination",
      "=",
      "'",
      "Chicago",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "average_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "average_price",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "'",
      "chicago",
      "'"
    ],
    "question": "How much is the average distance and price for flights heading to Chicago?",
    "question_toks": [
      "How",
      "much",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "heading",
      "to",
      "Chicago",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS avg_distance, avg(price) AS avg_price FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "avg_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "avg_price",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "avg_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "avg_price",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "What is the average distance and price of flights with an aid of 3?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "of",
      "flights",
      "with",
      "an",
      "aid",
      "of",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS avg_distance, avg(price) AS avg_price FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "avg_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "avg_price",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "avg_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "avg_price",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "Can you provide the average distance and cost for flights associated with aid number 3?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "average",
      "distance",
      "and",
      "cost",
      "for",
      "flights",
      "associated",
      "with",
      "aid",
      "number",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT avg(distance) AS avg_distance, avg(price) AS avg_price FROM flight WHERE aid = 3",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "distance",
      ")",
      "AS",
      "avg_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "AS",
      "avg_price",
      "FROM",
      "flight",
      "WHERE",
      "aid",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "distance",
      ")",
      "as",
      "avg_distance",
      ",",
      "avg",
      "(",
      "price",
      ")",
      "as",
      "avg_price",
      "from",
      "flight",
      "where",
      "aid",
      "=",
      "value"
    ],
    "question": "How much is the average distance and price for flights linked to aid 3?",
    "question_toks": [
      "How",
      "much",
      "is",
      "the",
      "average",
      "distance",
      "and",
      "price",
      "for",
      "flights",
      "linked",
      "to",
      "aid",
      "3",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Which destination from Los Angeles has the highest number of flights?",
    "question_toks": [
      "Which",
      "destination",
      "from",
      "Los",
      "Angeles",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "What is the most popular destination from Los Angeles based on flight count?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "popular",
      "destination",
      "from",
      "Los",
      "Angeles",
      "based",
      "on",
      "flight",
      "count",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Can you tell me the destination with the most flights originating from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "destination",
      "with",
      "the",
      "most",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' AND distance < 3000 GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "distance",
      "<",
      "3000",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "distance",
      "<",
      "value",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "What is the closest popular destination from Los Angeles in terms of flight frequency?",
    "question_toks": [
      "What",
      "is",
      "the",
      "closest",
      "popular",
      "destination",
      "from",
      "Los",
      "Angeles",
      "in",
      "terms",
      "of",
      "flight",
      "frequency",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' AND distance < 3000 GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "distance",
      "<",
      "3000",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "distance",
      "<",
      "value",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Which nearby destination from Los Angeles has the most flights?",
    "question_toks": [
      "Which",
      "nearby",
      "destination",
      "from",
      "Los",
      "Angeles",
      "has",
      "the",
      "most",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' AND distance < 3000 GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "distance",
      "<",
      "3000",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "distance",
      "<",
      "value",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Can you identify the most frequently flown destination from Los Angeles within a distance of 3000 miles?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "most",
      "frequently",
      "flown",
      "destination",
      "from",
      "Los",
      "Angeles",
      "within",
      "a",
      "distance",
      "of",
      "3000",
      "miles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' AND price < 300 GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "price",
      "<",
      "300",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "price",
      "<",
      "value",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Which destination from Los Angeles is the cheapest and has the highest number of flights?",
    "question_toks": [
      "Which",
      "destination",
      "from",
      "Los",
      "Angeles",
      "is",
      "the",
      "cheapest",
      "and",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' AND price < 300 GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "price",
      "<",
      "300",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "price",
      "<",
      "value",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "What is the most affordable destination from Los Angeles based on flight frequency?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "affordable",
      "destination",
      "from",
      "Los",
      "Angeles",
      "based",
      "on",
      "flight",
      "frequency",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' AND price < 300 GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "AND",
      "price",
      "<",
      "300",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "and",
      "price",
      "<",
      "value",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Can you find the most popular destination from Los Angeles that is also under $300?",
    "question_toks": [
      "Can",
      "you",
      "find",
      "the",
      "most",
      "popular",
      "destination",
      "from",
      "Los",
      "Angeles",
      "that",
      "is",
      "also",
      "under",
      "$",
      "300",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, COUNT(*) as flight_count FROM flight GROUP BY destination ORDER BY flight_count DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "as",
      "flight_count",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "flight_count",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "flight_count",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "flight_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which destination has the highest number of flights from Los Angeles?",
    "question_toks": [
      "Which",
      "destination",
      "has",
      "the",
      "highest",
      "number",
      "of",
      "flights",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, COUNT(*) as flight_count FROM flight GROUP BY destination ORDER BY flight_count DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "as",
      "flight_count",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "flight_count",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "flight_count",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "flight_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the most popular flight destination from Los Angeles based on flight count?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "popular",
      "flight",
      "destination",
      "from",
      "Los",
      "Angeles",
      "based",
      "on",
      "flight",
      "count",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination, COUNT(*) as flight_count FROM flight GROUP BY destination ORDER BY flight_count DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      ",",
      "COUNT",
      "(",
      "*",
      ")",
      "as",
      "flight_count",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "flight_count",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      ",",
      "count",
      "(",
      "*",
      ")",
      "as",
      "flight_count",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "flight_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you tell me the destination with the most flights originating from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "destination",
      "with",
      "the",
      "most",
      "flights",
      "originating",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the top destination for flights departing from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "top",
      "destination",
      "for",
      "flights",
      "departing",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which flight destination is the most frequented from Los Angeles?",
    "question_toks": [
      "Which",
      "flight",
      "destination",
      "is",
      "the",
      "most",
      "frequented",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight WHERE origin = 'Los Angeles' GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "WHERE",
      "origin",
      "=",
      "'",
      "Los",
      "Angeles",
      "'",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "'",
      "los",
      "angeles",
      "'",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Can you identify the destination with the most flights leaving Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "identify",
      "the",
      "destination",
      "with",
      "the",
      "most",
      "flights",
      "leaving",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Which destination has the most flights recorded from Los Angeles?",
    "question_toks": [
      "Which",
      "destination",
      "has",
      "the",
      "most",
      "flights",
      "recorded",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "What is the most common flight destination from Los Angeles?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "common",
      "flight",
      "destination",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT destination FROM flight GROUP BY destination ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY",
    "query_toks": [
      "SELECT",
      "destination",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "destination",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "*",
      ")",
      "DESC",
      "FETCH",
      "FIRST",
      "1",
      "ROW",
      "ONLY"
    ],
    "query_toks_no_value": [
      "select",
      "destination",
      "from",
      "flight",
      "group",
      "by",
      "destination",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "fetch",
      "first",
      "value",
      "row",
      "only"
    ],
    "question": "Can you provide the destination that has the highest flight frequency from Los Angeles?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "destination",
      "that",
      "has",
      "the",
      "highest",
      "flight",
      "frequency",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Staff WHERE first_name = 'Jedidiah' AND last_name = 'Herzog'",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Jedidiah",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Herzog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "jedidiah",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "herzog",
      "'"
    ],
    "question": "What is the date of birth for the staff member named Jedidiah Herzog?",
    "question_toks": [
      "What",
      "is",
      "the",
      "date",
      "of",
      "birth",
      "for",
      "the",
      "staff",
      "member",
      "named",
      "Jedidiah",
      "Herzog",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Staff WHERE first_name = 'Jedidiah' AND last_name = 'Herzog'",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Jedidiah",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Herzog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "jedidiah",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "herzog",
      "'"
    ],
    "question": "Can you provide the birth date of Jedidiah Herzog from the staff?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "birth",
      "date",
      "of",
      "Jedidiah",
      "Herzog",
      "from",
      "the",
      "staff",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Staff WHERE first_name = 'Jedidiah' AND last_name = 'Herzog'",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Jedidiah",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Herzog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "jedidiah",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "herzog",
      "'"
    ],
    "question": "I'm looking for the date of birth of the staff member with the name Jedidiah Herzog.",
    "question_toks": [
      "I",
      "'",
      "m",
      "looking",
      "for",
      "the",
      "date",
      "of",
      "birth",
      "of",
      "the",
      "staff",
      "member",
      "with",
      "the",
      "name",
      "Jedidiah",
      "Herzog",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Staff WHERE first_name = 'Kaitlin' AND last_name = 'Mertz'",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Kaitlin",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Mertz",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "kaitlin",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "mertz",
      "'"
    ],
    "question": "What is the birth date of Kaitlin Mertz who is part of the staff?",
    "question_toks": [
      "What",
      "is",
      "the",
      "birth",
      "date",
      "of",
      "Kaitlin",
      "Mertz",
      "who",
      "is",
      "part",
      "of",
      "the",
      "staff",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Staff WHERE first_name = 'Kaitlin' AND last_name = 'Mertz'",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Kaitlin",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Mertz",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "kaitlin",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "mertz",
      "'"
    ],
    "question": "Could you tell me the date of birth for staff member Kaitlin Mertz?",
    "question_toks": [
      "Could",
      "you",
      "tell",
      "me",
      "the",
      "date",
      "of",
      "birth",
      "for",
      "staff",
      "member",
      "Kaitlin",
      "Mertz",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Staff WHERE first_name = 'Kaitlin' AND last_name = 'Mertz'",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Kaitlin",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Mertz",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "kaitlin",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "mertz",
      "'"
    ],
    "question": "I'm interested in knowing the date of birth for Kaitlin Mertz from the staff.",
    "question_toks": [
      "I",
      "'",
      "m",
      "interested",
      "in",
      "knowing",
      "the",
      "date",
      "of",
      "birth",
      "for",
      "Kaitlin",
      "Mertz",
      "from",
      "the",
      "staff",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Staff WHERE first_name = 'Rebekah' AND last_name = 'Hermann'",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Rebekah",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hermann",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "rebekah",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hermann",
      "'"
    ],
    "question": "What is Rebekah Hermann's date of birth from the staff records?",
    "question_toks": [
      "What",
      "is",
      "Rebekah",
      "Hermann",
      "'",
      "s",
      "date",
      "of",
      "birth",
      "from",
      "the",
      "staff",
      "records",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Staff WHERE first_name = 'Rebekah' AND last_name = 'Hermann'",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Rebekah",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hermann",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "rebekah",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hermann",
      "'"
    ],
    "question": "Can you give me the birth date of Rebekah Hermann who works on the staff?",
    "question_toks": [
      "Can",
      "you",
      "give",
      "me",
      "the",
      "birth",
      "date",
      "of",
      "Rebekah",
      "Hermann",
      "who",
      "works",
      "on",
      "the",
      "staff",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Staff WHERE first_name = 'Rebekah' AND last_name = 'Hermann'",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Rebekah",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Hermann",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "rebekah",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "hermann",
      "'"
    ],
    "question": "I'd like to find out the date of birth for Rebekah Hermann in the staff database.",
    "question_toks": [
      "I",
      "'",
      "d",
      "like",
      "to",
      "find",
      "out",
      "the",
      "date",
      "of",
      "birth",
      "for",
      "Rebekah",
      "Hermann",
      "in",
      "the",
      "staff",
      "database",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_joined_staff FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
    "query_toks": [
      "SELECT",
      "date_joined_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Janessa",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Sawayn",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_joined_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "janessa",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "sawayn",
      "'"
    ],
    "question": "What is the joining date of the staff member named Janessa Sawayn?",
    "question_toks": [
      "What",
      "is",
      "the",
      "joining",
      "date",
      "of",
      "the",
      "staff",
      "member",
      "named",
      "Janessa",
      "Sawayn",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_joined_staff FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
    "query_toks": [
      "SELECT",
      "date_joined_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Janessa",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Sawayn",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_joined_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "janessa",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "sawayn",
      "'"
    ],
    "question": "Can you tell me when Janessa Sawayn began working here?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "when",
      "Janessa",
      "Sawayn",
      "began",
      "working",
      "here",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_joined_staff FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn'",
    "query_toks": [
      "SELECT",
      "date_joined_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Janessa",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Sawayn",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_joined_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "janessa",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "sawayn",
      "'"
    ],
    "question": "I'm looking for the date Janessa Sawayn joined the staff.",
    "question_toks": [
      "I",
      "'",
      "m",
      "looking",
      "for",
      "the",
      "date",
      "Janessa",
      "Sawayn",
      "joined",
      "the",
      "staff",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_joined_staff FROM Staff WHERE first_name = 'Jedidiah' AND last_name = 'Herzog'",
    "query_toks": [
      "SELECT",
      "date_joined_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Jedidiah",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Herzog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_joined_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "jedidiah",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "herzog",
      "'"
    ],
    "question": "What is the joining date of the staff member named Jedidiah Herzog?",
    "question_toks": [
      "What",
      "is",
      "the",
      "joining",
      "date",
      "of",
      "the",
      "staff",
      "member",
      "named",
      "Jedidiah",
      "Herzog",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_joined_staff FROM Staff WHERE first_name = 'Jedidiah' AND last_name = 'Herzog'",
    "query_toks": [
      "SELECT",
      "date_joined_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Jedidiah",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Herzog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_joined_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "jedidiah",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "herzog",
      "'"
    ],
    "question": "Can you tell me when Jedidiah Herzog started working here?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "when",
      "Jedidiah",
      "Herzog",
      "started",
      "working",
      "here",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_joined_staff FROM Staff WHERE first_name = 'Jedidiah' AND last_name = 'Herzog'",
    "query_toks": [
      "SELECT",
      "date_joined_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Jedidiah",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Herzog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_joined_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "jedidiah",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "herzog",
      "'"
    ],
    "question": "I'm looking for the date Jedidiah Herzog joined the staff.",
    "question_toks": [
      "I",
      "'",
      "m",
      "looking",
      "for",
      "the",
      "date",
      "Jedidiah",
      "Herzog",
      "joined",
      "the",
      "staff",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_joined_staff FROM Staff WHERE first_name = 'Camylle' AND last_name = 'Weissnat'",
    "query_toks": [
      "SELECT",
      "date_joined_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Camylle",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Weissnat",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_joined_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "camylle",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "weissnat",
      "'"
    ],
    "question": "What is the joining date of the staff member named Camylle Weissnat?",
    "question_toks": [
      "What",
      "is",
      "the",
      "joining",
      "date",
      "of",
      "the",
      "staff",
      "member",
      "named",
      "Camylle",
      "Weissnat",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_joined_staff FROM Staff WHERE first_name = 'Camylle' AND last_name = 'Weissnat'",
    "query_toks": [
      "SELECT",
      "date_joined_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Camylle",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Weissnat",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_joined_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "camylle",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "weissnat",
      "'"
    ],
    "question": "Can you tell me when Camylle Weissnat began working here?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "when",
      "Camylle",
      "Weissnat",
      "began",
      "working",
      "here",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_joined_staff FROM Staff WHERE first_name = 'Camylle' AND last_name = 'Weissnat'",
    "query_toks": [
      "SELECT",
      "date_joined_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Camylle",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Weissnat",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_joined_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "camylle",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "weissnat",
      "'"
    ],
    "question": "I'm looking for the date Camylle Weissnat joined the staff.",
    "question_toks": [
      "I",
      "'",
      "m",
      "looking",
      "for",
      "the",
      "date",
      "Camylle",
      "Weissnat",
      "joined",
      "the",
      "staff",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_left_staff FROM Staff WHERE first_name = 'Jedidiah' AND last_name = 'Herzog'",
    "query_toks": [
      "SELECT",
      "date_left_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Jedidiah",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Herzog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_left_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "jedidiah",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "herzog",
      "'"
    ],
    "question": "What is the date when Jedidiah Herzog left the staff?",
    "question_toks": [
      "What",
      "is",
      "the",
      "date",
      "when",
      "Jedidiah",
      "Herzog",
      "left",
      "the",
      "staff",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_left_staff FROM Staff WHERE first_name = 'Jedidiah' AND last_name = 'Herzog'",
    "query_toks": [
      "SELECT",
      "date_left_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Jedidiah",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Herzog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_left_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "jedidiah",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "herzog",
      "'"
    ],
    "question": "Can you tell me when Jedidiah Herzog departed from the staff?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "when",
      "Jedidiah",
      "Herzog",
      "departed",
      "from",
      "the",
      "staff",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_left_staff FROM Staff WHERE first_name = 'Jedidiah' AND last_name = 'Herzog'",
    "query_toks": [
      "SELECT",
      "date_left_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Jedidiah",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Herzog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_left_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "jedidiah",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "herzog",
      "'"
    ],
    "question": "I would like to know the date Jedidiah Herzog left the staff.",
    "question_toks": [
      "I",
      "would",
      "like",
      "to",
      "know",
      "the",
      "date",
      "Jedidiah",
      "Herzog",
      "left",
      "the",
      "staff",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_left_staff FROM Staff WHERE first_name = 'Kaitlin' AND last_name = 'Mertz'",
    "query_toks": [
      "SELECT",
      "date_left_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Kaitlin",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Mertz",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_left_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "kaitlin",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "mertz",
      "'"
    ],
    "question": "When did Kaitlin Mertz leave the staff?",
    "question_toks": [
      "When",
      "did",
      "Kaitlin",
      "Mertz",
      "leave",
      "the",
      "staff",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_left_staff FROM Staff WHERE first_name = 'Kaitlin' AND last_name = 'Mertz'",
    "query_toks": [
      "SELECT",
      "date_left_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Kaitlin",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Mertz",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_left_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "kaitlin",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "mertz",
      "'"
    ],
    "question": "What is the departure date for Kaitlin Mertz from the staff?",
    "question_toks": [
      "What",
      "is",
      "the",
      "departure",
      "date",
      "for",
      "Kaitlin",
      "Mertz",
      "from",
      "the",
      "staff",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_left_staff FROM Staff WHERE first_name = 'Kaitlin' AND last_name = 'Mertz'",
    "query_toks": [
      "SELECT",
      "date_left_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Kaitlin",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Mertz",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_left_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "kaitlin",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "mertz",
      "'"
    ],
    "question": "Can you provide the date when Kaitlin Mertz left her position in the staff?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "date",
      "when",
      "Kaitlin",
      "Mertz",
      "left",
      "her",
      "position",
      "in",
      "the",
      "staff",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_left_staff FROM Staff WHERE first_name = 'Camylle' AND last_name = 'Weissnat'",
    "query_toks": [
      "SELECT",
      "date_left_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Camylle",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Weissnat",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_left_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "camylle",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "weissnat",
      "'"
    ],
    "question": "What date did Camylle Weissnat leave the staff?",
    "question_toks": [
      "What",
      "date",
      "did",
      "Camylle",
      "Weissnat",
      "leave",
      "the",
      "staff",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_left_staff FROM Staff WHERE first_name = 'Camylle' AND last_name = 'Weissnat'",
    "query_toks": [
      "SELECT",
      "date_left_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Camylle",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Weissnat",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_left_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "camylle",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "weissnat",
      "'"
    ],
    "question": "Can you tell me the date when Camylle Weissnat departed from the staff?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "date",
      "when",
      "Camylle",
      "Weissnat",
      "departed",
      "from",
      "the",
      "staff",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_left_staff FROM Staff WHERE first_name = 'Camylle' AND last_name = 'Weissnat'",
    "query_toks": [
      "SELECT",
      "date_left_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Camylle",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Weissnat",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_left_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "camylle",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "weissnat",
      "'"
    ],
    "question": "I want to find out when Camylle Weissnat left her role on the staff.",
    "question_toks": [
      "I",
      "want",
      "to",
      "find",
      "out",
      "when",
      "Camylle",
      "Weissnat",
      "left",
      "her",
      "role",
      "on",
      "the",
      "staff",
      "."
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT nickname FROM Staff WHERE first_name = 'Jedidiah' AND last_name = 'Herzog'",
    "query_toks": [
      "SELECT",
      "nickname",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Jedidiah",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Herzog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "jedidiah",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "herzog",
      "'"
    ],
    "question": "What is the nickname of the staff member named Jedidiah Herzog?",
    "question_toks": [
      "What",
      "is",
      "the",
      "nickname",
      "of",
      "the",
      "staff",
      "member",
      "named",
      "Jedidiah",
      "Herzog",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT nickname FROM Staff WHERE first_name = 'Jedidiah' AND last_name = 'Herzog'",
    "query_toks": [
      "SELECT",
      "nickname",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Jedidiah",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Herzog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "jedidiah",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "herzog",
      "'"
    ],
    "question": "Can you tell me the nickname for the employee with the first name Jedidiah and last name Herzog?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "nickname",
      "for",
      "the",
      "employee",
      "with",
      "the",
      "first",
      "name",
      "Jedidiah",
      "and",
      "last",
      "name",
      "Herzog",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT nickname FROM Staff WHERE first_name = 'Jedidiah' AND last_name = 'Herzog'",
    "query_toks": [
      "SELECT",
      "nickname",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Jedidiah",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Herzog",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "jedidiah",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "herzog",
      "'"
    ],
    "question": "Who is the staff member called Jedidiah Herzog and what is their nickname?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "staff",
      "member",
      "called",
      "Jedidiah",
      "Herzog",
      "and",
      "what",
      "is",
      "their",
      "nickname",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT nickname FROM Staff WHERE first_name = 'Camylle' AND last_name = 'Weissnat'",
    "query_toks": [
      "SELECT",
      "nickname",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Camylle",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Weissnat",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "camylle",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "weissnat",
      "'"
    ],
    "question": "What nickname does the staff member named Camylle Weissnat go by?",
    "question_toks": [
      "What",
      "nickname",
      "does",
      "the",
      "staff",
      "member",
      "named",
      "Camylle",
      "Weissnat",
      "go",
      "by",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT nickname FROM Staff WHERE first_name = 'Camylle' AND last_name = 'Weissnat'",
    "query_toks": [
      "SELECT",
      "nickname",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Camylle",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Weissnat",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "camylle",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "weissnat",
      "'"
    ],
    "question": "Can you provide the nickname for the employee with the first name Camylle and last name Weissnat?",
    "question_toks": [
      "Can",
      "you",
      "provide",
      "the",
      "nickname",
      "for",
      "the",
      "employee",
      "with",
      "the",
      "first",
      "name",
      "Camylle",
      "and",
      "last",
      "name",
      "Weissnat",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT nickname FROM Staff WHERE first_name = 'Camylle' AND last_name = 'Weissnat'",
    "query_toks": [
      "SELECT",
      "nickname",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Camylle",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Weissnat",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "camylle",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "weissnat",
      "'"
    ],
    "question": "Who is the staff member named Camylle Weissnat and what is their nickname?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "staff",
      "member",
      "named",
      "Camylle",
      "Weissnat",
      "and",
      "what",
      "is",
      "their",
      "nickname",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT nickname FROM Staff WHERE first_name = 'Kaitlin' AND last_name = 'Mertz'",
    "query_toks": [
      "SELECT",
      "nickname",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Kaitlin",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Mertz",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "kaitlin",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "mertz",
      "'"
    ],
    "question": "What is the nickname of the staff member named Kaitlin Mertz?",
    "question_toks": [
      "What",
      "is",
      "the",
      "nickname",
      "of",
      "the",
      "staff",
      "member",
      "named",
      "Kaitlin",
      "Mertz",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT nickname FROM Staff WHERE first_name = 'Kaitlin' AND last_name = 'Mertz'",
    "query_toks": [
      "SELECT",
      "nickname",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Kaitlin",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Mertz",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "kaitlin",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "mertz",
      "'"
    ],
    "question": "Can you tell me the nickname for the employee with the first name Kaitlin and last name Mertz?",
    "question_toks": [
      "Can",
      "you",
      "tell",
      "me",
      "the",
      "nickname",
      "for",
      "the",
      "employee",
      "with",
      "the",
      "first",
      "name",
      "Kaitlin",
      "and",
      "last",
      "name",
      "Mertz",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT nickname FROM Staff WHERE first_name = 'Kaitlin' AND last_name = 'Mertz'",
    "query_toks": [
      "SELECT",
      "nickname",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "'",
      "Kaitlin",
      "'",
      "AND",
      "last_name",
      "=",
      "'",
      "Mertz",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "'",
      "kaitlin",
      "'",
      "and",
      "last_name",
      "=",
      "'",
      "mertz",
      "'"
    ],
    "question": "Who is the staff member called Kaitlin Mertz and what is their nickname?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "staff",
      "member",
      "called",
      "Kaitlin",
      "Mertz",
      "and",
      "what",
      "is",
      "their",
      "nickname",
      "?"
    ],
    "sql": {
      "select": [
        [
          0,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  }
]